@page "/admin/fields/{Id:guid}"
@page "/admin/fields/new"

@inject IAdmin data
@inject NavigationManager navigation

<PageTitle>Настройка поля</PageTitle>

<div class="block">
    <div class="block-title">
        <div class="block-title-text">
            Редактирование поля
        </div>
    </div>
    <div class="block-content">
        <EditForm Class="w-100" Model="field" OnValidSubmit="OnValidSumbit">
            <div class="form-text">Номер поля</div>
            <div class="form-input w-100 mb-3">
                <InputNumber class="form-control" placeholder="Введите номер поля" @bind-Value="field.Number" />
            </div>
            <div class="form-text">Название поля</div>
            <div class="form-input w-100 mb-3">
                <InputText class="form-control mb-3" placeholder="Введите название поля" @bind-Value="field.Name" />
            </div>
            <div class="form-text">Placeholder</div>
            <div class="form-input w-100 mb-3">
                <InputText class="form-control mb-3" placeholder="Введите Placeholder для поля" @bind-Value="field.Placeholder" />
            </div>
            <div class="d-flex flex-row gap-2 mt-2 mb-2 justify-content-center w-100">
                <Button Color="ButtonColor.Success" Type="ButtonType.Submit">Сохранить</Button>
                <a type="button" class="btn btn-secondary" href="/admin/fields">Назад</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public Guid Id { set; get; }
    Field field = default!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (Id != Guid.Empty)
        {
            field = await data.Field.GetByIdAsync(Id);
        }
        else
        {
            field = new();
        }
    }

    async Task OnValidSumbit()
    {
        await data.Field.SaveAsync(field);

        navigation.NavigateTo("/admin/fields");
    }
}
