@page "/admin/markblocks/{Id:guid}"
@page "/admin/markblocks/new"

@inject IAdminService data
@inject NavigationManager navigation

<PageTitle>Настройка MaarkBlock</PageTitle>

<div class="block">
    <div class="block-title">
        <div class="block-title-text">
            Редактирование блока
        </div>
    </div>
    <div class="block-content">
        <EditForm Class="w-100" Model="block" OnValidSubmit="OnValidSumbit">
            <div class="form-text">Номер блока</div>
            <div class="form-input w-100 mb-3">
                <InputNumber class="form-control mb-3" placeholder="Введите номер блока" @bind-Value="block.Number" />
            </div>
            <div class="form-text">Название блока</div>
            <div class="form-input w-100 mb-3">
                <InputText class="form-control mb-3" placeholder="Введите название блока" @bind-Value="block.Name" />
            </div>

            <div class="d-flex flex-row gap-2 mt-2 mb-2 justify-content-center w-100">
                <Button Color="ButtonColor.Success" Type="ButtonType.Submit">Сохранить</Button>
                <a type="button" class="btn btn-secondary" href="/admin/markblocks">Назад</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public Guid Id { set; get; }
    MarkBlock block = default!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (Id != Guid.Empty)
        {
            block = await data.GetMarkBlockByIdAsync(Id);
        }
        else
        {
            block = new();
        }
    }

    async Task OnValidSumbit()
    {
        await data.SaveMarkBlockAsync(block);
        navigation.NavigateTo("/admin/markblocks");
    }
}

