@page "/admin/columns/{Id:guid}"
@page "/admin/columns/new"

@inject IAdmin data
@inject NavigationManager navigation

<PageTitle>Настройка столбца</PageTitle>

<div class="block">
    <div class="block-title">
        <div class="block-title-text">
            Редактирование столбца
        </div>
    </div>
    <div class="block-content">
        <EditForm Class="w-100" Model="column" OnValidSubmit="OnValidSumbit">
            <div class="form-text">Номер столбцы</div>
            <div class="form-input w-100 mb-3">
                <InputNumber class="form-control" placeholder="Введите номер таблицы" @bind-Value="column.Number" />
            </div>
            <div class="form-text">Название столбца</div>
            <div class="form-input w-100 mb-3">
                <InputText class="form-control mb-3" placeholder="Введите название таблицы" @bind-Value="column.Name" />
            </div>

            <div class="form-text">Таблица</div>
            <div class="form-input w-100 mb-3">
                <InputSelect class="form-control" @bind-Value="column.TableId">
                    <option value="@Guid.Empty" disabled selected hidden>Выберите таблицу</option>
                    @foreach (var table in tables)
                    {
                        <option value="@table.Id">@(table.Name!.Length > 120 ? table.Name.Substring(0, 120) + "..." : table.Name)</option>
                    }
                </InputSelect>
            </div>

            <div class="d-flex flex-row gap-2 mt-2 mb-2 justify-content-center w-100">
                <Button Color="ButtonColor.Success" Type="ButtonType.Submit">Сохранить</Button>
                <a type="button" class="btn btn-secondary" href="/admin/columns">Назад</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public Guid Id { set; get; }
    Column column = new();

    IEnumerable<Table> tables = Enumerable.Empty<Table>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (Id != Guid.Empty)
        {
            column = await data.Column.GetByIdAsync(Id);
        }

        tables = await data.Table.GetAllAsync();
    }

    async Task OnValidSumbit()
    {
        if (column.TableId != Guid.Empty)
        {
            column.Table = tables.Single(t => t.Id == column.TableId);
        }

        await data.Column.SaveAsync(column);
        navigation.NavigateTo("/admin/columns");
    }
}
