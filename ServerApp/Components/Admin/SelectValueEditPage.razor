@page "/admin/selectvalues/{Id:guid}"
@page "/admin/selectvalues/new"

@inject IAdmin data
@inject NavigationManager navigation

<PageTitle>Настройка SelectValue</PageTitle>

<div class="block">
    <div class="block-title">
        <div class="block-title-text">
            Редактирование SelectValue
        </div>
    </div>
    <div class="block-content">
        <EditForm Class="w-100" Model="selectValue" OnValidSubmit="OnValidSumbit">
            <div class="form-text">Значение SelectValue</div>
            <div class="form-input w-100 mb-3">
                <InputText class="form-control mb-3" placeholder="Введите значение SelectValue" @bind-Value="selectValue.Value" />
            </div>

            @if (selectValue.FieldId != null)
            {
                <div class="form-text">Field</div>
                <div class="form-input w-100 mb-3">
                    <InputText class="form-control mb-3" Disabled="true" @bind-Value="selectValue.Field!.Name" />
                </div>
            }

            @if (selectValue.ColumnId != null)
            {
                <div class="form-text">Column</div>
                <div class="form-input w-100 mb-3">
                    <InputText class="form-control mb-3" Disabled="true" @bind-Value="selectValue.Column!.Name" />
                </div>
            }
            @* <div class="form-text">Field</div>
            <div class="form-input w-100 mb-3">
                <InputSelect class="form-control" @bind-Value="selectValue.FieldId">
                    <option value="@Guid.Empty" disabled selected hidden>Выберите Field</option>
                    @foreach (var field in fields)
                    {
                        <option value="@field.Id">@field.Name</option>
                    }
                </InputSelect>
            </div>

            <div class="form-text">Column</div>
            <div class="form-input w-100 mb-3">
                <InputSelect class="form-control" @bind-Value="selectValue.ColumnId">
                    <option value="@Guid.Empty" disabled selected hidden>Выберите Column</option>
                    @foreach (var column in columns)
                    {
                        <option value="@column.Id">@column.Name</option>
                    }
                </InputSelect>
            </div> *@

            <div class="d-flex flex-row gap-2 mt-2 mb-2 justify-content-center w-100">
                <Button Color="ButtonColor.Success" Type="ButtonType.Submit">Сохранить</Button>
                <a type="button" class="btn btn-secondary" href="/admin/selectvalues">Назад</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public Guid Id { set; get; }
    SelectValue selectValue = new();

    // IEnumerable<Field> fields = Enumerable.Empty<Field>();
    // IEnumerable<Column> columns = Enumerable.Empty<Column>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (Id != Guid.Empty)
        {
            selectValue = await data.SelectValue.GetByIdAsync(Id);
        }

        // fields = await data.Field.GetAllAsync();
        // columns = await data.Column.GetAllAsync();
    }

    async Task OnValidSumbit()
    {
        // if (selectValue.FieldId != Guid.Empty)
        // {
        //     selectValue.Field = fields.Single(f => f.Id == selectValue.FieldId);
        // }

        // if (selectValue.ColumnId != Guid.Empty)
        // {
        //     selectValue.Column = columns.Single(c => c.Id == selectValue.ColumnId);
        // }

        await data.SelectValue.SaveAsync(selectValue);

        navigation.NavigateTo("/admin/selectvalues");
    }
}