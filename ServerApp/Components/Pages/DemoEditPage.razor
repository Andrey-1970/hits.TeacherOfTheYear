@page "/demo"
@rendermode InteractiveServer

@inject IDataService data

@if (Model != null)
{
    <InputSelect Value="Model.SelectedTrackId" TValue="Guid?" ValueExpression="() => Model.SelectedTrackId" ValueChanged="(value) => OnTrackIdChanged(value)">
        <option value="">Выберите трек</option>
        @foreach (var track in Model.Tracks)
        {
            <option value="@track.Id">@track.Name</option>
        }
    </InputSelect>
    if (Model.SelectedTrackId != null)
    {
        <TabsForBlocks Model="Model"></TabsForBlocks>
    }

    
}

@code {
    DemoEditModel? Model;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Model = await data.GetCurrentUserEditModelAsync();
    }

    protected async Task OnTrackIdChanged(Guid? value)
    {
        if (Model == null) return;

        Model.SelectedTrackId = value;
        Model.EditBlocks = await data.GetEditBlocksModelByTrackId(value);
        Model.SelectedEditBlockId = Model.EditBlocks.First().Id;
    }

    void SubmitForm()
    {

    }
}
