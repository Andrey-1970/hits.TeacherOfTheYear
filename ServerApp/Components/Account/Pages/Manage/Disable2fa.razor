@page "/account/manage/disable-2fa"

@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<Disable2fa> Logger

<PageTitle>Отключение двуxфакторной аутентификации</PageTitle>

<h3>Отключение двуxфакторной аутентификации</h3>
<StatusMessage />

<div class="alert alert-warning" role="alert">
    <p>
        <strong>Это действие отключает только двуxфакторную аутентификацию.</strong>
    </p>
    <p>
        Отключение 2FA не приводит к изменению ключей, используемых в приложениях для проверки подлинности. Если вы хотите изменить ключ,
        используемый в приложении для проверки подлинности, вам следует <a href="account/manage/reset-authenticator">сбросить ключи для проверки подлинности.</a>
    </p>
</div>

<div>
    <form @formname="disable-2fa" @onsubmit="OnSubmitAsync" method="post">
        <AntiforgeryToken />
        <Button Type="ButtonType.Submit"
                Color="ButtonColor.Danger">
            Отключить двухфакторную аутентификацию
        </Button>
    </form>
</div>

@code {
    private ApplicationUser user = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

        if (HttpMethods.IsGet(HttpContext.Request.Method) && !await UserManager.GetTwoFactorEnabledAsync(user))
        {
            throw new InvalidOperationException("Не удается отключить двухфакторную аутентификацию для пользователя, так как в данный момент она не включена.");
        }
    }

    private async Task OnSubmitAsync()
    {
        var disable2faResult = await UserManager.SetTwoFactorEnabledAsync(user, false);
        if (!disable2faResult.Succeeded)
        {
            throw new InvalidOperationException("Произошла непредвиденная ошибка при отключении двухфакторной аутентификации.");
        }

        var userId = await UserManager.GetUserIdAsync(user);
        Logger.LogInformation("Пользователь с ID '{UserId}' отключил двухфакторную аутентификацию.", userId);
        RedirectManager.RedirectToWithStatus(
            "account/manage/two-factor-authentication",
            "Двуxфакторная аутентификация была отключена. Вы можете повторно включить её при настройке приложения для аутентификации",
            HttpContext);
    }
}

