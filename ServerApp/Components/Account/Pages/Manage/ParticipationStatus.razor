@page "/account/manage/participation-status"

@inject NavigationManager NavManager
@inject IDataService data

<PageTitle>Анкета участника</PageTitle>

<h3>Анкета участника</h3>
<StatusMessage />

@if (status == "Нет заявки")
{
    <div class="w-100">
        
        @if (DateTime.Now <= new DateTime(2024, 10, 20))
        {
            <div class="alert alert-primary" role="alert">
                Ваш текущий статус — <strong>Посетитель</strong>. Чтобы получить статус <strong>Участник</strong>, вам нужно подать заявку
                и дождаться решения администрации. Вы можете сделать это с помощью кнопки ниже.
            </div>
            <Button Type="ButtonType.Link"
                    Color="ButtonColor.Success"
                    To="/application-form#">
                Подать заявку
            </Button>
        }
        else
        {
            <div class="alert alert-danger" role="alert">Прием заявок завершен.</div>
        }
    </div>
}
else if (status == "В ожидании заполнения")
{
    <form @formname="AwaitingCompletion" class="w-100" method="post">
        <AntiforgeryToken />

        @if (DateTime.Now <= new DateTime(2024, 10, 20))
        {
            <div class="alert alert-secondary" role="alert">
                Заявка на участие создана и <strong>ожидает заполнения</strong>.
            </div>
            <Button Type="ButtonType.Link"
                    Color="ButtonColor.Primary"
                    To="/application-form#">
                Продолжить заполнение
            </Button>
            <Button Type="ButtonType.Link"
                    Color="ButtonColor.Danger"
                    To="/account/manage/delete-application#">
                Удалить заявку
            </Button>
        }
        else
        {
            <div class="alert alert-danger" role="alert">Прием заявок завершен.</div>
        }
        
    </form>
}
else if (status == "В ожидании рассмотрения")
{
    <form @formname="AwaitingReview" class="w-100" method="post">
        <AntiforgeryToken />

        <div class="alert alert-warning" role="alert">
            Ваша заявка <strong>ожидает рассмотрения экспертами</strong>. Пожалуйста, дождитесь решения.
        </div>
        <Button Type="ButtonType.Link"
                Color="ButtonColor.Danger"
                To="/account/manage/withdraw-application#">
            Отозвать заявку
        </Button>
    </form>
}
else if (status == "В процессе рассмотрения")
{
    <div class="w-100">
        <div class="alert alert-info" role="alert">
            Ваша заявка <strong>в процессе рассмотрения экспертом</strong>, совсем скоро он примет решение
        </div>
    </div>
}
else if (status == "Одобрена")
{
    <form @formname="Approved" class="w-100" method="post">
        <AntiforgeryToken />

        <div class="alert alert-success" role="alert">
            Поздравляем! Наши эксперты <strong>одобрили вашу заявку на участие</strong> в конкурсе. Вы получаете статус <strong>Участник</strong>.
        </div>
        <Button Type="ButtonType.Link"
                Color="ButtonColor.Danger"
                To="/account/manage/withdraw-application#">
            Отозвать заявку
        </Button>
    </form>
}
else if (status == "Отклонена")
{
    <form @formname="Denied" class="w-100" method="post">
        <AntiforgeryToken />

        <div class="alert alert-danger" role="alert">
            <p>
                К сожалению, наши специалисты <strong>отклонили заявку</strong> на ваше участие. Однако мы предоставляем возможность повторной отправки,
                поэтому внимательно изучите причину отказа. Если у вас возникнут вопросы, вы можете обратиться в службу поддержки через форму обратной связи.
            </p>
            @if (comments.Any())
            {
                <ul class="m-0">
                    @foreach (var comment in comments)
                    {
                        <li>@comment</li>
                    }
                </ul>
            }
        </div>
        <Button Type="ButtonType.Link"
                Color="ButtonColor.Primary"
                To="/application-form#">
            Редактировать заявку
        </Button>
        <Button Type="ButtonType.Link"
                Color="ButtonColor.Danger"
                To="/account/manage/delete-application#">
            Удалить заявку
        </Button>
        <Button Type="ButtonType.Link"
                Color="ButtonColor.Primary"
                To="/feedback#">
            Связаться с поддержкой
        </Button>
    </form>
}
else if (status == "Оценена")
{
    <form @formname="Assessed" class="w-100" method="post">
        <AntiforgeryToken />

        <div class="alert alert-success" role="alert">
            Ваша анкета была оценена экспертом
        </div>
        <Button Type="ButtonType.Link"
                Color="ButtonColor.Danger"
                To="/account/manage/delete-application#">
            Удалить заявку
        </Button>
    </form>
}

@code {
    string? status;
    IEnumerable<string>? comments = [];

    protected override async Task OnInitializedAsync()
    {
        status = await data.GetApplicationStatusNameAsync();

        var userInfo = await data.GetCurrentUserInfoAsync();
        comments = await data.GetCommentsForApplicationAsync(userInfo!.Applications.FirstOrDefault()?.Id);
    }
}
