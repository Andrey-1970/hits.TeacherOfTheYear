@page "/account/resend-email-confirmation"
@using ServerApp.Services;
@inject IMailService MailService
@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Повторное подтверждение почты</PageTitle>

<EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post" class="form-layout">
    <p class="form-title">Повторное подтверждение почты</p>

    <StatusMessage Message="@message" />
    <DataAnnotationsValidator />

    <div class="form-input">
        <ValidationMessage For="() => Input.Email" class="text-danger" />
        <InputText @bind-Value="Input.Email" class="form-control" aria-required="true" placeholder="Электронная почта" />
    </div>
    <div class="form-buttons">
        <Button Type="ButtonType.Submit"
                Color="ButtonColor.Primary">
            Отправить
        </Button>
    </div>
</EditForm>

@code {
    private string? message;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email!);
        if (user is null)
        {
            message = "Письмо с подтверждением отправлено. Пожалуйста, проверьте свой адрес электронной почты.";
            return;
        }

        var userId = await UserManager.GetUserIdAsync(user);
        var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("account/confirm-email").AbsoluteUri,
            new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });
        string htmlBody = $@"
            <div class='text-left' style='font-family: Arial, sans-serif; padding: 20px;'>
                Здравствуйте, уважаемый участник всеросийского конкурса Педагог Года!<br><br>

                Вы зарегистрировались в личном кабинете на сайте
                <a href='https://google.com' style='color: blue; text-decoration: underline;'>клик</a>.
                Ваша учетная запись создана, но нуждается в активации.<br><br>

                Чтобы активировать Вашу учетную запись, нужно перейти по
                <a href='{callbackUrl}' style='color: blue; text-decoration: underline;'>ссылке клик</a>.<br><br>

                На это письмо не нужно отвечать, так как оно создано автоматически и предназначено только для уведомления.<br><br>
                <hr style='border: 1px solid #ccc; margin: 20px 0;'>
                В случае, если Вы считаете, что письмо поступило ошибочно - проигнорируйте его.<br
            </div>";


        await MailService.SendEmailAsync(Input.Email, "Подтверждение регистрации на Педагог Года", htmlBody);
        message = "Письмо с подтверждением отправлено. Пожалуйста, проверьте свой адрес электронной почты.";

    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "Необходимо указать адрес электронной почты")]
        [EmailAddress(ErrorMessage = "Указан некорректный адрес электронной почты")]
        public string Email { get; set; } = "";
    }
}

