@page "/account/register-confirmation"
@using ServerApp.Services;
@inject IMailService MailService
@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Подтверждение регистрации</PageTitle>

<div class="form-layout">
    <p class="form-title">Подтвердите регистрацию</p>

    <StatusMessage Message="@statusMessage" />

    <div class="text-center">Пожалуйста, проверьте свою электронную почту, чтобы подтвердить свою учетную запись.</div>
</div>

@code {
    string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Отсутствует пользователь с данным адресом электронной почты";
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            // Once you add a real email sender, you should remove this code that lets you confirm the account
            var userId = await UserManager.GetUserIdAsync(user);
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("account/confirm-email").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
            string htmlBody = $@"
            <div class='text-left' style='font-family: Arial, sans-serif; padding: 20px;'>
                Здравствуйте, уважаемый участник всеросийского конкурса Педагог Года!<br><br>

                Вы зарегистрировались в личном кабинете на сайте
                <a href='https://google.com' style='color: blue; text-decoration: underline;'>клик</a>.
                Ваша учетная запись создана, но нуждается в активации.<br><br>

                Чтобы активировать Вашу учетную запись, нужно перейти по
                <a href='{emailConfirmationLink}' style='color: blue; text-decoration: underline;'>ссылке клик</a>.<br><br>

                На это письмо не нужно отвечать, так как оно создано автоматически и предназначено только для уведомления.<br><br>
                <hr style='border: 1px solid #ccc; margin: 20px 0;'>
                В случае, если Вы считаете, что письмо поступило ошибочно - проигнорируйте его.<br
            </div>";


                await MailService.SendEmailAsync(Email, "Подтверждение регистрации на Педагог Года", htmlBody);
        }
    }
}