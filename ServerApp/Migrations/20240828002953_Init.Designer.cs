// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp.Data;

#nullable disable

namespace ServerApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240828002953_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.Property<Guid>("EditBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("EditBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("EditBlockTrack");

                    b.HasData(
                        new
                        {
                            EditBlocksId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            TracksId = new Guid("638f22e5-059f-4c13-ad9b-eebc864f860c")
                        },
                        new
                        {
                            EditBlocksId = new Guid("3ab1cb64-741b-4c64-a527-62424d60488b"),
                            TracksId = new Guid("638f22e5-059f-4c13-ad9b-eebc864f860c")
                        },
                        new
                        {
                            EditBlocksId = new Guid("cb0e515f-a19d-4efd-88c3-ac1abadcaee8"),
                            TracksId = new Guid("638f22e5-059f-4c13-ad9b-eebc864f860c")
                        },
                        new
                        {
                            EditBlocksId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            TracksId = new Guid("638f22e5-059f-4c13-ad9b-eebc864f860c")
                        },
                        new
                        {
                            EditBlocksId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            TracksId = new Guid("3fce6540-b38d-4080-9cb6-7156b4f79c51")
                        },
                        new
                        {
                            EditBlocksId = new Guid("3ab1cb64-741b-4c64-a527-62424d60488b"),
                            TracksId = new Guid("3fce6540-b38d-4080-9cb6-7156b4f79c51")
                        },
                        new
                        {
                            EditBlocksId = new Guid("cb0e515f-a19d-4efd-88c3-ac1abadcaee8"),
                            TracksId = new Guid("3fce6540-b38d-4080-9cb6-7156b4f79c51")
                        },
                        new
                        {
                            EditBlocksId = new Guid("ed6f8756-d096-4817-9495-59b677e00bfb"),
                            TracksId = new Guid("3fce6540-b38d-4080-9cb6-7156b4f79c51")
                        });
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.Property<Guid>("FieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.HasKey("FieldsId", "MarkBlocksId");

                    b.HasIndex("MarkBlocksId");

                    b.ToTable("FieldMarkBlock");

                    b.HasData(
                        new
                        {
                            FieldsId = new Guid("a0708591-82d3-4002-a66c-ef450af6ffec"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("4c9bc5e8-5d97-48bb-9690-85d4a8c9ba57"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("87e1622f-0d54-45ca-be1a-929a80900dfe"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("e07ec0b3-c45f-4f72-9043-9334a7bad6a6"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("83039f24-2d02-43f7-af16-9af12fea01bd"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("a61a75f3-81af-422c-9221-70ca1a254690"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("b9810768-e49b-44fb-ad22-405f21f420c8"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("2bc68211-58a8-4904-9dd6-e734e141c976"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("25f16c99-3731-4287-9dac-067c376cb26f"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("d5933286-57b3-457d-abe9-14508b9744a6"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("c466f247-3e83-4edf-8f93-246c668aafc2"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("3d9f1e55-5cc4-44c8-9d5c-c60e34949368"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("53e34663-67cf-4f24-9f84-7ae25885ce45"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("680c8ca9-d78c-468c-9e4f-f349de65b6f4"),
                            MarkBlocksId = new Guid("8599e9e0-0a48-428a-aeaf-3b6dc78a8eb3")
                        },
                        new
                        {
                            FieldsId = new Guid("60151047-1788-47d1-8c1d-3950077bf7c1"),
                            MarkBlocksId = new Guid("8599e9e0-0a48-428a-aeaf-3b6dc78a8eb3")
                        },
                        new
                        {
                            FieldsId = new Guid("a6020b7c-3e13-4939-b64f-9c594be851b0"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("24153a28-3dd9-4dc5-9ecd-b40ac068a829"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("d2252b24-d6e3-4cd6-8053-1ceeb27b61f0"),
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76")
                        },
                        new
                        {
                            FieldsId = new Guid("bb895263-f2bc-4085-97b0-905a9a7528d4"),
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6")
                        },
                        new
                        {
                            FieldsId = new Guid("a0b3598d-5fe6-4e39-b494-428da6ae1dc9"),
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6")
                        },
                        new
                        {
                            FieldsId = new Guid("236ccdc8-2ecb-42ed-9d12-4b2991261bdd"),
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6")
                        },
                        new
                        {
                            FieldsId = new Guid("aa3afe96-a2c4-423c-ba6f-64227a20e929"),
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6")
                        },
                        new
                        {
                            FieldsId = new Guid("1038291c-d401-4ef7-8da6-26b89bf3d0bd"),
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6")
                        },
                        new
                        {
                            FieldsId = new Guid("a6020b7c-3e13-4939-b64f-9c594be851b0"),
                            MarkBlocksId = new Guid("afee9c43-ee38-4153-9061-596062709fe8")
                        },
                        new
                        {
                            FieldsId = new Guid("a6020b7c-3e13-4939-b64f-9c594be851b0"),
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207")
                        },
                        new
                        {
                            FieldsId = new Guid("79247708-b1bc-4a7b-a6ce-e18212287494"),
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207")
                        },
                        new
                        {
                            FieldsId = new Guid("bcc1456b-d6c7-4b0f-b86d-660e9f02bc9c"),
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207")
                        });
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TablesId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TablesId");

                    b.HasIndex("TablesId");

                    b.ToTable("MarkBlockTable");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            TablesId = new Guid("049dc36c-4b31-44ec-bab9-d3fb409543a9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            TablesId = new Guid("a3526b25-1f61-4ff0-87c4-71171c0371d1")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            TablesId = new Guid("3d8bf1f0-fb5d-4142-af8b-c231f1cb296e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            TablesId = new Guid("c883cc1b-0685-4818-ac51-28fff13b8a12")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("448d588e-6d55-4444-a6fa-6fc1bf94d73c"),
                            TablesId = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("448d588e-6d55-4444-a6fa-6fc1bf94d73c"),
                            TablesId = new Guid("4aa4fa56-0bda-4312-8388-3f978031d3ea")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("afee9c43-ee38-4153-9061-596062709fe8"),
                            TablesId = new Guid("69876ab7-bc4f-43ca-94a6-8db187720dee")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("afee9c43-ee38-4153-9061-596062709fe8"),
                            TablesId = new Guid("0c3bb598-0218-46fa-b24b-53d4a4e46535")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            TablesId = new Guid("69876ab7-bc4f-43ca-94a6-8db187720dee")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            TablesId = new Guid("7592f6e1-cb5a-4f0a-aaff-b8acc4272fdb")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            TablesId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            TablesId = new Guid("549d0439-d7f2-4003-8c86-0dbb0b1e5fec")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c8e63b5b-ac96-4de8-82b5-0df344c35c6f"),
                            TablesId = new Guid("0c3bb598-0218-46fa-b24b-53d4a4e46535")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c8e63b5b-ac96-4de8-82b5-0df344c35c6f"),
                            TablesId = new Guid("d965992c-18f9-47a8-a697-6769e455c376")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c8e63b5b-ac96-4de8-82b5-0df344c35c6f"),
                            TablesId = new Guid("c67fb5a3-1e7b-4b61-ab7c-edc251944aed")
                        });
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("MarkBlockTrack");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76"),
                            TracksId = new Guid("638f22e5-059f-4c13-ad9b-eebc864f860c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            TracksId = new Guid("638f22e5-059f-4c13-ad9b-eebc864f860c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("448d588e-6d55-4444-a6fa-6fc1bf94d73c"),
                            TracksId = new Guid("638f22e5-059f-4c13-ad9b-eebc864f860c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("afee9c43-ee38-4153-9061-596062709fe8"),
                            TracksId = new Guid("638f22e5-059f-4c13-ad9b-eebc864f860c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("8599e9e0-0a48-428a-aeaf-3b6dc78a8eb3"),
                            TracksId = new Guid("638f22e5-059f-4c13-ad9b-eebc864f860c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76"),
                            TracksId = new Guid("3fce6540-b38d-4080-9cb6-7156b4f79c51")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            TracksId = new Guid("3fce6540-b38d-4080-9cb6-7156b4f79c51")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c8e63b5b-ac96-4de8-82b5-0df344c35c6f"),
                            TracksId = new Guid("3fce6540-b38d-4080-9cb6-7156b4f79c51")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("8599e9e0-0a48-428a-aeaf-3b6dc78a8eb3"),
                            TracksId = new Guid("3fce6540-b38d-4080-9cb6-7156b4f79c51")
                        });
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "MarksId");

                    b.HasIndex("MarksId");

                    b.ToTable("MarkMarkBlock");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            MarksId = new Guid("dc951339-f822-4928-bf8c-b4b23df10fc3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            MarksId = new Guid("96f3d373-7bc9-4ada-a8c0-1306ab6f87fc")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            MarksId = new Guid("b02b312a-c23d-4c3b-9669-d77533960bf1")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            MarksId = new Guid("5e198322-3fda-4caf-ab25-0bfe25bbdce0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            MarksId = new Guid("b267bf90-cd28-4eb6-abda-22915d6043bc")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            MarksId = new Guid("e8d70c40-572f-4f8c-a67e-91c9e01f1c1f")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            MarksId = new Guid("c40f5636-a237-4d0f-999d-6ce67dd746f3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("448d588e-6d55-4444-a6fa-6fc1bf94d73c"),
                            MarksId = new Guid("1cd86cc8-539e-4799-aad2-e7fd7704141e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("448d588e-6d55-4444-a6fa-6fc1bf94d73c"),
                            MarksId = new Guid("4fcc0300-7943-4b6c-a136-08fc2e913de0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("448d588e-6d55-4444-a6fa-6fc1bf94d73c"),
                            MarksId = new Guid("6462ae78-a08c-465f-a790-c21746993cb4")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("448d588e-6d55-4444-a6fa-6fc1bf94d73c"),
                            MarksId = new Guid("44dfe9e5-d810-4aa8-b6ea-ac442ec10a90")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("448d588e-6d55-4444-a6fa-6fc1bf94d73c"),
                            MarksId = new Guid("70e10b54-3408-4522-a747-fc1d114d4bae")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("afee9c43-ee38-4153-9061-596062709fe8"),
                            MarksId = new Guid("69c1fd01-14b8-4dc1-8db0-45a1706fc6bc")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("afee9c43-ee38-4153-9061-596062709fe8"),
                            MarksId = new Guid("9407309c-164f-4d63-a587-9b1e74906d9c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("afee9c43-ee38-4153-9061-596062709fe8"),
                            MarksId = new Guid("49f92943-f7c9-4002-8a19-03178dfb3f34")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            MarksId = new Guid("69c1fd01-14b8-4dc1-8db0-45a1706fc6bc")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            MarksId = new Guid("9407309c-164f-4d63-a587-9b1e74906d9c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            MarksId = new Guid("69f393c4-53e6-4310-ab7b-663a8da92446")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            MarksId = new Guid("ca44d760-d67c-469d-8e92-4980e0c1b863")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            MarksId = new Guid("6342b89d-4929-46b9-a738-38bd985f598c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            MarksId = new Guid("f4a3e830-f911-4b4e-82fb-ec95c6524689")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            MarksId = new Guid("7f0650f2-af26-4faf-b9a7-0d70c8e52770")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            MarksId = new Guid("879d5f66-37a4-46aa-8bff-470cbf95d79c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            MarksId = new Guid("c5a8d8df-5a88-4b44-b225-f04040c6e195")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c8e63b5b-ac96-4de8-82b5-0df344c35c6f"),
                            MarksId = new Guid("49f92943-f7c9-4002-8a19-03178dfb3f34")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c8e63b5b-ac96-4de8-82b5-0df344c35c6f"),
                            MarksId = new Guid("096ab423-0559-4d6b-aa8b-ab976b00954a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c8e63b5b-ac96-4de8-82b5-0df344c35c6f"),
                            MarksId = new Guid("5c839daf-a544-4e99-bab4-37caef86dc6c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c8e63b5b-ac96-4de8-82b5-0df344c35c6f"),
                            MarksId = new Guid("43f494df-c99d-4f82-9ffc-0713fa1d74cf")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c8e63b5b-ac96-4de8-82b5-0df344c35c6f"),
                            MarksId = new Guid("4be287a4-f3bf-4d54-b056-7e7efaec962e")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationStatusId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ReviewerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationStatusId");

                    b.HasIndex("ReviewerId");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("ApplicationForms");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Status")
                        .IsUnique();

                    b.ToTable("ApplicationStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("53fafd97-0097-4dae-8cc8-5cd76e7aa218"),
                            Number = 1,
                            Status = "В ожидании заполнения"
                        },
                        new
                        {
                            Id = new Guid("ce8d46d4-4487-4586-afed-3656f1d97b0a"),
                            Number = 2,
                            Status = "В ожидании оценки"
                        },
                        new
                        {
                            Id = new Guid("cd20811b-c11a-43a9-a3d5-59291629e1c9"),
                            Number = 3,
                            Status = "В процессе оценки"
                        },
                        new
                        {
                            Id = new Guid("79a33e64-dd1a-45f6-b355-409f8fbe29e1"),
                            Number = 4,
                            Status = "Одобрена"
                        },
                        new
                        {
                            Id = new Guid("799295a8-c1e1-4d50-acde-97f93d930652"),
                            Number = 5,
                            Status = "Отклонена"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.BlockReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Commentary")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkBlockId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("MarkBlockId");

                    b.ToTable("BlockReviews");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disable")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPrefilled")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RowId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("RowId");

                    b.HasIndex("ApplicationId", "RowId", "ColumnId")
                        .IsUnique();

                    b.ToTable("CellVals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("47d95954-393b-4b43-b1d4-3d7b7fc293b7"),
                            ColumnId = new Guid("6d663b1e-f1a3-42d9-a75d-38851b1062ad"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("648e2a02-23ef-4228-a45c-aa151d2c6cd7"),
                            Value = "ScopusID"
                        },
                        new
                        {
                            Id = new Guid("82fbcda5-4935-4e47-ba14-41b94db85ee5"),
                            ColumnId = new Guid("01505f8a-8657-4a9a-b2bb-543d7f7fb3f5"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("648e2a02-23ef-4228-a45c-aa151d2c6cd7")
                        },
                        new
                        {
                            Id = new Guid("50e77ba2-6907-4c59-817f-2cc25a5192ec"),
                            ColumnId = new Guid("0f15ef2d-2318-4a14-b8f7-c8b120315c02"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("648e2a02-23ef-4228-a45c-aa151d2c6cd7")
                        },
                        new
                        {
                            Id = new Guid("70c2d278-6807-43e7-822a-7fb9e2537947"),
                            ColumnId = new Guid("e5a7f8d2-2a17-4f1f-848e-37ab7dcd599f"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("648e2a02-23ef-4228-a45c-aa151d2c6cd7")
                        },
                        new
                        {
                            Id = new Guid("b8deeb61-1b4c-4b58-a02c-3bdf53ebd17f"),
                            ColumnId = new Guid("ec090a2b-f734-4feb-9ddf-e72790c21bb3"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("648e2a02-23ef-4228-a45c-aa151d2c6cd7")
                        },
                        new
                        {
                            Id = new Guid("0956db95-9f1d-4388-aef0-e3f386fd0c47"),
                            ColumnId = new Guid("6d663b1e-f1a3-42d9-a75d-38851b1062ad"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("4bfa703e-df22-48d0-a7dd-3e310b34c39f"),
                            Value = "ORCiD"
                        },
                        new
                        {
                            Id = new Guid("c4c0a24c-c35e-4c18-a838-8cf24b11e1c4"),
                            ColumnId = new Guid("01505f8a-8657-4a9a-b2bb-543d7f7fb3f5"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("4bfa703e-df22-48d0-a7dd-3e310b34c39f")
                        },
                        new
                        {
                            Id = new Guid("9a76b4aa-5616-4f20-b3fe-c813d098b2cc"),
                            ColumnId = new Guid("0f15ef2d-2318-4a14-b8f7-c8b120315c02"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("4bfa703e-df22-48d0-a7dd-3e310b34c39f")
                        },
                        new
                        {
                            Id = new Guid("7d812174-ed25-4333-94cd-8f3c4ec51489"),
                            ColumnId = new Guid("e5a7f8d2-2a17-4f1f-848e-37ab7dcd599f"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("4bfa703e-df22-48d0-a7dd-3e310b34c39f")
                        },
                        new
                        {
                            Id = new Guid("8041e548-be15-4b58-897c-293e75522354"),
                            ColumnId = new Guid("ec090a2b-f734-4feb-9ddf-e72790c21bb3"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("4bfa703e-df22-48d0-a7dd-3e310b34c39f")
                        },
                        new
                        {
                            Id = new Guid("364f62ae-1de7-48d5-bb58-1c532cd6ce03"),
                            ColumnId = new Guid("6d663b1e-f1a3-42d9-a75d-38851b1062ad"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("70602ec1-b379-490d-ac54-23cab0cc35c7"),
                            Value = "ResearcherID"
                        },
                        new
                        {
                            Id = new Guid("014aea25-33f0-4e2d-bddd-3b1cbfa2ca54"),
                            ColumnId = new Guid("01505f8a-8657-4a9a-b2bb-543d7f7fb3f5"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("70602ec1-b379-490d-ac54-23cab0cc35c7")
                        },
                        new
                        {
                            Id = new Guid("c008134e-5746-45ef-bfc7-418e485ef732"),
                            ColumnId = new Guid("0f15ef2d-2318-4a14-b8f7-c8b120315c02"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("70602ec1-b379-490d-ac54-23cab0cc35c7")
                        },
                        new
                        {
                            Id = new Guid("56d65788-df92-4bcd-9fdb-b9dbf9c523f9"),
                            ColumnId = new Guid("e5a7f8d2-2a17-4f1f-848e-37ab7dcd599f"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("70602ec1-b379-490d-ac54-23cab0cc35c7")
                        },
                        new
                        {
                            Id = new Guid("db4cbd32-4323-491a-bf09-29e0169e8d94"),
                            ColumnId = new Guid("ec090a2b-f734-4feb-9ddf-e72790c21bb3"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("70602ec1-b379-490d-ac54-23cab0cc35c7")
                        },
                        new
                        {
                            Id = new Guid("afad90eb-a26b-4044-9865-1fce9bd2043e"),
                            ColumnId = new Guid("6d663b1e-f1a3-42d9-a75d-38851b1062ad"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("7664222c-1a0c-45e7-a629-e50967dd516b"),
                            Value = "РИНЦ AuthorID"
                        },
                        new
                        {
                            Id = new Guid("d79ff022-18be-440c-acb3-1c623ac1145b"),
                            ColumnId = new Guid("01505f8a-8657-4a9a-b2bb-543d7f7fb3f5"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("7664222c-1a0c-45e7-a629-e50967dd516b")
                        },
                        new
                        {
                            Id = new Guid("86ac239b-8aab-4b5f-ae81-cc8326abd67e"),
                            ColumnId = new Guid("0f15ef2d-2318-4a14-b8f7-c8b120315c02"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("7664222c-1a0c-45e7-a629-e50967dd516b")
                        },
                        new
                        {
                            Id = new Guid("19559ed4-e43b-4375-b590-e7a34ca5d860"),
                            ColumnId = new Guid("e5a7f8d2-2a17-4f1f-848e-37ab7dcd599f"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("7664222c-1a0c-45e7-a629-e50967dd516b")
                        },
                        new
                        {
                            Id = new Guid("fa28bd15-e83d-4ad7-8dcc-3c2ee7e4612b"),
                            ColumnId = new Guid("ec090a2b-f734-4feb-9ddf-e72790c21bb3"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("7664222c-1a0c-45e7-a629-e50967dd516b")
                        },
                        new
                        {
                            Id = new Guid("e35661b2-4de4-4686-b09f-5def5664ffe3"),
                            ColumnId = new Guid("6d663b1e-f1a3-42d9-a75d-38851b1062ad"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("0ea9f22f-cb65-4941-914c-91ade32fbd15"),
                            Value = "Google Scholar ID"
                        },
                        new
                        {
                            Id = new Guid("a806ca44-fdda-4303-9e51-2afba6463b69"),
                            ColumnId = new Guid("01505f8a-8657-4a9a-b2bb-543d7f7fb3f5"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("0ea9f22f-cb65-4941-914c-91ade32fbd15")
                        },
                        new
                        {
                            Id = new Guid("6f2fac03-41fe-440c-86c5-701c4719c767"),
                            ColumnId = new Guid("0f15ef2d-2318-4a14-b8f7-c8b120315c02"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("0ea9f22f-cb65-4941-914c-91ade32fbd15")
                        },
                        new
                        {
                            Id = new Guid("48c13524-c78d-4656-acab-72131e5948ad"),
                            ColumnId = new Guid("e5a7f8d2-2a17-4f1f-848e-37ab7dcd599f"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("0ea9f22f-cb65-4941-914c-91ade32fbd15")
                        },
                        new
                        {
                            Id = new Guid("b1287547-a377-41d3-ba6b-09e33cad3eb4"),
                            ColumnId = new Guid("ec090a2b-f734-4feb-9ddf-e72790c21bb3"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("0ea9f22f-cb65-4941-914c-91ade32fbd15")
                        },
                        new
                        {
                            Id = new Guid("1e9d3863-1fe4-40e3-af66-2944470525da"),
                            ColumnId = new Guid("6d663b1e-f1a3-42d9-a75d-38851b1062ad"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("50e90541-acc0-4d38-beb4-a5dd72557697"),
                            Value = "Количество монографий/глав в монографии"
                        },
                        new
                        {
                            Id = new Guid("9429a1c9-0639-401e-82e1-325cf241f0ed"),
                            ColumnId = new Guid("01505f8a-8657-4a9a-b2bb-543d7f7fb3f5"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("50e90541-acc0-4d38-beb4-a5dd72557697")
                        },
                        new
                        {
                            Id = new Guid("322f717c-eb8e-43bd-b058-21b5c4d489e4"),
                            ColumnId = new Guid("0f15ef2d-2318-4a14-b8f7-c8b120315c02"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("50e90541-acc0-4d38-beb4-a5dd72557697")
                        },
                        new
                        {
                            Id = new Guid("5b2b0e8e-5757-4ce1-83c5-27872e73e91d"),
                            ColumnId = new Guid("e5a7f8d2-2a17-4f1f-848e-37ab7dcd599f"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("50e90541-acc0-4d38-beb4-a5dd72557697")
                        },
                        new
                        {
                            Id = new Guid("f0021bfd-5e90-4ef0-83c1-7a10359378b1"),
                            ColumnId = new Guid("ec090a2b-f734-4feb-9ddf-e72790c21bb3"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("50e90541-acc0-4d38-beb4-a5dd72557697")
                        },
                        new
                        {
                            Id = new Guid("10075280-0a5a-46d4-b818-0b5b11e1ec5c"),
                            ColumnId = new Guid("6d663b1e-f1a3-42d9-a75d-38851b1062ad"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("0799f7a2-9dda-4aab-b5c8-4703e7dd2bd7"),
                            Value = "Количество патентов"
                        },
                        new
                        {
                            Id = new Guid("a5857341-9308-49fe-b323-fd1b1366fe1e"),
                            ColumnId = new Guid("01505f8a-8657-4a9a-b2bb-543d7f7fb3f5"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("0799f7a2-9dda-4aab-b5c8-4703e7dd2bd7")
                        },
                        new
                        {
                            Id = new Guid("852b3d3d-ed1a-4e81-bda8-9119fea90e60"),
                            ColumnId = new Guid("0f15ef2d-2318-4a14-b8f7-c8b120315c02"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("0799f7a2-9dda-4aab-b5c8-4703e7dd2bd7")
                        },
                        new
                        {
                            Id = new Guid("b018e6db-06bb-44c8-b435-3662742bfaf1"),
                            ColumnId = new Guid("e5a7f8d2-2a17-4f1f-848e-37ab7dcd599f"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("0799f7a2-9dda-4aab-b5c8-4703e7dd2bd7")
                        },
                        new
                        {
                            Id = new Guid("4785a2f1-c30f-4ba2-9347-122a60340dbe"),
                            ColumnId = new Guid("ec090a2b-f734-4feb-9ddf-e72790c21bb3"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("0799f7a2-9dda-4aab-b5c8-4703e7dd2bd7")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("TableId", "Name")
                        .IsUnique();

                    b.HasIndex("TableId", "Number")
                        .IsUnique();

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c4d67d4-0556-44ef-a18c-eb955626e77c"),
                            Name = "Год",
                            Number = 1,
                            TableId = new Guid("69876ab7-bc4f-43ca-94a6-8db187720dee"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("8e6a3bce-f385-4249-a9ae-5f43d12f2186"),
                            Name = "Название конкурса",
                            Number = 2,
                            TableId = new Guid("69876ab7-bc4f-43ca-94a6-8db187720dee"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("145d1bf8-282d-4659-a20c-5e36539a72e3"),
                            Name = "Статус конкурса",
                            Number = 3,
                            TableId = new Guid("69876ab7-bc4f-43ca-94a6-8db187720dee"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("325b1081-b720-4a7e-a16f-4e956145f232"),
                            Name = "Награда",
                            Number = 4,
                            TableId = new Guid("69876ab7-bc4f-43ca-94a6-8db187720dee"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("e6d6a875-f4c1-4fc9-9d05-752f43fb0fcf"),
                            Name = "Ссылка",
                            Number = 5,
                            TableId = new Guid("69876ab7-bc4f-43ca-94a6-8db187720dee"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("98de022d-26ba-4b9b-bd93-c2604864e1eb"),
                            Name = "Название документа, реквизиты",
                            Number = 1,
                            TableId = new Guid("0c3bb598-0218-46fa-b24b-53d4a4e46535"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("cb4393d1-d964-4734-a031-e8ed113ca0d9"),
                            Name = "Год получения документа",
                            Number = 2,
                            TableId = new Guid("0c3bb598-0218-46fa-b24b-53d4a4e46535"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("b9487f31-6e54-479e-b37a-b1c0df06ca03"),
                            Name = "Наименование курса",
                            Number = 1,
                            TableId = new Guid("049dc36c-4b31-44ec-bab9-d3fb409543a9"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("d6c6f008-a07d-40f2-ab35-f5b952611451"),
                            Name = "Язык преподавания (русск./англ./др.)",
                            Number = 2,
                            TableId = new Guid("049dc36c-4b31-44ec-bab9-d3fb409543a9"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("00f2fe20-620b-4d40-a4d9-f8b1cdd9255e"),
                            Name = "Лекции (час.)",
                            Number = 3,
                            TableId = new Guid("049dc36c-4b31-44ec-bab9-d3fb409543a9"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("5503d20c-86d6-42ea-b160-f0cef40385d1"),
                            Name = "Практические занятия (час.)",
                            Number = 4,
                            TableId = new Guid("049dc36c-4b31-44ec-bab9-d3fb409543a9"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("61ceb646-7c2d-4a7b-b9b3-69dd739eaa66"),
                            Name = "Итого (час.)",
                            Number = 5,
                            TableId = new Guid("049dc36c-4b31-44ec-bab9-d3fb409543a9"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("899dde80-ad49-4ee7-891e-cd2317363c34"),
                            Name = "ФИО",
                            Number = 1,
                            TableId = new Guid("a3526b25-1f61-4ff0-87c4-71171c0371d1"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("5986aacf-5022-442b-b6dd-b8368da4d862"),
                            Name = "Название конкурса/премии",
                            Number = 2,
                            TableId = new Guid("a3526b25-1f61-4ff0-87c4-71171c0371d1"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("9995df9a-09c7-40eb-b874-443b18257340"),
                            Name = "Год",
                            Number = 3,
                            TableId = new Guid("a3526b25-1f61-4ff0-87c4-71171c0371d1"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("8168192f-e615-4b65-83fb-50d26af4c5b8"),
                            Name = "Статус конкурса (международный, всероссийский), статус награды (РФ, субъект РФ)",
                            Number = 4,
                            TableId = new Guid("a3526b25-1f61-4ff0-87c4-71171c0371d1"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("07366a10-866a-463e-911f-cff24a2aad77"),
                            Name = "Награда/премия (медаль, диплом с указанием степени)",
                            Number = 5,
                            TableId = new Guid("a3526b25-1f61-4ff0-87c4-71171c0371d1"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("efae1d77-237f-4ca3-ab8b-966063822391"),
                            Name = "Название организации/должность/ставка",
                            Number = 1,
                            TableId = new Guid("3d8bf1f0-fb5d-4142-af8b-c231f1cb296e"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("7e236849-ef4f-4d5a-8859-ae203994d0cf"),
                            Name = "Место нахождения (субъект РФ, зарубежье)",
                            Number = 2,
                            TableId = new Guid("3d8bf1f0-fb5d-4142-af8b-c231f1cb296e"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("b5feda2c-47a9-4990-b080-c29762acffca"),
                            Name = "Вид деятельности (преподавательская)",
                            Number = 3,
                            TableId = new Guid("3d8bf1f0-fb5d-4142-af8b-c231f1cb296e"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("01c00c04-cee2-4565-8436-124cd26bd069"),
                            Name = "Количество часов",
                            Number = 4,
                            TableId = new Guid("3d8bf1f0-fb5d-4142-af8b-c231f1cb296e"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("f2f4f4e6-3b61-4319-9065-37d64960c3f9"),
                            Name = "Вид публикации",
                            Number = 1,
                            TableId = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("2976257f-404f-49f0-ba16-32d90903864d"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("6e2bfac7-5072-400e-9d93-498b30a7065f"),
                            Name = "Соавторы",
                            Number = 3,
                            TableId = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("793fe059-c633-478f-a9a5-73d4fc0ed520"),
                            Name = "Количество печатных листов",
                            Number = 4,
                            TableId = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("66b2913f-851d-4c74-b4e1-f60a8daeea13"),
                            Name = "Наличие грифа",
                            Number = 5,
                            TableId = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14"),
                            ValueTypeId = new Guid("00255929-0aca-4307-8ffe-400a1b860bf3")
                        },
                        new
                        {
                            Id = new Guid("cf78f79f-444f-4700-92d2-b3dc53e05439"),
                            Name = "Издательство, год",
                            Number = 6,
                            TableId = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("9a2067e1-be79-4fa6-a7d9-8a966b55e140"),
                            Name = "Название дисциплины",
                            Number = 1,
                            TableId = new Guid("4aa4fa56-0bda-4312-8388-3f978031d3ea"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("3e12c421-00a4-4c62-84b0-e5d0c35455f5"),
                            Name = "Вид (лекции, лабораторные)",
                            Number = 2,
                            TableId = new Guid("4aa4fa56-0bda-4312-8388-3f978031d3ea"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("d883b050-f9ca-4f5d-bfe5-9205a31a745d"),
                            Name = "Название курса",
                            Number = 1,
                            TableId = new Guid("c883cc1b-0685-4818-ac51-28fff13b8a12"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("2fd5a6bc-d998-4f29-bc8d-4c36610c6d5f"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("c883cc1b-0685-4818-ac51-28fff13b8a12"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("8520b6e7-63a8-4f47-a55b-2e6256e8ede8"),
                            Name = "Ссылка на платформу",
                            Number = 3,
                            TableId = new Guid("c883cc1b-0685-4818-ac51-28fff13b8a12"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("6aea5ed3-4560-4ad7-a207-bf6581d12fe2"),
                            Name = "Год",
                            Number = 4,
                            TableId = new Guid("c883cc1b-0685-4818-ac51-28fff13b8a12"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("60492c2d-5aae-4349-a322-dc7cbf0e9bb9"),
                            Name = "Название статьи",
                            Number = 1,
                            TableId = new Guid("7592f6e1-cb5a-4f0a-aaff-b8acc4272fdb"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("f163e47c-cb99-4f02-91c7-874ff14306aa"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("7592f6e1-cb5a-4f0a-aaff-b8acc4272fdb"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("3e1eb288-996d-4114-979c-511ed4aab425"),
                            Name = "Тип публикации (категория ВАК/квартиль МБД)",
                            Number = 3,
                            TableId = new Guid("7592f6e1-cb5a-4f0a-aaff-b8acc4272fdb"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("f13d9045-f44b-4b5c-817c-ff17a13f978f"),
                            Name = "Издание, год",
                            Number = 4,
                            TableId = new Guid("7592f6e1-cb5a-4f0a-aaff-b8acc4272fdb"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("6d663b1e-f1a3-42d9-a75d-38851b1062ad"),
                            Name = "Тип идентификатора",
                            Number = 1,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("01505f8a-8657-4a9a-b2bb-543d7f7fb3f5"),
                            Name = "Идентификатор",
                            Number = 2,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("0f15ef2d-2318-4a14-b8f7-c8b120315c02"),
                            Name = "Количество публикаций в БАЗЕ",
                            Number = 3,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("e5a7f8d2-2a17-4f1f-848e-37ab7dcd599f"),
                            Name = "Количество цитирований",
                            Number = 4,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("ec090a2b-f734-4feb-9ddf-e72790c21bb3"),
                            Name = "Индекс Хирша (за все время)",
                            Number = 5,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("dc799ce1-69db-439d-b6c3-139d12af4d6b"),
                            Name = "Название НИР/НИОКР",
                            Number = 1,
                            TableId = new Guid("549d0439-d7f2-4003-8c86-0dbb0b1e5fec"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("49efafaa-ce2f-463f-b1c2-e07b7fadb949"),
                            Name = "Сумма финансирования (тыс. руб.)",
                            Number = 2,
                            TableId = new Guid("549d0439-d7f2-4003-8c86-0dbb0b1e5fec"),
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("b5ff82b4-1230-4804-bcc2-744a3ad753e1"),
                            Name = "Период выполнения",
                            Number = 3,
                            TableId = new Guid("549d0439-d7f2-4003-8c86-0dbb0b1e5fec"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("d9e8680c-23a5-413a-b70a-162c3b51c2cd"),
                            Name = "Статус (руководитель/исполнитель)",
                            Number = 4,
                            TableId = new Guid("549d0439-d7f2-4003-8c86-0dbb0b1e5fec"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("2a215c4b-00aa-4447-876b-fef35c34d738"),
                            Name = "Регистрационный номер карты в системе ЕГИСУ (https://www.rosrid.ru/)",
                            Number = 5,
                            TableId = new Guid("549d0439-d7f2-4003-8c86-0dbb0b1e5fec"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("1303743c-934c-4c1e-8fbc-98d9770c83c1"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("d965992c-18f9-47a8-a697-6769e455c376"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("8b440393-a184-4cba-9c8f-93ba977bd834"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("d965992c-18f9-47a8-a697-6769e455c376"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("fd1e1869-3b47-4f9f-b40b-a8a81cf99bd8"),
                            Name = "ФИО соавторов",
                            Number = 3,
                            TableId = new Guid("d965992c-18f9-47a8-a697-6769e455c376"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("01c974ea-0ca9-4547-b568-fd8b7f8e7862"),
                            Name = "Номер РИД",
                            Number = 4,
                            TableId = new Guid("d965992c-18f9-47a8-a697-6769e455c376"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("fe7d309f-7efa-4797-9a44-8a8b9ca8dc50"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("c67fb5a3-1e7b-4b61-ab7c-edc251944aed"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("60c0b241-4778-4d44-bc70-c2b73a80421e"),
                            Name = "Название разработки",
                            Number = 2,
                            TableId = new Guid("c67fb5a3-1e7b-4b61-ab7c-edc251944aed"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("7baa2549-a917-4cbc-bbcf-382788fb2f0e"),
                            Name = "Название организации в которую внедрена разработка",
                            Number = 3,
                            TableId = new Guid("c67fb5a3-1e7b-4b61-ab7c-edc251944aed"),
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("EditBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "Общая информация",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("3ab1cb64-741b-4c64-a527-62424d60488b"),
                            Name = "Категория участников",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("cb0e515f-a19d-4efd-88c3-ac1abadcaee8"),
                            Name = "Профессиональное развитие",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            Name = "Деятельность",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("ed6f8756-d096-4817-9495-59b677e00bfb"),
                            Name = "Деятельность",
                            Number = 5
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlockStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("EditBlockId");

                    b.ToTable("EditBlockStatuses");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditGroup")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Placeholder")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Required")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0708591-82d3-4002-a66c-ef450af6ffec"),
                            EditBlockId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "ФИО",
                            Number = 1,
                            Placeholder = "Иванов Иван Иванович",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("4c9bc5e8-5d97-48bb-9690-85d4a8c9ba57"),
                            EditBlockId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "Дата рождения",
                            Number = 2,
                            Placeholder = "01.01.2000",
                            Required = true,
                            ValueTypeId = new Guid("750fda1f-a7df-4aee-a625-3712ce6efde9")
                        },
                        new
                        {
                            Id = new Guid("87e1622f-0d54-45ca-be1a-929a80900dfe"),
                            EditBlockId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "Домашний адрес",
                            Number = 3,
                            Placeholder = "Регион, город, улица, дом, квартира",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("e07ec0b3-c45f-4f72-9043-9334a7bad6a6"),
                            EditBlockId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "Контактный телефон",
                            Number = 4,
                            Placeholder = "+8 (900)-000-00-00",
                            Required = true,
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("83039f24-2d02-43f7-af16-9af12fea01bd"),
                            EditBlockId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "Электронная почта",
                            Number = 5,
                            Placeholder = "user@example.com",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("a61a75f3-81af-422c-9221-70ca1a254690"),
                            EditBlockId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "Место работы/учебы",
                            Number = 6,
                            Placeholder = "Название организации",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("b9810768-e49b-44fb-ad22-405f21f420c8"),
                            EditBlockId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "Адрес работы/учебы",
                            Number = 7,
                            Placeholder = "Регион, город, улица, дом",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("2bc68211-58a8-4904-9dd6-e734e141c976"),
                            EditBlockId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "Институт, факультет, кафедра, лаборатория",
                            Number = 8,
                            Placeholder = "Введите институт, факультет, кафедру, лабораторию",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("25f16c99-3731-4287-9dac-067c376cb26f"),
                            EditBlockId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "Должность",
                            Number = 9,
                            Placeholder = "Введите свою должность в организации",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("d5933286-57b3-457d-abe9-14508b9744a6"),
                            EditBlockId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "Стаж научно-педагогической деятельности по трудовой книжке",
                            Number = 10,
                            Placeholder = "Введите свой стаж",
                            Required = true,
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("c466f247-3e83-4edf-8f93-246c668aafc2"),
                            EditBlockId = new Guid("f6f208d6-05e4-4177-96e7-1124cc67c1cd"),
                            Name = "Дополнительная информация",
                            Number = 11,
                            Placeholder = "Пример",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("3d9f1e55-5cc4-44c8-9d5c-c60e34949368"),
                            EditBlockId = new Guid("3ab1cb64-741b-4c64-a527-62424d60488b"),
                            Name = "Направление конкурса",
                            Number = 12,
                            Placeholder = "Выберите направление конкурса",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("53e34663-67cf-4f24-9f84-7ae25885ce45"),
                            EditBlockId = new Guid("3ab1cb64-741b-4c64-a527-62424d60488b"),
                            Name = "Категория участника конкурса (Работники высших учебных заведений, отраслевых и академических институтов, работники сектора промышленности (исследователи), осуществляющие научно-исследовательскую и/или научно-педагогическую деятельность)",
                            Number = 13,
                            Placeholder = "Выберите категорию участника конкруса",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("680c8ca9-d78c-468c-9e4f-f349de65b6f4"),
                            EditBlockId = new Guid("3ab1cb64-741b-4c64-a527-62424d60488b"),
                            Name = "Название конкурсной работы",
                            Number = 14,
                            Placeholder = "Введите название своей конкурсной работы",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("60151047-1788-47d1-8c1d-3950077bf7c1"),
                            EditBlockId = new Guid("3ab1cb64-741b-4c64-a527-62424d60488b"),
                            Name = "Ссылка на конкурсную работу",
                            Number = 15,
                            Placeholder = "Введите ссылку своей конкурсной работы",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("a6020b7c-3e13-4939-b64f-9c594be851b0"),
                            EditBlockId = new Guid("3ab1cb64-741b-4c64-a527-62424d60488b"),
                            Name = "Ученое звание",
                            Number = 16,
                            Placeholder = "Выберите ученое звание",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("24153a28-3dd9-4dc5-9ecd-b40ac068a829"),
                            EditBlockId = new Guid("3ab1cb64-741b-4c64-a527-62424d60488b"),
                            Name = "Ученая степень",
                            Number = 17,
                            Placeholder = "Выберите ученую степень",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("d2252b24-d6e3-4cd6-8053-1ceeb27b61f0"),
                            EditBlockId = new Guid("3ab1cb64-741b-4c64-a527-62424d60488b"),
                            Name = "Научная специальность (по классификации ВАК)",
                            Number = 18,
                            Placeholder = "Введите научную специальность (по классификации ВАК)",
                            Required = true,
                            ValueTypeId = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db")
                        },
                        new
                        {
                            Id = new Guid("bb895263-f2bc-4085-97b0-905a9a7528d4"),
                            EditBlockId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-педагогической деятельности",
                            Name = "Защитившиеся кадидаты наук",
                            Number = 19,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("a0b3598d-5fe6-4e39-b494-428da6ae1dc9"),
                            EditBlockId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            Name = "Защитившиеся доктора наук",
                            Number = 20,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("236ccdc8-2ecb-42ed-9d12-4b2991261bdd"),
                            EditBlockId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            EditGroup = "Руководство дипломными проектами за предыдущий учебный год",
                            Name = "Защитившиеся бакалавры",
                            Number = 21,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("aa3afe96-a2c4-423c-ba6f-64227a20e929"),
                            EditBlockId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            Name = "Защитившиеся специалисты",
                            Number = 22,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("1038291c-d401-4ef7-8da6-26b89bf3d0bd"),
                            EditBlockId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            Name = "Защитившиеся магистры",
                            Number = 23,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("79247708-b1bc-4a7b-a6ce-e18212287494"),
                            EditBlockId = new Guid("ed6f8756-d096-4817-9495-59b677e00bfb"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-исследовательской деятельности",
                            Name = "Защитившиеся кандидаты наук",
                            Number = 24,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        },
                        new
                        {
                            Id = new Guid("bcc1456b-d6c7-4b0f-b86d-660e9f02bc9c"),
                            EditBlockId = new Guid("ed6f8756-d096-4817-9495-59b677e00bfb"),
                            Name = "Защитившиеся доктора наук",
                            Number = 25,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("ApplicationId", "FieldId")
                        .IsUnique();

                    b.ToTable("FieldVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAuto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("TableId");

                    b.ToTable("Marks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc951339-f822-4928-bf8c-b4b23df10fc3"),
                            IsAuto = true,
                            MaxValue = 3,
                            Name = "Баллы за объем учебной нагрузки:",
                            Number = 1,
                            TableId = new Guid("049dc36c-4b31-44ec-bab9-d3fb409543a9")
                        },
                        new
                        {
                            Id = new Guid("96f3d373-7bc9-4ada-a8c0-1306ab6f87fc"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за количество дисциплин на иностранном языке, которые вел претендент, в предыдущем учебном году:",
                            Number = 2,
                            TableId = new Guid("049dc36c-4b31-44ec-bab9-d3fb409543a9")
                        },
                        new
                        {
                            Id = new Guid("b02b312a-c23d-4c3b-9669-d77533960bf1"),
                            FieldId = new Guid("1038291c-d401-4ef7-8da6-26b89bf3d0bd"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за количество квалификационных работ, выполненных под руководством претендента:",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("5e198322-3fda-4caf-ab25-0bfe25bbdce0"),
                            FieldId = new Guid("bb895263-f2bc-4085-97b0-905a9a7528d4"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("b267bf90-cd28-4eb6-abda-22915d6043bc"),
                            FieldId = new Guid("a0b3598d-5fe6-4e39-b494-428da6ae1dc9"),
                            IsAuto = true,
                            MaxValue = 4,
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("e8d70c40-572f-4f8c-a67e-91c9e01f1c1f"),
                            IsAuto = true,
                            MaxValue = 4,
                            Name = "Баллы за количество подготовленных студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание:",
                            Number = 6,
                            TableId = new Guid("a3526b25-1f61-4ff0-87c4-71171c0371d1")
                        },
                        new
                        {
                            Id = new Guid("c40f5636-a237-4d0f-999d-6ce67dd746f3"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за количество онлайн курсов на открытых площадках:",
                            Number = 7,
                            TableId = new Guid("c883cc1b-0685-4818-ac51-28fff13b8a12")
                        },
                        new
                        {
                            Id = new Guid("1cd86cc8-539e-4799-aad2-e7fd7704141e"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за труды с грифом и без соавторства:",
                            Number = 8,
                            TableId = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14")
                        },
                        new
                        {
                            Id = new Guid("4fcc0300-7943-4b6c-a136-08fc2e913de0"),
                            IsAuto = true,
                            MaxValue = 3,
                            Name = "Баллы за труды с грифом в соавторстве:",
                            Number = 9,
                            TableId = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14")
                        },
                        new
                        {
                            Id = new Guid("6462ae78-a08c-465f-a790-c21746993cb4"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за труды без грифа и без соавторства:",
                            Number = 10,
                            TableId = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14")
                        },
                        new
                        {
                            Id = new Guid("44dfe9e5-d810-4aa8-b6ea-ac442ec10a90"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за труды без грифа в соавторстве:",
                            Number = 11,
                            TableId = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14")
                        },
                        new
                        {
                            Id = new Guid("70e10b54-3408-4522-a747-fc1d114d4bae"),
                            IsAuto = true,
                            MaxValue = 4,
                            Name = "Баллы за количество практикумов и курсов лекций:",
                            Number = 12,
                            TableId = new Guid("4aa4fa56-0bda-4312-8388-3f978031d3ea")
                        },
                        new
                        {
                            Id = new Guid("69c1fd01-14b8-4dc1-8db0-45a1706fc6bc"),
                            FieldId = new Guid("a6020b7c-3e13-4939-b64f-9c594be851b0"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за ученое звание:",
                            Number = 13
                        },
                        new
                        {
                            Id = new Guid("9407309c-164f-4d63-a587-9b1e74906d9c"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за награды:",
                            Number = 14,
                            TableId = new Guid("69876ab7-bc4f-43ca-94a6-8db187720dee")
                        },
                        new
                        {
                            Id = new Guid("49f92943-f7c9-4002-8a19-03178dfb3f34"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за профессиональное развитие:",
                            Number = 15,
                            TableId = new Guid("0c3bb598-0218-46fa-b24b-53d4a4e46535")
                        },
                        new
                        {
                            Id = new Guid("69f393c4-53e6-4310-ab7b-663a8da92446"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за научные публикации:",
                            Number = 16,
                            TableId = new Guid("7592f6e1-cb5a-4f0a-aaff-b8acc4272fdb")
                        },
                        new
                        {
                            Id = new Guid("ca44d760-d67c-469d-8e92-4980e0c1b863"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы по базе Scopus:",
                            Number = 17,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4")
                        },
                        new
                        {
                            Id = new Guid("6342b89d-4929-46b9-a738-38bd985f598c"),
                            IsAuto = true,
                            MaxValue = 3,
                            Name = "Баллы по базе РИНЦ:",
                            Number = 18,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4")
                        },
                        new
                        {
                            Id = new Guid("f4a3e830-f911-4b4e-82fb-ec95c6524689"),
                            FieldId = new Guid("79247708-b1bc-4a7b-a6ce-e18212287494"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 19
                        },
                        new
                        {
                            Id = new Guid("7f0650f2-af26-4faf-b9a7-0d70c8e52770"),
                            FieldId = new Guid("bcc1456b-d6c7-4b0f-b86d-660e9f02bc9c"),
                            IsAuto = true,
                            MaxValue = 4,
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 20
                        },
                        new
                        {
                            Id = new Guid("879d5f66-37a4-46aa-8bff-470cbf95d79c"),
                            IsAuto = true,
                            MaxValue = 4,
                            Name = "Баллы за выполненные НИР/НИОКР в качестве руководителя:",
                            Number = 21,
                            TableId = new Guid("549d0439-d7f2-4003-8c86-0dbb0b1e5fec")
                        },
                        new
                        {
                            Id = new Guid("c5a8d8df-5a88-4b44-b225-f04040c6e195"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за выполненные НИР/НИОКР в качестве исполнителя:",
                            Number = 22,
                            TableId = new Guid("549d0439-d7f2-4003-8c86-0dbb0b1e5fec")
                        },
                        new
                        {
                            Id = new Guid("096ab423-0559-4d6b-aa8b-ab976b00954a"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за количество объектов интеллектуальной собственности:",
                            Number = 23,
                            TableId = new Guid("d965992c-18f9-47a8-a697-6769e455c376")
                        },
                        new
                        {
                            Id = new Guid("5c839daf-a544-4e99-bab4-37caef86dc6c"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за количество разработок:",
                            Number = 24,
                            TableId = new Guid("c67fb5a3-1e7b-4b61-ab7c-edc251944aed")
                        },
                        new
                        {
                            Id = new Guid("43f494df-c99d-4f82-9ffc-0713fa1d74cf"),
                            FieldId = new Guid("60151047-1788-47d1-8c1d-3950077bf7c1"),
                            IsAuto = false,
                            MaxValue = 10,
                            Name = "Оценка уровня предоставленной работы:",
                            Number = 25
                        },
                        new
                        {
                            Id = new Guid("4be287a4-f3bf-4d54-b056-7e7efaec962e"),
                            FieldId = new Guid("60151047-1788-47d1-8c1d-3950077bf7c1"),
                            IsAuto = false,
                            MaxValue = 10,
                            Name = "Использование в представленной работе инновационных методов (проблемного и проективного обучения, тренинговых форм, модульно-кредитных, модульно-рейтинговых систем обучения и контроля знаний):",
                            Number = 26
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("MarkBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("53576cc5-e196-454a-9609-1f6ad0a7ea76"),
                            Name = "Основной",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("913e66ec-4ca3-445c-ad8a-b573d3f610e6"),
                            Name = "Образовательная деятельность",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("448d588e-6d55-4444-a6fa-6fc1bf94d73c"),
                            Name = "Методическая деятельность",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("afee9c43-ee38-4153-9061-596062709fe8"),
                            Name = "Профессиональные показатели",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("088a8fad-9856-49cf-b1e2-d1006d7b3207"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("c8e63b5b-ac96-4de8-82b5-0df344c35c6f"),
                            Name = "Инновационная и иная деятельность",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("8599e9e0-0a48-428a-aeaf-3b6dc78a8eb3"),
                            Name = "Конкурсная работа",
                            Number = 7
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarkId");

                    b.HasIndex("ApplicationId", "MarkId")
                        .IsUnique();

                    b.ToTable("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrefilled")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Rows");

                    b.HasData(
                        new
                        {
                            Id = new Guid("648e2a02-23ef-4228-a45c-aa151d2c6cd7"),
                            IsPrefilled = true,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4")
                        },
                        new
                        {
                            Id = new Guid("4bfa703e-df22-48d0-a7dd-3e310b34c39f"),
                            IsPrefilled = true,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4")
                        },
                        new
                        {
                            Id = new Guid("70602ec1-b379-490d-ac54-23cab0cc35c7"),
                            IsPrefilled = true,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4")
                        },
                        new
                        {
                            Id = new Guid("7664222c-1a0c-45e7-a629-e50967dd516b"),
                            IsPrefilled = true,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4")
                        },
                        new
                        {
                            Id = new Guid("0ea9f22f-cb65-4941-914c-91ade32fbd15"),
                            IsPrefilled = true,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4")
                        },
                        new
                        {
                            Id = new Guid("50e90541-acc0-4d38-beb4-a5dd72557697"),
                            IsPrefilled = true,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4")
                        },
                        new
                        {
                            Id = new Guid("0799f7a2-9dda-4aab-b5c8-4703e7dd2bd7"),
                            IsPrefilled = true,
                            TableId = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.SelectValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("FieldId");

                    b.ToTable("SelectValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f35c84f-4211-4342-8984-0e758d6ac498"),
                            FieldId = new Guid("3d9f1e55-5cc4-44c8-9d5c-c60e34949368"),
                            Value = "АРХИТЕКТУРА"
                        },
                        new
                        {
                            Id = new Guid("de60cf77-32e5-49e9-b7c7-7e17f790c536"),
                            FieldId = new Guid("3d9f1e55-5cc4-44c8-9d5c-c60e34949368"),
                            Value = "ТЕХНИКА И ТЕХНОЛОГИИ СТРОИТЕЛЬСТВА"
                        },
                        new
                        {
                            Id = new Guid("fb573cf7-26de-46d5-bda7-76608bfd2205"),
                            FieldId = new Guid("3d9f1e55-5cc4-44c8-9d5c-c60e34949368"),
                            Value = "СТРОИТЕЛЬСТВО И АРХИТЕКТУРА"
                        },
                        new
                        {
                            Id = new Guid("36718784-bfb1-45bf-b27a-9d1d6dd910b9"),
                            FieldId = new Guid("3d9f1e55-5cc4-44c8-9d5c-c60e34949368"),
                            Value = "ЭЛЕКТРО- И ТЕПЛОЭНЕРГЕТИКА"
                        },
                        new
                        {
                            Id = new Guid("56ffb284-e4f9-451a-93b1-42d0145550ff"),
                            FieldId = new Guid("3d9f1e55-5cc4-44c8-9d5c-c60e34949368"),
                            Value = "ПРИКЛАДНАЯ ГЕОЛОГИЯ, ГОРНОЕ ДЕЛО, НЕФТЕГАЗОВОЕ ДЕЛО И ГЕОДЕЗИЯ"
                        },
                        new
                        {
                            Id = new Guid("de857314-b24c-4105-b7db-910be8840476"),
                            FieldId = new Guid("3d9f1e55-5cc4-44c8-9d5c-c60e34949368"),
                            Value = "НЕДРОПОЛЬЗОВАНИЕ И ГОРНЫЕ НАУКИ"
                        },
                        new
                        {
                            Id = new Guid("b8731e5e-70df-4828-8231-7b262aee35b6"),
                            FieldId = new Guid("53e34663-67cf-4f24-9f84-7ae25885ce45"),
                            Value = "Аспиранты, адъюнкты, ординаторы, ассистенты-стажеры, не имеющие ученой степени"
                        },
                        new
                        {
                            Id = new Guid("6d524d0f-7b90-4834-aa33-5d24999c6b49"),
                            FieldId = new Guid("53e34663-67cf-4f24-9f84-7ae25885ce45"),
                            Value = "Докторанты, имеющие ученую степень кандидата наук"
                        },
                        new
                        {
                            Id = new Guid("8c709f77-d892-40a1-8959-f78469ef1422"),
                            FieldId = new Guid("53e34663-67cf-4f24-9f84-7ae25885ce45"),
                            Value = "Имеющие ученую степень доктора наук"
                        },
                        new
                        {
                            Id = new Guid("5ca9e8a4-8200-4693-970b-ba13acf94671"),
                            FieldId = new Guid("a6020b7c-3e13-4939-b64f-9c594be851b0"),
                            Value = "Доцент"
                        },
                        new
                        {
                            Id = new Guid("9ef8d7eb-9efb-4cac-8712-04ebe21b6b6a"),
                            FieldId = new Guid("a6020b7c-3e13-4939-b64f-9c594be851b0"),
                            Value = "Профессор"
                        },
                        new
                        {
                            Id = new Guid("22555851-2da6-4ae6-b30f-fbe88a606411"),
                            ColumnId = new Guid("145d1bf8-282d-4659-a20c-5e36539a72e3"),
                            Value = "Региональный"
                        },
                        new
                        {
                            Id = new Guid("b8f1ed8d-b03c-4aad-a208-8a556c19fc9e"),
                            ColumnId = new Guid("145d1bf8-282d-4659-a20c-5e36539a72e3"),
                            Value = "Всероссийский"
                        },
                        new
                        {
                            Id = new Guid("388b0dd5-8301-4b84-bf4b-0a7c38ccd0bf"),
                            ColumnId = new Guid("145d1bf8-282d-4659-a20c-5e36539a72e3"),
                            Value = "Международный"
                        },
                        new
                        {
                            Id = new Guid("2147cb4a-5c4b-4cda-8d34-ebf95d06d8b9"),
                            ColumnId = new Guid("f2f4f4e6-3b61-4319-9065-37d64960c3f9"),
                            Value = "Учебное и/или учебно-методическое пособие"
                        },
                        new
                        {
                            Id = new Guid("7980dd8a-206e-41d2-bb64-164f884b99d5"),
                            ColumnId = new Guid("f2f4f4e6-3b61-4319-9065-37d64960c3f9"),
                            Value = "Учебник"
                        },
                        new
                        {
                            Id = new Guid("3c1224c1-f765-4350-800a-9c8cdfef4703"),
                            ColumnId = new Guid("f2f4f4e6-3b61-4319-9065-37d64960c3f9"),
                            Value = "Монография"
                        },
                        new
                        {
                            Id = new Guid("12060b29-1fee-454e-b117-1f5611ddc815"),
                            ColumnId = new Guid("3e12c421-00a4-4c62-84b0-e5d0c35455f5"),
                            Value = "Лекции"
                        },
                        new
                        {
                            Id = new Guid("614a2f46-8da7-4555-9cda-5f54100a6fca"),
                            ColumnId = new Guid("3e12c421-00a4-4c62-84b0-e5d0c35455f5"),
                            Value = "Лабораторные"
                        },
                        new
                        {
                            Id = new Guid("59194030-d98a-4e03-851e-cdb17be84802"),
                            ColumnId = new Guid("d9e8680c-23a5-413a-b70a-162c3b51c2cd"),
                            Value = "Руководитель"
                        },
                        new
                        {
                            Id = new Guid("43db2262-f905-4763-b8f9-e70c30fd4810"),
                            ColumnId = new Guid("d9e8680c-23a5-413a-b70a-162c3b51c2cd"),
                            Value = "Исполнитель"
                        },
                        new
                        {
                            Id = new Guid("0869d911-09d0-46d8-86b2-184ef09e6f02"),
                            ColumnId = new Guid("1303743c-934c-4c1e-8fbc-98d9770c83c1"),
                            Value = "Изобретение"
                        },
                        new
                        {
                            Id = new Guid("831e1992-a094-4439-9f5b-eb612f7ab4da"),
                            ColumnId = new Guid("1303743c-934c-4c1e-8fbc-98d9770c83c1"),
                            Value = "Полезная модель"
                        },
                        new
                        {
                            Id = new Guid("bd3396ea-b3b0-4f77-a8db-44518ac1b6cc"),
                            ColumnId = new Guid("1303743c-934c-4c1e-8fbc-98d9770c83c1"),
                            Value = "База данных"
                        },
                        new
                        {
                            Id = new Guid("1cc46e52-b6aa-47c9-8501-ba89c279bccd"),
                            ColumnId = new Guid("fe7d309f-7efa-4797-9a44-8a8b9ca8dc50"),
                            Value = "Изобретение"
                        },
                        new
                        {
                            Id = new Guid("9b104c36-63a2-41a6-b3eb-9a32ab0dd51e"),
                            ColumnId = new Guid("fe7d309f-7efa-4797-9a44-8a8b9ca8dc50"),
                            Value = "Полезная модель"
                        },
                        new
                        {
                            Id = new Guid("667c839b-f0c3-469a-8bed-d1801cdb9070"),
                            ColumnId = new Guid("fe7d309f-7efa-4797-9a44-8a8b9ca8dc50"),
                            Value = "База данных"
                        },
                        new
                        {
                            Id = new Guid("a32df049-3817-4aab-8dd5-996eafe88520"),
                            FieldId = new Guid("a6020b7c-3e13-4939-b64f-9c594be851b0"),
                            Value = "Нет"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrefilled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69876ab7-bc4f-43ca-94a6-8db187720dee"),
                            EditBlockId = new Guid("cb0e515f-a19d-4efd-88c3-ac1abadcaee8"),
                            IsPrefilled = false,
                            Name = "Награждение премиями, наградами в области научно-педагогической деятельности городского, всероссийского или международного уровня (в том числе зарубежными), победы в профессиональных конкурсах за весь период научно-педагогической деятельности",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("0c3bb598-0218-46fa-b24b-53d4a4e46535"),
                            EditBlockId = new Guid("cb0e515f-a19d-4efd-88c3-ac1abadcaee8"),
                            IsPrefilled = false,
                            Name = "Сведения о профессиональном развитии участника конкурса за последние 5 лет (курсы повышения квалификации/ стажировки)",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("049dc36c-4b31-44ec-bab9-d3fb409543a9"),
                            EditBlockId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            IsPrefilled = false,
                            Name = "Учебная нагрузка за предыдущий учебный год (за исключением методической)",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("a3526b25-1f61-4ff0-87c4-71171c0371d1"),
                            EditBlockId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            IsPrefilled = false,
                            Name = "Список подготовленных под руководством участника конкурса студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("3d8bf1f0-fb5d-4142-af8b-c231f1cb296e"),
                            EditBlockId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            IsPrefilled = false,
                            Name = "Сведения о работе, выполняемой участником конкурса в области научно-педагогической деятельности по совместительству (не по основному месту работы) в высшем учебном заведении, академическом институте, отраслевом научно-исследовательском институте, профессиональной образовательной организации, общеобразовательной организации за предыдущий учебный год",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("77036d62-4f64-42e3-827c-c3099bfe3d14"),
                            EditBlockId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            IsPrefilled = false,
                            Name = "Монографии, учебники, учебные и учебно-методические пособия с грифами и без грифов УМО, Министерств РФ или государственных академий наук, изданные типографским способом за последние 5 лет",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("4aa4fa56-0bda-4312-8388-3f978031d3ea"),
                            EditBlockId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            IsPrefilled = false,
                            Name = "Список лабораторных практикумов и курсов лекций (разработанных самостоятельно участником конкурса) за последние 5 лет",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("c883cc1b-0685-4818-ac51-28fff13b8a12"),
                            EditBlockId = new Guid("7b73eed8-acf7-4b6f-aa1f-10de2d08f538"),
                            IsPrefilled = false,
                            Name = "Список разработанных онлайн-курсов на открытых платформах за последние 5 лет",
                            Number = 8
                        },
                        new
                        {
                            Id = new Guid("7592f6e1-cb5a-4f0a-aaff-b8acc4272fdb"),
                            EditBlockId = new Guid("ed6f8756-d096-4817-9495-59b677e00bfb"),
                            IsPrefilled = false,
                            Name = "Список научных публикаций за последние 5 лет",
                            Number = 9
                        },
                        new
                        {
                            Id = new Guid("e19c73af-d852-4bf9-b1b5-3f70228801d4"),
                            EditBlockId = new Guid("ed6f8756-d096-4817-9495-59b677e00bfb"),
                            IsPrefilled = true,
                            Name = "Персональные идентификаторы и показатели",
                            Number = 10
                        },
                        new
                        {
                            Id = new Guid("549d0439-d7f2-4003-8c86-0dbb0b1e5fec"),
                            EditBlockId = new Guid("ed6f8756-d096-4817-9495-59b677e00bfb"),
                            IsPrefilled = false,
                            Name = "Список выполненных НИР / НИОКР с финансированием в размере от 200 тыс. руб. и выше за последние 5 лет",
                            Number = 11
                        },
                        new
                        {
                            Id = new Guid("d965992c-18f9-47a8-a697-6769e455c376"),
                            EditBlockId = new Guid("ed6f8756-d096-4817-9495-59b677e00bfb"),
                            IsPrefilled = false,
                            Name = "Список объектов интеллектуальной собственности, созданных участником конкурса за весь период научно-педагогической деятельности (созданных самостоятельно / в соавторстве), официально зарегистрированных в установленном порядке (в России / за рубежом)",
                            Number = 12
                        },
                        new
                        {
                            Id = new Guid("c67fb5a3-1e7b-4b61-ab7c-edc251944aed"),
                            EditBlockId = new Guid("ed6f8756-d096-4817-9495-59b677e00bfb"),
                            IsPrefilled = false,
                            Name = "Перечень разработок, внедренных на предприятиях и организациях реального сектора экономики (в России / за рубежом)",
                            Number = 13
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("638f22e5-059f-4c13-ad9b-eebc864f860c"),
                            Name = "Научно-педагогическая деятельность",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("3fce6540-b38d-4080-9cb6-7156b4f79c51"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 2
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa71cc0e-6e85-4cc3-bb6c-3e41c56b3bc1"),
                            Name = "User 1",
                            Username = "admin@mail.ru"
                        },
                        new
                        {
                            Id = new Guid("ec898e8c-0ffe-4569-aa5c-abd1f65b2c8b"),
                            Name = "User 2",
                            Username = "user@mail.ru"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ValueTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72a4639a-b715-4e0b-9db9-0e0437f627c0"),
                            Name = "int"
                        },
                        new
                        {
                            Id = new Guid("6672c7ec-deca-4cb1-bb9d-2d61a0a557db"),
                            Name = "string"
                        },
                        new
                        {
                            Id = new Guid("00255929-0aca-4307-8ffe-400a1b860bf3"),
                            Name = "bool"
                        },
                        new
                        {
                            Id = new Guid("750fda1f-a7df-4aee-a625-3712ce6efde9"),
                            Name = "DateTime"
                        });
                });

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", null)
                        .WithMany()
                        .HasForeignKey("EditBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", null)
                        .WithMany()
                        .HasForeignKey("FieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Table", null)
                        .WithMany()
                        .HasForeignKey("TablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", null)
                        .WithMany()
                        .HasForeignKey("MarksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationStatus", "ApplicationStatus")
                        .WithMany("ApplicationForms")
                        .HasForeignKey("ApplicationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.UserInfo", "Reviewer")
                        .WithMany("ReviewedApplications")
                        .HasForeignKey("ReviewerId");

                    b.HasOne("ServerApp.Data.Entities.Track", "Track")
                        .WithMany("Applications")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.UserInfo", "UserInfo")
                        .WithMany("Applications")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationStatus");

                    b.Navigation("Reviewer");

                    b.Navigation("Track");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.BlockReview", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("BlockReviews")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.MarkBlock", "MarkBlock")
                        .WithMany("BlockReviews")
                        .HasForeignKey("MarkBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("MarkBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("CellVals")
                        .HasForeignKey("ApplicationId");

                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("CellVals")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Row", "Row")
                        .WithMany("CellVals")
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Column");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Columns")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Columns")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlockStatus", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("EditBlockStatusList")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("EditBlockStatusList")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("EditBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Fields")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Fields")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("FieldVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("FieldVals")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("Marks")
                        .HasForeignKey("FieldId");

                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Marks")
                        .HasForeignKey("TableId");

                    b.Navigation("Field");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("MarkVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", "Mark")
                        .WithMany("MarkVals")
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Mark");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Rows")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.SelectValue", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("SelectValues")
                        .HasForeignKey("ColumnId");

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("SelectValues")
                        .HasForeignKey("FieldId");

                    b.Navigation("Column");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Tables")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Navigation("BlockReviews");

                    b.Navigation("CellVals");

                    b.Navigation("EditBlockStatusList");

                    b.Navigation("FieldVals");

                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationStatus", b =>
                {
                    b.Navigation("ApplicationForms");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Navigation("CellVals");

                    b.Navigation("SelectValues");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Navigation("EditBlockStatusList");

                    b.Navigation("Fields");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Navigation("FieldVals");

                    b.Navigation("Marks");

                    b.Navigation("SelectValues");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkBlock", b =>
                {
                    b.Navigation("BlockReviews");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Navigation("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Marks");

                    b.Navigation("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ReviewedApplications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
