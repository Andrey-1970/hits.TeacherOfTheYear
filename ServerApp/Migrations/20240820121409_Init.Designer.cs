// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp.Data;

#nullable disable

namespace ServerApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240820121409_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.Property<Guid>("EditBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("EditBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("EditBlockTrack");

                    b.HasData(
                        new
                        {
                            EditBlocksId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            TracksId = new Guid("10ff6132-63ea-482f-8000-2ad682d4dca3")
                        },
                        new
                        {
                            EditBlocksId = new Guid("0c8808c7-4274-4f10-a38c-486d0a76de75"),
                            TracksId = new Guid("10ff6132-63ea-482f-8000-2ad682d4dca3")
                        },
                        new
                        {
                            EditBlocksId = new Guid("bc562ed0-6d15-4ade-9f74-04bd750aa57e"),
                            TracksId = new Guid("10ff6132-63ea-482f-8000-2ad682d4dca3")
                        },
                        new
                        {
                            EditBlocksId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            TracksId = new Guid("10ff6132-63ea-482f-8000-2ad682d4dca3")
                        },
                        new
                        {
                            EditBlocksId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            TracksId = new Guid("d8e89007-76bf-41a3-9794-576a71e73732")
                        },
                        new
                        {
                            EditBlocksId = new Guid("0c8808c7-4274-4f10-a38c-486d0a76de75"),
                            TracksId = new Guid("d8e89007-76bf-41a3-9794-576a71e73732")
                        },
                        new
                        {
                            EditBlocksId = new Guid("bc562ed0-6d15-4ade-9f74-04bd750aa57e"),
                            TracksId = new Guid("d8e89007-76bf-41a3-9794-576a71e73732")
                        },
                        new
                        {
                            EditBlocksId = new Guid("8cd73dd8-f545-49d2-ad4b-94a184825a74"),
                            TracksId = new Guid("d8e89007-76bf-41a3-9794-576a71e73732")
                        });
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.Property<Guid>("FieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.HasKey("FieldsId", "MarkBlocksId");

                    b.HasIndex("MarkBlocksId");

                    b.ToTable("FieldMarkBlock");

                    b.HasData(
                        new
                        {
                            FieldsId = new Guid("d783c5d5-49b1-43e9-af69-8392acb7d55c"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("f663cc7f-ff3b-4806-af3f-3a157c543075"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("ca05e077-020e-4236-af1a-c9f06a04f1e1"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("8e66ddcc-5794-4cc0-ac09-4e3672479480"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("78b46f99-65b0-4710-98a6-cfcf5de78be2"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("711c807d-77d1-4650-9b54-19041412aaf6"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("ed7a901c-9173-425b-8003-0e6c6de496cb"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("08917d36-0269-4ec1-9bbe-ed785fcca6ab"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("188c621f-4cbe-4bf2-9756-dbe6ee0bd342"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("e1a76ce9-4f49-4eb2-a8af-c2698205f94e"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("d9537168-0d7d-4016-9a75-1e846d6a7bbe"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("a791611e-f88a-44c4-aafb-eb794c05a19c"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("ef4616fe-b66c-428a-a645-bd128eaadb6c"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("3e8f7559-5ca1-447a-ba8d-4da205094844"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("7e4f2ad7-8c00-4cbf-816d-081bebbfc85c"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("f5e2f50e-8ca6-43c2-908f-b5f498e0877d"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("3a38d456-742f-4276-aee9-a2ec3c4c0208"),
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1")
                        },
                        new
                        {
                            FieldsId = new Guid("e47d73a7-7ea9-41e6-8073-e98bf154dd5e"),
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25")
                        },
                        new
                        {
                            FieldsId = new Guid("6a180669-e5f1-40be-b0f2-e78b89fd611e"),
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25")
                        },
                        new
                        {
                            FieldsId = new Guid("f9864029-ceca-4c09-9f09-2a7d1739055a"),
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25")
                        },
                        new
                        {
                            FieldsId = new Guid("13f3e524-d4da-4162-9bdc-9718b1ead6d3"),
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25")
                        },
                        new
                        {
                            FieldsId = new Guid("490302f1-fae1-4d36-9b85-434aaa53c48f"),
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25")
                        },
                        new
                        {
                            FieldsId = new Guid("7e4f2ad7-8c00-4cbf-816d-081bebbfc85c"),
                            MarkBlocksId = new Guid("41a63948-a198-43c1-90f1-bec3431f613a")
                        },
                        new
                        {
                            FieldsId = new Guid("7e4f2ad7-8c00-4cbf-816d-081bebbfc85c"),
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815")
                        },
                        new
                        {
                            FieldsId = new Guid("0b6450c5-e4c6-4b1b-84ae-2d78742877fb"),
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815")
                        },
                        new
                        {
                            FieldsId = new Guid("a4f88551-f6e4-4672-a7dc-9066cf191cf8"),
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815")
                        });
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TablesId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TablesId");

                    b.HasIndex("TablesId");

                    b.ToTable("MarkBlockTable");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            TablesId = new Guid("71f5775c-55bf-47db-a79a-9713b1f6d492")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            TablesId = new Guid("143a4d76-6814-44a4-ad06-4ca9a1ba61ff")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            TablesId = new Guid("a326230f-e103-4657-8cc0-72941957fda1")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            TablesId = new Guid("9b781db3-a8cb-4e94-8114-8a44ce6420f9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6bf55534-4783-4787-973c-6b110f1d9949"),
                            TablesId = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6bf55534-4783-4787-973c-6b110f1d9949"),
                            TablesId = new Guid("b274a947-530f-47bb-b8e8-f3626fcbccf2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41a63948-a198-43c1-90f1-bec3431f613a"),
                            TablesId = new Guid("edc350bc-82f6-41d8-92e0-7d7d2e7452e8")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41a63948-a198-43c1-90f1-bec3431f613a"),
                            TablesId = new Guid("b64f67fd-3f9d-4a06-ba87-55d1a709b453")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            TablesId = new Guid("edc350bc-82f6-41d8-92e0-7d7d2e7452e8")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            TablesId = new Guid("4fb349bf-cd0f-4048-8ca5-17f51d1e4c41")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            TablesId = new Guid("64c81acf-686b-4da6-b465-ebb79839edc4")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            TablesId = new Guid("35802550-4f0a-49c7-8604-7ae5cd60e43c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0c00f3f3-8736-4285-947b-bcc9dad43220"),
                            TablesId = new Guid("b64f67fd-3f9d-4a06-ba87-55d1a709b453")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0c00f3f3-8736-4285-947b-bcc9dad43220"),
                            TablesId = new Guid("619f4717-73bf-4652-859c-4d3a3da8049d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0c00f3f3-8736-4285-947b-bcc9dad43220"),
                            TablesId = new Guid("c4458d87-cb60-4e72-ae85-0b03efc08be3")
                        });
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("MarkBlockTrack");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1"),
                            TracksId = new Guid("10ff6132-63ea-482f-8000-2ad682d4dca3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            TracksId = new Guid("10ff6132-63ea-482f-8000-2ad682d4dca3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6bf55534-4783-4787-973c-6b110f1d9949"),
                            TracksId = new Guid("10ff6132-63ea-482f-8000-2ad682d4dca3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41a63948-a198-43c1-90f1-bec3431f613a"),
                            TracksId = new Guid("10ff6132-63ea-482f-8000-2ad682d4dca3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("77419d63-f392-4eae-baf0-4b85fe8e8d45"),
                            TracksId = new Guid("10ff6132-63ea-482f-8000-2ad682d4dca3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("4ec27e93-178c-479c-be65-21bedb251290"),
                            TracksId = new Guid("10ff6132-63ea-482f-8000-2ad682d4dca3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1"),
                            TracksId = new Guid("d8e89007-76bf-41a3-9794-576a71e73732")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            TracksId = new Guid("d8e89007-76bf-41a3-9794-576a71e73732")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0c00f3f3-8736-4285-947b-bcc9dad43220"),
                            TracksId = new Guid("d8e89007-76bf-41a3-9794-576a71e73732")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("77419d63-f392-4eae-baf0-4b85fe8e8d45"),
                            TracksId = new Guid("d8e89007-76bf-41a3-9794-576a71e73732")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("4ec27e93-178c-479c-be65-21bedb251290"),
                            TracksId = new Guid("d8e89007-76bf-41a3-9794-576a71e73732")
                        });
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "MarksId");

                    b.HasIndex("MarksId");

                    b.ToTable("MarkMarkBlock");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            MarksId = new Guid("428a9254-0c1e-468b-92fe-19a3111d4c3d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            MarksId = new Guid("f94f0d5a-e57e-4628-83f6-e1778f1cb160")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            MarksId = new Guid("a97b5ed6-7799-4824-a5df-5786b39fce67")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            MarksId = new Guid("b80cdbde-f153-4d24-b8b2-4f2977d8064a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            MarksId = new Guid("f4814bfe-3b61-4fa1-9f6e-4417543157e0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            MarksId = new Guid("3b54a3b8-be83-416e-a012-5a847c0b18c7")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            MarksId = new Guid("807ae89d-d24e-441c-bc8f-2c7d122abc60")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6bf55534-4783-4787-973c-6b110f1d9949"),
                            MarksId = new Guid("29b3f439-6d56-4d27-8e04-9a5492b5ba28")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6bf55534-4783-4787-973c-6b110f1d9949"),
                            MarksId = new Guid("7b542f2b-2683-4a54-a418-bc46c852eb6c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6bf55534-4783-4787-973c-6b110f1d9949"),
                            MarksId = new Guid("5def831c-620e-438a-a5cc-3f221b46d91d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6bf55534-4783-4787-973c-6b110f1d9949"),
                            MarksId = new Guid("f8400e52-5a10-43e1-a652-d656f215a75d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6bf55534-4783-4787-973c-6b110f1d9949"),
                            MarksId = new Guid("32e81cda-6b15-478f-b762-b022bf94f646")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41a63948-a198-43c1-90f1-bec3431f613a"),
                            MarksId = new Guid("cd455721-cb3b-4d4b-957d-b1018b8c849a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41a63948-a198-43c1-90f1-bec3431f613a"),
                            MarksId = new Guid("372af6b8-ee21-490a-a821-e95252ed5b6b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41a63948-a198-43c1-90f1-bec3431f613a"),
                            MarksId = new Guid("2dae456c-1c94-4766-9740-3c06fca82865")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            MarksId = new Guid("cd455721-cb3b-4d4b-957d-b1018b8c849a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            MarksId = new Guid("372af6b8-ee21-490a-a821-e95252ed5b6b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            MarksId = new Guid("1bbae866-be86-4ef7-b920-9ce1b913c075")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            MarksId = new Guid("3c5301e4-acab-4fe3-afc8-feca3384d352")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            MarksId = new Guid("f8f090ac-0084-436c-86f0-0b9dc9443798")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            MarksId = new Guid("d4624fdf-f2ca-4b02-8153-df7f38ab23e8")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            MarksId = new Guid("ba52d1ef-079b-47d6-a392-9d9ace48b8d4")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            MarksId = new Guid("6956ba82-4392-4c98-aa51-4c88509a782e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            MarksId = new Guid("26ca7e10-8dd3-4966-9f6c-2bf8cfe1bd0d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0c00f3f3-8736-4285-947b-bcc9dad43220"),
                            MarksId = new Guid("2dae456c-1c94-4766-9740-3c06fca82865")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0c00f3f3-8736-4285-947b-bcc9dad43220"),
                            MarksId = new Guid("04e6730f-e10d-4b05-b52e-c3ae4c1b9e6f")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0c00f3f3-8736-4285-947b-bcc9dad43220"),
                            MarksId = new Guid("49abead9-7b50-4596-b3dd-91d565059db2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0c00f3f3-8736-4285-947b-bcc9dad43220"),
                            MarksId = new Guid("8d5bdde4-bd84-471f-bd9f-21f0bb071cef")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0c00f3f3-8736-4285-947b-bcc9dad43220"),
                            MarksId = new Guid("9526fe7a-4a84-4491-84c5-398199b4e40b")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("ApplicationForms");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RowId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("RowId");

                    b.HasIndex("ApplicationId", "RowId", "ColumnId")
                        .IsUnique();

                    b.ToTable("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("TableId", "Name")
                        .IsUnique();

                    b.HasIndex("TableId", "Number")
                        .IsUnique();

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea0997d4-f4f7-4d2f-bec7-2876ba9bf9b6"),
                            Name = "Год",
                            Number = 1,
                            TableId = new Guid("edc350bc-82f6-41d8-92e0-7d7d2e7452e8"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("bc5f13f5-66e8-4799-88e2-175357dc001c"),
                            Name = "Название конкурса",
                            Number = 2,
                            TableId = new Guid("edc350bc-82f6-41d8-92e0-7d7d2e7452e8"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("9e2c4fc0-720f-4766-bd9d-98056517f191"),
                            Name = "Статус конкурса",
                            Number = 3,
                            TableId = new Guid("edc350bc-82f6-41d8-92e0-7d7d2e7452e8"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("9d3bf5f9-bfd2-4eaa-8a45-7452645dd59f"),
                            Name = "Награда",
                            Number = 4,
                            TableId = new Guid("edc350bc-82f6-41d8-92e0-7d7d2e7452e8"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("d6477913-1f09-41cb-8c5b-de8bb4381657"),
                            Name = "Ссылка",
                            Number = 5,
                            TableId = new Guid("edc350bc-82f6-41d8-92e0-7d7d2e7452e8"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("c25740e4-b353-486a-b0fa-0d649f1e9418"),
                            Name = "Название документа, реквизиты",
                            Number = 1,
                            TableId = new Guid("b64f67fd-3f9d-4a06-ba87-55d1a709b453"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("b4515353-3345-4962-98d0-0d4c3a9e396f"),
                            Name = "Год получения документа",
                            Number = 2,
                            TableId = new Guid("b64f67fd-3f9d-4a06-ba87-55d1a709b453"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("6dc27acf-77c2-48b2-af81-6d5eca69f93a"),
                            Name = "Наименование курса",
                            Number = 1,
                            TableId = new Guid("71f5775c-55bf-47db-a79a-9713b1f6d492"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("f00ad8c2-3004-489a-ab4d-4610ebf58dc7"),
                            Name = "Язык преподавания (русск./англ./др.)",
                            Number = 2,
                            TableId = new Guid("71f5775c-55bf-47db-a79a-9713b1f6d492"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("e3ecf46c-9414-42f2-ace0-d6ea9c570efa"),
                            Name = "Лекции (час.)",
                            Number = 3,
                            TableId = new Guid("71f5775c-55bf-47db-a79a-9713b1f6d492"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("bfabc20b-e965-460d-b818-b5f816e6fa3c"),
                            Name = "Практические занятия (час.)",
                            Number = 4,
                            TableId = new Guid("71f5775c-55bf-47db-a79a-9713b1f6d492"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("c3158ccb-c593-4af6-b96a-64d2d60c9e30"),
                            Name = "Итого (час.)",
                            Number = 5,
                            TableId = new Guid("71f5775c-55bf-47db-a79a-9713b1f6d492"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("b1918f2e-d2f7-4d16-9653-90b5908eb548"),
                            Name = "ФИО",
                            Number = 1,
                            TableId = new Guid("143a4d76-6814-44a4-ad06-4ca9a1ba61ff"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("36cf26da-ed0c-48c1-addd-e6f36011eddc"),
                            Name = "Название конкурса/премии",
                            Number = 2,
                            TableId = new Guid("143a4d76-6814-44a4-ad06-4ca9a1ba61ff"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("0db8e2f5-6fc8-4fc1-97f2-b90b5a23a42c"),
                            Name = "Год",
                            Number = 3,
                            TableId = new Guid("143a4d76-6814-44a4-ad06-4ca9a1ba61ff"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("fc67b6bc-bfc5-494b-97dc-5a9b0f5da0e6"),
                            Name = "Статус конкурса (международный, всероссийский), статус награды (РФ, субъект РФ)",
                            Number = 4,
                            TableId = new Guid("143a4d76-6814-44a4-ad06-4ca9a1ba61ff"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("885dba0c-bc7b-403a-a01f-fe994088c022"),
                            Name = "Награда/премия (медаль, диплом с указанием степени)",
                            Number = 5,
                            TableId = new Guid("143a4d76-6814-44a4-ad06-4ca9a1ba61ff"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("b6acdbc6-a1af-4d3a-bd3a-9aba3aa097ee"),
                            Name = "Название организации/должность/ставка",
                            Number = 1,
                            TableId = new Guid("a326230f-e103-4657-8cc0-72941957fda1"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("b0579ce3-c185-44f3-b529-5573cc77e8c0"),
                            Name = "Место нахождения (субъект РФ, зарубежье)",
                            Number = 2,
                            TableId = new Guid("a326230f-e103-4657-8cc0-72941957fda1"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("42415f08-3c19-46f5-bc96-076e19e58b94"),
                            Name = "Вид деятельности (преподавательская)",
                            Number = 3,
                            TableId = new Guid("a326230f-e103-4657-8cc0-72941957fda1"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("c7eb27eb-5ecd-4530-b201-9e6249947ec5"),
                            Name = "Количество часов",
                            Number = 4,
                            TableId = new Guid("a326230f-e103-4657-8cc0-72941957fda1"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("f113e9d6-86da-41c2-94c3-04f561faf76d"),
                            Name = "Вид публикации",
                            Number = 1,
                            TableId = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("21d4de64-4019-40da-bfd6-979799c87b46"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("fb32cadb-8d3a-4d18-b679-63e2f127236f"),
                            Name = "Соавторы",
                            Number = 3,
                            TableId = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("51255486-b0f3-45f7-9d23-7388ed1095dd"),
                            Name = "Количество печатных листов",
                            Number = 4,
                            TableId = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("8d8387b3-1e7e-44ec-9131-a72c95af6621"),
                            Name = "Наличие грифа",
                            Number = 5,
                            TableId = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8"),
                            ValueTypeId = new Guid("c40b5318-c500-4ffc-8665-7278b64c5340")
                        },
                        new
                        {
                            Id = new Guid("d5d006b1-9f4c-43c0-a85d-aec04bb21651"),
                            Name = "Издательство, год",
                            Number = 6,
                            TableId = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("c338be79-3a70-400b-ade1-4238cfc98234"),
                            Name = "Название дисциплины",
                            Number = 1,
                            TableId = new Guid("b274a947-530f-47bb-b8e8-f3626fcbccf2"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("49693feb-b595-4e66-b7bd-33c583093e6b"),
                            Name = "Вид (лекции, лабораторные)",
                            Number = 2,
                            TableId = new Guid("b274a947-530f-47bb-b8e8-f3626fcbccf2"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("d0ae3468-a70b-491e-a221-aae679fb34ea"),
                            Name = "Название курса",
                            Number = 1,
                            TableId = new Guid("9b781db3-a8cb-4e94-8114-8a44ce6420f9"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("a19c9d70-5a6e-479e-886a-53ed214d066f"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("9b781db3-a8cb-4e94-8114-8a44ce6420f9"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("72461200-bd55-4dd6-859d-de077988bb7c"),
                            Name = "Ссылка на платформу",
                            Number = 3,
                            TableId = new Guid("9b781db3-a8cb-4e94-8114-8a44ce6420f9"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("5f9568cd-5a8b-4e17-ab10-b29ead005cd4"),
                            Name = "Год",
                            Number = 4,
                            TableId = new Guid("9b781db3-a8cb-4e94-8114-8a44ce6420f9"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("1d82ca7d-fa2d-4d14-bd63-e634978535e2"),
                            Name = "Название статьи",
                            Number = 1,
                            TableId = new Guid("4fb349bf-cd0f-4048-8ca5-17f51d1e4c41"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("c0249435-e0bd-48dc-b2b6-f1ceb2bb3eea"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("4fb349bf-cd0f-4048-8ca5-17f51d1e4c41"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("659dc1de-b7c6-49f3-82f4-9603086bcbec"),
                            Name = "Тип публикации (категория ВАК/квартиль МБД)",
                            Number = 3,
                            TableId = new Guid("4fb349bf-cd0f-4048-8ca5-17f51d1e4c41"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("f63ea870-9caa-4ab8-883a-dfa6d871d988"),
                            Name = "Издание, год",
                            Number = 4,
                            TableId = new Guid("4fb349bf-cd0f-4048-8ca5-17f51d1e4c41"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("781a57fa-7e04-4ca3-ab31-e170ba6aa7c7"),
                            Name = "Тип идентификатора",
                            Number = 1,
                            TableId = new Guid("64c81acf-686b-4da6-b465-ebb79839edc4"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("e186453f-1d86-41f5-a9a8-ee0388be06b1"),
                            Name = "Идентификатор",
                            Number = 2,
                            TableId = new Guid("64c81acf-686b-4da6-b465-ebb79839edc4"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("dcb47384-32d7-405d-99f2-377c0b5a2699"),
                            Name = "Количество публикаций в БАЗЕ",
                            Number = 3,
                            TableId = new Guid("64c81acf-686b-4da6-b465-ebb79839edc4"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("a91a5ba1-691d-4531-8cd9-b3925a5a45ab"),
                            Name = "Количество цитирований",
                            Number = 4,
                            TableId = new Guid("64c81acf-686b-4da6-b465-ebb79839edc4"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("72250b1a-f5c0-49cc-8580-b23191179e9a"),
                            Name = "Индекс Хирша (за все время)",
                            Number = 5,
                            TableId = new Guid("64c81acf-686b-4da6-b465-ebb79839edc4"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("e2bc417d-b008-4d90-a9d3-f1675d7a826f"),
                            Name = "Название НИР/НИОКР",
                            Number = 1,
                            TableId = new Guid("35802550-4f0a-49c7-8604-7ae5cd60e43c"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("f91b9bd9-f4a4-4c8e-bb45-05cf7d25d535"),
                            Name = "Сумма финансирования (тыс. руб.)",
                            Number = 2,
                            TableId = new Guid("35802550-4f0a-49c7-8604-7ae5cd60e43c"),
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("58a29801-d5e7-48d7-8802-0bdb61d0a9d0"),
                            Name = "Период выполнения",
                            Number = 3,
                            TableId = new Guid("35802550-4f0a-49c7-8604-7ae5cd60e43c"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("86f6d1ed-9481-45bd-b9db-e5b93f6e6a26"),
                            Name = "Статус (руководитель/исполнитель)",
                            Number = 4,
                            TableId = new Guid("35802550-4f0a-49c7-8604-7ae5cd60e43c"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("8ecd005f-a780-4e6c-b339-f66a8e85e398"),
                            Name = "Регистрационный номер карты в системе ЕГИСУ (https://www.rosrid.ru/)",
                            Number = 5,
                            TableId = new Guid("35802550-4f0a-49c7-8604-7ae5cd60e43c"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("5384e4f1-493f-49c7-bbd4-9921f2e3aec1"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("619f4717-73bf-4652-859c-4d3a3da8049d"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("baae5761-40b5-4752-a963-4ee255436a3f"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("619f4717-73bf-4652-859c-4d3a3da8049d"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("52078266-6be4-4c39-aad0-9946e4898f9f"),
                            Name = "ФИО соавторов",
                            Number = 3,
                            TableId = new Guid("619f4717-73bf-4652-859c-4d3a3da8049d"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("c6f9b210-fd10-4519-a908-c669634b16b9"),
                            Name = "Номер РИД",
                            Number = 4,
                            TableId = new Guid("619f4717-73bf-4652-859c-4d3a3da8049d"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("b9488aa1-7cfe-4c6e-95fb-09268bb4483b"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("c4458d87-cb60-4e72-ae85-0b03efc08be3"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("1fe5d1d1-ea8d-43c5-a1d6-4fcb021932be"),
                            Name = "Название разработки",
                            Number = 2,
                            TableId = new Guid("c4458d87-cb60-4e72-ae85-0b03efc08be3"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("d16fe35a-9fe0-4ddd-93dc-c7685e7a77ac"),
                            Name = "Название организации в которую внедрена разработка",
                            Number = 3,
                            TableId = new Guid("c4458d87-cb60-4e72-ae85-0b03efc08be3"),
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("EditBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "Общая информация",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("0c8808c7-4274-4f10-a38c-486d0a76de75"),
                            Name = "Категория участников",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("bc562ed0-6d15-4ade-9f74-04bd750aa57e"),
                            Name = "Профессиональное развитие",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            Name = "Деятельность",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("8cd73dd8-f545-49d2-ad4b-94a184825a74"),
                            Name = "Деятельность",
                            Number = 5
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditGroup")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Placeholder")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d783c5d5-49b1-43e9-af69-8392acb7d55c"),
                            EditBlockId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "ФИО",
                            Number = 1,
                            Placeholder = "Иванов Иван Иванович",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("f663cc7f-ff3b-4806-af3f-3a157c543075"),
                            EditBlockId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "Дата рождения",
                            Number = 2,
                            Placeholder = "01.01.2000",
                            ValueTypeId = new Guid("27caa7b7-2d30-44c3-86a5-8d665877ea55")
                        },
                        new
                        {
                            Id = new Guid("ca05e077-020e-4236-af1a-c9f06a04f1e1"),
                            EditBlockId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "Домашний адрес",
                            Number = 3,
                            Placeholder = "Регион, город, улица, дом, квартира",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("8e66ddcc-5794-4cc0-ac09-4e3672479480"),
                            EditBlockId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "Контактный телефон",
                            Number = 4,
                            Placeholder = "+8 (900)-000-00-00",
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("78b46f99-65b0-4710-98a6-cfcf5de78be2"),
                            EditBlockId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "Электронная почта",
                            Number = 5,
                            Placeholder = "user@example.com",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("711c807d-77d1-4650-9b54-19041412aaf6"),
                            EditBlockId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "Место работы/учебы",
                            Number = 6,
                            Placeholder = "Название организации",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("ed7a901c-9173-425b-8003-0e6c6de496cb"),
                            EditBlockId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "Адрес работы/учебы",
                            Number = 7,
                            Placeholder = "Регион, город, улица, дом",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("08917d36-0269-4ec1-9bbe-ed785fcca6ab"),
                            EditBlockId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "Институт, факультет, кафедра, лаборатория",
                            Number = 8,
                            Placeholder = "Введите институт, факультет, кафедру, лабораторию",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("188c621f-4cbe-4bf2-9756-dbe6ee0bd342"),
                            EditBlockId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "Должность",
                            Number = 9,
                            Placeholder = "Введите свою должность в организации",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("e1a76ce9-4f49-4eb2-a8af-c2698205f94e"),
                            EditBlockId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "Стаж научно-педагогической деятельности по трудовой книжке",
                            Number = 10,
                            Placeholder = "Введите свой стаж",
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("d9537168-0d7d-4016-9a75-1e846d6a7bbe"),
                            EditBlockId = new Guid("1dda1080-e035-4e29-ac88-02420ca82062"),
                            Name = "Дополнительная информация",
                            Number = 11,
                            Placeholder = "Пример",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("a791611e-f88a-44c4-aafb-eb794c05a19c"),
                            EditBlockId = new Guid("0c8808c7-4274-4f10-a38c-486d0a76de75"),
                            Name = "Направление конкурса",
                            Number = 12,
                            Placeholder = "Выберите направление конкурса",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("ef4616fe-b66c-428a-a645-bd128eaadb6c"),
                            EditBlockId = new Guid("0c8808c7-4274-4f10-a38c-486d0a76de75"),
                            Name = "Категория участника конкурса (Работники высших учебных заведений, отраслевых и академических институтов, работники сектора промышленности (исследователи), осуществляющие научно-исследовательскую и/или научно-педагогическую деятельность)",
                            Number = 13,
                            Placeholder = "Выберите категорию участника конкруса",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("3e8f7559-5ca1-447a-ba8d-4da205094844"),
                            EditBlockId = new Guid("0c8808c7-4274-4f10-a38c-486d0a76de75"),
                            Name = "Название конкрусной работы",
                            Number = 14,
                            Placeholder = "Введите название своей конкурсной работы",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("7e4f2ad7-8c00-4cbf-816d-081bebbfc85c"),
                            EditBlockId = new Guid("0c8808c7-4274-4f10-a38c-486d0a76de75"),
                            Name = "Ученое звание",
                            Number = 15,
                            Placeholder = "Выберите ученое звание",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("f5e2f50e-8ca6-43c2-908f-b5f498e0877d"),
                            EditBlockId = new Guid("0c8808c7-4274-4f10-a38c-486d0a76de75"),
                            Name = "Ученая степень",
                            Number = 16,
                            Placeholder = "Выберите ученую степень",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("3a38d456-742f-4276-aee9-a2ec3c4c0208"),
                            EditBlockId = new Guid("0c8808c7-4274-4f10-a38c-486d0a76de75"),
                            Name = "Научная специальность (по классификации ВАК)",
                            Number = 17,
                            Placeholder = "Введите научную специальность (по классификации ВАК)",
                            ValueTypeId = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036")
                        },
                        new
                        {
                            Id = new Guid("e47d73a7-7ea9-41e6-8073-e98bf154dd5e"),
                            EditBlockId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-педагогической деятельности",
                            Name = "Защитившиеся кадидаты наук",
                            Number = 18,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("6a180669-e5f1-40be-b0f2-e78b89fd611e"),
                            EditBlockId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            Name = "Защитившиеся доктора наук",
                            Number = 19,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("f9864029-ceca-4c09-9f09-2a7d1739055a"),
                            EditBlockId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            EditGroup = "Руководство дипломными проектами за предыдущий учебный год",
                            Name = "Защитившиеся бакалавры",
                            Number = 20,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("13f3e524-d4da-4162-9bdc-9718b1ead6d3"),
                            EditBlockId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            Name = "Защитившиеся специалисты",
                            Number = 21,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("490302f1-fae1-4d36-9b85-434aaa53c48f"),
                            EditBlockId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            Name = "Защитившиеся магистры",
                            Number = 22,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("0b6450c5-e4c6-4b1b-84ae-2d78742877fb"),
                            EditBlockId = new Guid("8cd73dd8-f545-49d2-ad4b-94a184825a74"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-исследовательской деятельности",
                            Name = "Защитившиеся кандидаты наук",
                            Number = 23,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        },
                        new
                        {
                            Id = new Guid("a4f88551-f6e4-4672-a7dc-9066cf191cf8"),
                            EditBlockId = new Guid("8cd73dd8-f545-49d2-ad4b-94a184825a74"),
                            Name = "Защитившиеся доктора наук",
                            Number = 24,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("ApplicationId", "FieldId")
                        .IsUnique();

                    b.ToTable("FieldVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("TableId");

                    b.ToTable("Marks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("428a9254-0c1e-468b-92fe-19a3111d4c3d"),
                            Name = "Баллы за объем учебной нагрузки:",
                            Number = 1,
                            TableId = new Guid("71f5775c-55bf-47db-a79a-9713b1f6d492")
                        },
                        new
                        {
                            Id = new Guid("f94f0d5a-e57e-4628-83f6-e1778f1cb160"),
                            Name = "Баллы за количество дисциплин на иностранном языке, которые вел претендент, в предыдущем учебном году:",
                            Number = 2,
                            TableId = new Guid("71f5775c-55bf-47db-a79a-9713b1f6d492")
                        },
                        new
                        {
                            Id = new Guid("a97b5ed6-7799-4824-a5df-5786b39fce67"),
                            FieldId = new Guid("490302f1-fae1-4d36-9b85-434aaa53c48f"),
                            Name = "Баллы за количество квалификационных работ, выполненных под руководством претендента:",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("b80cdbde-f153-4d24-b8b2-4f2977d8064a"),
                            FieldId = new Guid("e47d73a7-7ea9-41e6-8073-e98bf154dd5e"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("f4814bfe-3b61-4fa1-9f6e-4417543157e0"),
                            FieldId = new Guid("6a180669-e5f1-40be-b0f2-e78b89fd611e"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("3b54a3b8-be83-416e-a012-5a847c0b18c7"),
                            Name = "Баллы за количество подготовленных студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание:",
                            Number = 6,
                            TableId = new Guid("143a4d76-6814-44a4-ad06-4ca9a1ba61ff")
                        },
                        new
                        {
                            Id = new Guid("807ae89d-d24e-441c-bc8f-2c7d122abc60"),
                            Name = "Баллы за количество онлайн курсов на открытых площадках:",
                            Number = 7,
                            TableId = new Guid("9b781db3-a8cb-4e94-8114-8a44ce6420f9")
                        },
                        new
                        {
                            Id = new Guid("29b3f439-6d56-4d27-8e04-9a5492b5ba28"),
                            Name = "Баллы за труды с грифом и без соавторства:",
                            Number = 8,
                            TableId = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8")
                        },
                        new
                        {
                            Id = new Guid("7b542f2b-2683-4a54-a418-bc46c852eb6c"),
                            Name = "Баллы за труды с грифом в соавторстве:",
                            Number = 9,
                            TableId = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8")
                        },
                        new
                        {
                            Id = new Guid("5def831c-620e-438a-a5cc-3f221b46d91d"),
                            Name = "Баллы за труды без грифа и без соавторства:",
                            Number = 10,
                            TableId = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8")
                        },
                        new
                        {
                            Id = new Guid("f8400e52-5a10-43e1-a652-d656f215a75d"),
                            Name = "Баллы за труды без грифа в соавторстве:",
                            Number = 11,
                            TableId = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8")
                        },
                        new
                        {
                            Id = new Guid("32e81cda-6b15-478f-b762-b022bf94f646"),
                            Name = "Баллы за количество практикумов и курсов лекций:",
                            Number = 12,
                            TableId = new Guid("b274a947-530f-47bb-b8e8-f3626fcbccf2")
                        },
                        new
                        {
                            Id = new Guid("cd455721-cb3b-4d4b-957d-b1018b8c849a"),
                            FieldId = new Guid("7e4f2ad7-8c00-4cbf-816d-081bebbfc85c"),
                            Name = "Баллы за ученое звание:",
                            Number = 13
                        },
                        new
                        {
                            Id = new Guid("372af6b8-ee21-490a-a821-e95252ed5b6b"),
                            Name = "Баллы за награды:",
                            Number = 14,
                            TableId = new Guid("edc350bc-82f6-41d8-92e0-7d7d2e7452e8")
                        },
                        new
                        {
                            Id = new Guid("2dae456c-1c94-4766-9740-3c06fca82865"),
                            Name = "Баллы за профессиональное развитие:",
                            Number = 15,
                            TableId = new Guid("b64f67fd-3f9d-4a06-ba87-55d1a709b453")
                        },
                        new
                        {
                            Id = new Guid("1bbae866-be86-4ef7-b920-9ce1b913c075"),
                            Name = "Баллы за научные публикации:",
                            Number = 16,
                            TableId = new Guid("4fb349bf-cd0f-4048-8ca5-17f51d1e4c41")
                        },
                        new
                        {
                            Id = new Guid("3c5301e4-acab-4fe3-afc8-feca3384d352"),
                            Name = "Баллы по базе Scopus:",
                            Number = 17,
                            TableId = new Guid("64c81acf-686b-4da6-b465-ebb79839edc4")
                        },
                        new
                        {
                            Id = new Guid("f8f090ac-0084-436c-86f0-0b9dc9443798"),
                            Name = "Баллы по базе РИНЦ:",
                            Number = 18,
                            TableId = new Guid("64c81acf-686b-4da6-b465-ebb79839edc4")
                        },
                        new
                        {
                            Id = new Guid("d4624fdf-f2ca-4b02-8153-df7f38ab23e8"),
                            FieldId = new Guid("0b6450c5-e4c6-4b1b-84ae-2d78742877fb"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 19
                        },
                        new
                        {
                            Id = new Guid("ba52d1ef-079b-47d6-a392-9d9ace48b8d4"),
                            FieldId = new Guid("a4f88551-f6e4-4672-a7dc-9066cf191cf8"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 20
                        },
                        new
                        {
                            Id = new Guid("6956ba82-4392-4c98-aa51-4c88509a782e"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве руководителя:",
                            Number = 21,
                            TableId = new Guid("35802550-4f0a-49c7-8604-7ae5cd60e43c")
                        },
                        new
                        {
                            Id = new Guid("26ca7e10-8dd3-4966-9f6c-2bf8cfe1bd0d"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве исполнителя:",
                            Number = 22,
                            TableId = new Guid("35802550-4f0a-49c7-8604-7ae5cd60e43c")
                        },
                        new
                        {
                            Id = new Guid("04e6730f-e10d-4b05-b52e-c3ae4c1b9e6f"),
                            Name = "Баллы за количество объектов интеллектуальной собственности:",
                            Number = 23,
                            TableId = new Guid("619f4717-73bf-4652-859c-4d3a3da8049d")
                        },
                        new
                        {
                            Id = new Guid("49abead9-7b50-4596-b3dd-91d565059db2"),
                            Name = "Баллы за количество разработок:",
                            Number = 24,
                            TableId = new Guid("c4458d87-cb60-4e72-ae85-0b03efc08be3")
                        },
                        new
                        {
                            Id = new Guid("8d5bdde4-bd84-471f-bd9f-21f0bb071cef"),
                            Name = "Оценка уровня предоставленной работы:",
                            Number = 25
                        },
                        new
                        {
                            Id = new Guid("9526fe7a-4a84-4491-84c5-398199b4e40b"),
                            Name = "Использование в представленной работе инновационных методов (проблемного и проективного обучения, тренинговых форм, модульно-кредитных, модульно-рейтинговых систем обучения и контроля знаний):",
                            Number = 26
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("MarkBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0165f555-0787-4a87-8f3c-cf368193bab1"),
                            Name = "Основной",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("40851c9f-314e-4e30-a21c-c622a10eae25"),
                            Name = "Образовательная деятельность",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("6bf55534-4783-4787-973c-6b110f1d9949"),
                            Name = "Методическая деятельность",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("41a63948-a198-43c1-90f1-bec3431f613a"),
                            Name = "Профессиональные показатели",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("da62f8eb-04c3-4fcf-a8a8-c00931f1f815"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("0c00f3f3-8736-4285-947b-bcc9dad43220"),
                            Name = "Инновационная и иная деятельность",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("77419d63-f392-4eae-baf0-4b85fe8e8d45"),
                            Name = "Конкурсная работа",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("4ec27e93-178c-479c-be65-21bedb251290"),
                            Name = "Итог",
                            Number = 8
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarkId");

                    b.HasIndex("ApplicationId", "MarkId")
                        .IsUnique();

                    b.ToTable("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.SelectValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("FieldId");

                    b.ToTable("SelectValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d40d7cfa-1b9d-4f65-9a75-98905a85eb93"),
                            FieldId = new Guid("a791611e-f88a-44c4-aafb-eb794c05a19c"),
                            Value = "АРХИТЕКТУРА"
                        },
                        new
                        {
                            Id = new Guid("da482456-d0e3-4cf4-899e-0e8d76fdda70"),
                            FieldId = new Guid("a791611e-f88a-44c4-aafb-eb794c05a19c"),
                            Value = "ТЕХНИКА И ТЕХНОЛОГИИ СТРОИТЕЛЬСТВА"
                        },
                        new
                        {
                            Id = new Guid("34b63049-7cac-496c-8c30-db38d5cfdba4"),
                            FieldId = new Guid("a791611e-f88a-44c4-aafb-eb794c05a19c"),
                            Value = "СТРОИТЕЛЬСТВО И АРХИТЕКТУРА"
                        },
                        new
                        {
                            Id = new Guid("81809d0b-697f-43f0-a4b4-8882cd550c2c"),
                            FieldId = new Guid("a791611e-f88a-44c4-aafb-eb794c05a19c"),
                            Value = "ЭЛЕКТРО- И ТЕПЛОЭНЕРГЕТИКА"
                        },
                        new
                        {
                            Id = new Guid("d15c65f9-3796-4926-816b-b422b0c93e9d"),
                            FieldId = new Guid("a791611e-f88a-44c4-aafb-eb794c05a19c"),
                            Value = "ПРИКЛАДНАЯ ГЕОЛОГИЯ, ГОРНОЕ ДЕЛО, НЕФТЕГАЗОВОЕ ДЕЛО И ГЕОДЕЗИЯ"
                        },
                        new
                        {
                            Id = new Guid("578cb3f8-75a9-4b9b-af63-d8563767867e"),
                            FieldId = new Guid("a791611e-f88a-44c4-aafb-eb794c05a19c"),
                            Value = "НЕДРОПОЛЬЗОВАНИЕ И ГОРНЫЕ НАУКИ"
                        },
                        new
                        {
                            Id = new Guid("e7a0ad3c-72ae-441d-90fa-85b8e9982fff"),
                            FieldId = new Guid("ef4616fe-b66c-428a-a645-bd128eaadb6c"),
                            Value = "Аспиранты, адъюнкты, ординаторы, ассистенты-стажеры, не имеющие ученой степени"
                        },
                        new
                        {
                            Id = new Guid("22d120a8-5818-4d36-8e3f-e0c4ad58877b"),
                            FieldId = new Guid("ef4616fe-b66c-428a-a645-bd128eaadb6c"),
                            Value = "Докторанты, имеющие ученую степень кандидата наук"
                        },
                        new
                        {
                            Id = new Guid("d5723961-f2e6-4c35-bef2-81cec8397313"),
                            FieldId = new Guid("ef4616fe-b66c-428a-a645-bd128eaadb6c"),
                            Value = "Имеющие ученую степень доктора наук"
                        },
                        new
                        {
                            Id = new Guid("c0c1be3d-b103-4af8-8709-9172bfc321e8"),
                            FieldId = new Guid("7e4f2ad7-8c00-4cbf-816d-081bebbfc85c"),
                            Value = "Доцент"
                        },
                        new
                        {
                            Id = new Guid("993cb145-c72d-4bad-a245-7d9dc0edc376"),
                            FieldId = new Guid("7e4f2ad7-8c00-4cbf-816d-081bebbfc85c"),
                            Value = "Профессор"
                        },
                        new
                        {
                            Id = new Guid("663571a7-119f-4d6f-b3de-7c138a1d9e95"),
                            ColumnId = new Guid("9e2c4fc0-720f-4766-bd9d-98056517f191"),
                            Value = "Региональный"
                        },
                        new
                        {
                            Id = new Guid("e61d2983-eb6d-4427-85bd-d19f7881d59d"),
                            ColumnId = new Guid("9e2c4fc0-720f-4766-bd9d-98056517f191"),
                            Value = "Всероссийский"
                        },
                        new
                        {
                            Id = new Guid("c7818e7b-e1c4-432e-9257-8239644ed9da"),
                            ColumnId = new Guid("9e2c4fc0-720f-4766-bd9d-98056517f191"),
                            Value = "Международный"
                        },
                        new
                        {
                            Id = new Guid("33cee135-1341-4b15-ab89-3147fe3eeba0"),
                            ColumnId = new Guid("f113e9d6-86da-41c2-94c3-04f561faf76d"),
                            Value = "Учебное и/или учебно-методическое пособие"
                        },
                        new
                        {
                            Id = new Guid("45695db0-0693-412c-a896-e53b9c82cfb5"),
                            ColumnId = new Guid("f113e9d6-86da-41c2-94c3-04f561faf76d"),
                            Value = "Учебник"
                        },
                        new
                        {
                            Id = new Guid("b162f8ed-e0df-44b2-b2a8-b2a0a7ae5374"),
                            ColumnId = new Guid("f113e9d6-86da-41c2-94c3-04f561faf76d"),
                            Value = "Монография"
                        },
                        new
                        {
                            Id = new Guid("660cd2ec-96b1-4b60-95ef-c648e21a5a93"),
                            ColumnId = new Guid("49693feb-b595-4e66-b7bd-33c583093e6b"),
                            Value = "Лекции"
                        },
                        new
                        {
                            Id = new Guid("195f606b-8893-435d-8467-ef2942d464c8"),
                            ColumnId = new Guid("49693feb-b595-4e66-b7bd-33c583093e6b"),
                            Value = "Лабораторные"
                        },
                        new
                        {
                            Id = new Guid("75eb3aa6-2faa-4d4d-8e63-46763e323d56"),
                            ColumnId = new Guid("86f6d1ed-9481-45bd-b9db-e5b93f6e6a26"),
                            Value = "Руководитель"
                        },
                        new
                        {
                            Id = new Guid("e8383c82-e16d-4d5a-820c-760362d9bf89"),
                            ColumnId = new Guid("86f6d1ed-9481-45bd-b9db-e5b93f6e6a26"),
                            Value = "Исполнитель"
                        },
                        new
                        {
                            Id = new Guid("aab88d5b-52ed-44a2-b60f-d8b0eab0e784"),
                            ColumnId = new Guid("5384e4f1-493f-49c7-bbd4-9921f2e3aec1"),
                            Value = "Изобретение"
                        },
                        new
                        {
                            Id = new Guid("7419cee8-c60b-4406-8c17-fcf17cb996c1"),
                            ColumnId = new Guid("5384e4f1-493f-49c7-bbd4-9921f2e3aec1"),
                            Value = "Полезная модель"
                        },
                        new
                        {
                            Id = new Guid("e5f9a4c1-2277-4d2f-9604-bf5e87c89729"),
                            ColumnId = new Guid("5384e4f1-493f-49c7-bbd4-9921f2e3aec1"),
                            Value = "База данных"
                        },
                        new
                        {
                            Id = new Guid("09126e00-094e-4d77-8196-e1db9a322d27"),
                            ColumnId = new Guid("b9488aa1-7cfe-4c6e-95fb-09268bb4483b"),
                            Value = "Изобретение"
                        },
                        new
                        {
                            Id = new Guid("00ddbee1-1009-4511-8e4f-451cddb3a0c6"),
                            ColumnId = new Guid("b9488aa1-7cfe-4c6e-95fb-09268bb4483b"),
                            Value = "Полезная модель"
                        },
                        new
                        {
                            Id = new Guid("a62d1632-163b-4fe7-8a3f-054596057682"),
                            ColumnId = new Guid("b9488aa1-7cfe-4c6e-95fb-09268bb4483b"),
                            Value = "База данных"
                        },
                        new
                        {
                            Id = new Guid("6a60ce08-23c0-4b95-9393-bb14a2600933"),
                            FieldId = new Guid("7e4f2ad7-8c00-4cbf-816d-081bebbfc85c"),
                            Value = "Нет"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("edc350bc-82f6-41d8-92e0-7d7d2e7452e8"),
                            EditBlockId = new Guid("bc562ed0-6d15-4ade-9f74-04bd750aa57e"),
                            Name = "Награждение премиями, наградами в области научно-педагогической деятельности городского, всероссийского или международного уровня (в том числе зарубежными), победы в профессиональных конкурсах за весь период научно-педагогической деятельности",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("b64f67fd-3f9d-4a06-ba87-55d1a709b453"),
                            EditBlockId = new Guid("bc562ed0-6d15-4ade-9f74-04bd750aa57e"),
                            Name = "Сведения о профессиональном развитии участника конкурса за последние 5 лет (курсы повышения квалификации/ стажировки)",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("71f5775c-55bf-47db-a79a-9713b1f6d492"),
                            EditBlockId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            Name = "Учебная нагрузка за предыдущий учебный год (за исключением методической)",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("143a4d76-6814-44a4-ad06-4ca9a1ba61ff"),
                            EditBlockId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            Name = "Список подготовленных под руководством участника конкурса студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("a326230f-e103-4657-8cc0-72941957fda1"),
                            EditBlockId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            Name = "Сведения о работе, выполняемой участником конкурса в области научно-педагогической деятельности по совместительству (не по основному месту работы) в высшем учебном заведении, академическом институте, отраслевом научно-исследовательском институте, профессиональной образовательной организации, общеобразовательной организации за предыдущий учебный год",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("eebaa703-33b2-48a0-b7fd-c833cb0eb3f8"),
                            EditBlockId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            Name = "Монографии, учебники, учебные и учебно-методические пособия с грифами и без грифов УМО, Министерств РФ или государственных академий наук, изданные типографским способом за последние 5 лет",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("b274a947-530f-47bb-b8e8-f3626fcbccf2"),
                            EditBlockId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            Name = "Список лабораторных практикумов и курсов лекций (разработанных самостоятельно участником конкурса) за последние 5 лет",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("9b781db3-a8cb-4e94-8114-8a44ce6420f9"),
                            EditBlockId = new Guid("62d5afea-95cb-49bc-91cd-77af995ebb7c"),
                            Name = "Список разработанных онлайн-курсов на открытых платформах за последние 5 лет",
                            Number = 8
                        },
                        new
                        {
                            Id = new Guid("4fb349bf-cd0f-4048-8ca5-17f51d1e4c41"),
                            EditBlockId = new Guid("8cd73dd8-f545-49d2-ad4b-94a184825a74"),
                            Name = "Список научных публикаций за последние 5 лет",
                            Number = 9
                        },
                        new
                        {
                            Id = new Guid("64c81acf-686b-4da6-b465-ebb79839edc4"),
                            EditBlockId = new Guid("8cd73dd8-f545-49d2-ad4b-94a184825a74"),
                            Name = "Персональные идентификаторы и показатели",
                            Number = 10
                        },
                        new
                        {
                            Id = new Guid("35802550-4f0a-49c7-8604-7ae5cd60e43c"),
                            EditBlockId = new Guid("8cd73dd8-f545-49d2-ad4b-94a184825a74"),
                            Name = "Список выполненных НИР / НИОКР с финансированием в размере от 200 тыс. руб. и выше за последние 5 лет",
                            Number = 11
                        },
                        new
                        {
                            Id = new Guid("619f4717-73bf-4652-859c-4d3a3da8049d"),
                            EditBlockId = new Guid("8cd73dd8-f545-49d2-ad4b-94a184825a74"),
                            Name = "Список объектов интеллектуальной собственности, созданных участником конкурса за весь период научно-педагогической деятельности (созданных самостоятельно / в соавторстве), официально зарегистрированных в установленном порядке (в России / за рубежом)",
                            Number = 12
                        },
                        new
                        {
                            Id = new Guid("c4458d87-cb60-4e72-ae85-0b03efc08be3"),
                            EditBlockId = new Guid("8cd73dd8-f545-49d2-ad4b-94a184825a74"),
                            Name = "Перечень разработок, внедренных на предприятиях и организациях реального сектора экономики (в России / за рубежом)",
                            Number = 13
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10ff6132-63ea-482f-8000-2ad682d4dca3"),
                            Name = "Научно-педагогическая деятельность",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("d8e89007-76bf-41a3-9794-576a71e73732"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 2
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db758034-f57a-4ad1-9f5a-7c8cf1236693"),
                            Name = "User 1",
                            Username = "admin@mail.ru"
                        },
                        new
                        {
                            Id = new Guid("f62bf5c0-a626-41cc-9c2f-232a0fbe1dd8"),
                            Name = "User 2",
                            Username = "user@mail.ru"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ValueTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2212270c-2b39-4bc2-bb54-3fc50b87c033"),
                            Name = "int"
                        },
                        new
                        {
                            Id = new Guid("00229da4-ec96-4232-97e1-d63e3d40a036"),
                            Name = "string"
                        },
                        new
                        {
                            Id = new Guid("c40b5318-c500-4ffc-8665-7278b64c5340"),
                            Name = "bool"
                        },
                        new
                        {
                            Id = new Guid("27caa7b7-2d30-44c3-86a5-8d665877ea55"),
                            Name = "DateTime"
                        });
                });

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", null)
                        .WithMany()
                        .HasForeignKey("EditBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", null)
                        .WithMany()
                        .HasForeignKey("FieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Table", null)
                        .WithMany()
                        .HasForeignKey("TablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", null)
                        .WithMany()
                        .HasForeignKey("MarksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Track", "Track")
                        .WithMany("Applications")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.UserInfo", "UserInfo")
                        .WithMany("Applications")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("CellVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("CellVals")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Row", "Row")
                        .WithMany("CellVals")
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Column");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Columns")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Columns")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Fields")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Fields")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("FieldVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("FieldVals")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("Marks")
                        .HasForeignKey("FieldId");

                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Marks")
                        .HasForeignKey("TableId");

                    b.Navigation("Field");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("MarkVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", "Mark")
                        .WithMany("MarkVals")
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Mark");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Rows")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.SelectValue", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("SelectValues")
                        .HasForeignKey("ColumnId");

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("SelectValues")
                        .HasForeignKey("FieldId");

                    b.Navigation("Column");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Tables")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Navigation("CellVals");

                    b.Navigation("FieldVals");

                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Navigation("CellVals");

                    b.Navigation("SelectValues");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Navigation("FieldVals");

                    b.Navigation("Marks");

                    b.Navigation("SelectValues");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Navigation("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Marks");

                    b.Navigation("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
