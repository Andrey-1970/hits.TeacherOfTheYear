// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp.Data;

#nullable disable

namespace ServerApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240818145048_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.Property<Guid>("EditBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("EditBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("EditBlockTrack");

                    b.HasData(
                        new
                        {
                            EditBlocksId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            TracksId = new Guid("67e4414f-c866-4fa7-856f-1dfb97bc291e")
                        },
                        new
                        {
                            EditBlocksId = new Guid("9ccefea5-fead-45a2-a7aa-57e2d584810e"),
                            TracksId = new Guid("67e4414f-c866-4fa7-856f-1dfb97bc291e")
                        },
                        new
                        {
                            EditBlocksId = new Guid("5057cb29-44bc-4119-b4b3-d84dd61dc0e9"),
                            TracksId = new Guid("67e4414f-c866-4fa7-856f-1dfb97bc291e")
                        },
                        new
                        {
                            EditBlocksId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            TracksId = new Guid("67e4414f-c866-4fa7-856f-1dfb97bc291e")
                        },
                        new
                        {
                            EditBlocksId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            TracksId = new Guid("dfbcced5-3c0a-44f2-bdfb-dfc1bec36d01")
                        },
                        new
                        {
                            EditBlocksId = new Guid("9ccefea5-fead-45a2-a7aa-57e2d584810e"),
                            TracksId = new Guid("dfbcced5-3c0a-44f2-bdfb-dfc1bec36d01")
                        },
                        new
                        {
                            EditBlocksId = new Guid("5057cb29-44bc-4119-b4b3-d84dd61dc0e9"),
                            TracksId = new Guid("dfbcced5-3c0a-44f2-bdfb-dfc1bec36d01")
                        },
                        new
                        {
                            EditBlocksId = new Guid("beb58483-4136-450b-b831-d8669e2578f7"),
                            TracksId = new Guid("dfbcced5-3c0a-44f2-bdfb-dfc1bec36d01")
                        });
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.Property<Guid>("FieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.HasKey("FieldsId", "MarkBlocksId");

                    b.HasIndex("MarkBlocksId");

                    b.ToTable("FieldMarkBlock");

                    b.HasData(
                        new
                        {
                            FieldsId = new Guid("4fbcbe10-cec4-42b9-9f8a-47e0b8c4ec77"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("2ae1441a-274e-4373-9adc-01a058198446"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("a5cd8441-9bcf-4296-af93-39860cd1a90b"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("891c35c9-f30f-4e42-a31d-2de222cd8cbc"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("ceada615-4230-40ab-8f47-74b44c4e17b0"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("8c3db563-9dd0-42f7-b543-b824166566eb"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("2845d8d1-f08b-4ecb-8d55-f00f556794f0"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("bf3392d8-4b8a-4473-bb0b-af7ae3e6a9a4"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("3e0422cb-151d-4d73-a957-c30a6bf5a9d5"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("a8d4f324-bf85-40a4-94ad-4e8198ec5ca9"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("a13c12d5-a9b2-4bf4-b3c4-d8ee078db0ed"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("e1189cf5-48bb-4dbe-8113-18127a3dbb2f"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("ac8c84db-e865-49b1-93a1-bf01988d207d"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("876fe695-546f-46cb-834a-9319784ab15b"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("0a13fe9a-8291-4b82-8ada-af22994ce905"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("2190c802-624c-428c-ae2f-35c98bee5a9f"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("46877dca-d317-4297-b043-aa9f578540c7"),
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710")
                        },
                        new
                        {
                            FieldsId = new Guid("cbf18ced-4896-457f-934c-e78fb697ad22"),
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852")
                        },
                        new
                        {
                            FieldsId = new Guid("8d561551-5f05-4321-8607-22af69a9449c"),
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852")
                        },
                        new
                        {
                            FieldsId = new Guid("2ab1c897-5131-46fc-a83b-2b9ca0094ab4"),
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852")
                        },
                        new
                        {
                            FieldsId = new Guid("f6b8c397-8d66-410f-8238-c00d51c51a11"),
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852")
                        },
                        new
                        {
                            FieldsId = new Guid("b9012d85-8108-4417-a028-3e86a2ca6ba2"),
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852")
                        },
                        new
                        {
                            FieldsId = new Guid("0a13fe9a-8291-4b82-8ada-af22994ce905"),
                            MarkBlocksId = new Guid("0534260a-fe4f-450b-843d-01c1b9aab16d")
                        },
                        new
                        {
                            FieldsId = new Guid("0a13fe9a-8291-4b82-8ada-af22994ce905"),
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799")
                        },
                        new
                        {
                            FieldsId = new Guid("7225ab70-9bda-4d89-977b-68df83cc4ef0"),
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799")
                        },
                        new
                        {
                            FieldsId = new Guid("82d35189-647e-428c-8676-e37cf3adf004"),
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799")
                        });
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TablesId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TablesId");

                    b.HasIndex("TablesId");

                    b.ToTable("MarkBlockTable");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            TablesId = new Guid("4645d45a-c02f-46e9-938d-d787b58d701b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            TablesId = new Guid("fde13e02-8582-481d-a4bb-f2610e697fe1")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            TablesId = new Guid("568788ad-0b8e-4f33-b909-47c5c988f61c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            TablesId = new Guid("1de25f8e-f3a4-42ef-bf92-d12fd25b5ea0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c75445b1-98a9-4875-acb4-8365b68bb5eb"),
                            TablesId = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c75445b1-98a9-4875-acb4-8365b68bb5eb"),
                            TablesId = new Guid("7bb6953d-0284-44d4-957c-b3be4e09df49")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0534260a-fe4f-450b-843d-01c1b9aab16d"),
                            TablesId = new Guid("d3b3bae6-2344-4b53-85cb-3529d48bbe99")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0534260a-fe4f-450b-843d-01c1b9aab16d"),
                            TablesId = new Guid("27b9e584-d330-4ae8-b25a-af96c0a9cff1")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            TablesId = new Guid("d3b3bae6-2344-4b53-85cb-3529d48bbe99")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            TablesId = new Guid("2f462a8b-4cb0-44c8-824a-6ffe9d7ff1e0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            TablesId = new Guid("c762f8cd-1c05-4025-b9d5-4678983e46ff")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            TablesId = new Guid("4feb52c3-8be3-4468-8e5b-8044f0c39153")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("491f4511-331b-4624-941a-5a7810619dd1"),
                            TablesId = new Guid("27b9e584-d330-4ae8-b25a-af96c0a9cff1")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("491f4511-331b-4624-941a-5a7810619dd1"),
                            TablesId = new Guid("187ea85a-2703-4662-b66e-1ce518f5fb0e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("491f4511-331b-4624-941a-5a7810619dd1"),
                            TablesId = new Guid("5719e3d7-67d7-4f37-b368-5779e1c4e7cd")
                        });
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("MarkBlockTrack");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710"),
                            TracksId = new Guid("67e4414f-c866-4fa7-856f-1dfb97bc291e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            TracksId = new Guid("67e4414f-c866-4fa7-856f-1dfb97bc291e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c75445b1-98a9-4875-acb4-8365b68bb5eb"),
                            TracksId = new Guid("67e4414f-c866-4fa7-856f-1dfb97bc291e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0534260a-fe4f-450b-843d-01c1b9aab16d"),
                            TracksId = new Guid("67e4414f-c866-4fa7-856f-1dfb97bc291e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("5c0cb20f-44c5-4d31-a2dd-ee2fac38abd6"),
                            TracksId = new Guid("67e4414f-c866-4fa7-856f-1dfb97bc291e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("32439931-0ae4-4fae-a68b-d3698f2cb521"),
                            TracksId = new Guid("67e4414f-c866-4fa7-856f-1dfb97bc291e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710"),
                            TracksId = new Guid("dfbcced5-3c0a-44f2-bdfb-dfc1bec36d01")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            TracksId = new Guid("dfbcced5-3c0a-44f2-bdfb-dfc1bec36d01")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("491f4511-331b-4624-941a-5a7810619dd1"),
                            TracksId = new Guid("dfbcced5-3c0a-44f2-bdfb-dfc1bec36d01")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("5c0cb20f-44c5-4d31-a2dd-ee2fac38abd6"),
                            TracksId = new Guid("dfbcced5-3c0a-44f2-bdfb-dfc1bec36d01")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("32439931-0ae4-4fae-a68b-d3698f2cb521"),
                            TracksId = new Guid("dfbcced5-3c0a-44f2-bdfb-dfc1bec36d01")
                        });
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "MarksId");

                    b.HasIndex("MarksId");

                    b.ToTable("MarkMarkBlock");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            MarksId = new Guid("ea8809e6-f29f-4bb7-ab63-897fd572bc80")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            MarksId = new Guid("72dd5279-cb6a-469f-bea9-a8de38f45f27")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            MarksId = new Guid("11b8e5f4-5554-4a7a-8c99-7cf0e33b0828")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            MarksId = new Guid("2345177c-3e08-4e91-b399-1013f1872a6b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            MarksId = new Guid("2e7df487-00d5-4cf5-a173-44849060d9bd")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            MarksId = new Guid("ccb41034-7a05-4402-9bc2-2077d97164e4")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            MarksId = new Guid("6af2648c-4831-4d6d-97c0-08e1f902e308")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c75445b1-98a9-4875-acb4-8365b68bb5eb"),
                            MarksId = new Guid("a26f16f6-6536-4099-92be-974343c031fb")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c75445b1-98a9-4875-acb4-8365b68bb5eb"),
                            MarksId = new Guid("f550b7e7-978e-4aeb-9a25-ca9c8bf82c6f")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c75445b1-98a9-4875-acb4-8365b68bb5eb"),
                            MarksId = new Guid("080af0b5-e4c7-4c0e-9937-5bb981a19493")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c75445b1-98a9-4875-acb4-8365b68bb5eb"),
                            MarksId = new Guid("b48046e2-a8cc-400e-b677-de930165f33b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c75445b1-98a9-4875-acb4-8365b68bb5eb"),
                            MarksId = new Guid("98658907-864f-48b5-98d8-1cbcab2ea7ec")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0534260a-fe4f-450b-843d-01c1b9aab16d"),
                            MarksId = new Guid("99002e8a-ffc2-4d89-af9a-896ebdb46ed7")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0534260a-fe4f-450b-843d-01c1b9aab16d"),
                            MarksId = new Guid("08d51fb0-8b6f-4720-8a95-5a12ad7e8168")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0534260a-fe4f-450b-843d-01c1b9aab16d"),
                            MarksId = new Guid("5902bed5-04c7-4146-926a-596af7bff174")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            MarksId = new Guid("99002e8a-ffc2-4d89-af9a-896ebdb46ed7")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            MarksId = new Guid("08d51fb0-8b6f-4720-8a95-5a12ad7e8168")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            MarksId = new Guid("459d09a8-8ef4-4fd8-afca-75af9e722727")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            MarksId = new Guid("c1159ccd-107e-4699-9825-19974cc0c8d3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            MarksId = new Guid("a6d1d440-56a6-4d61-b926-7eee957f41b6")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            MarksId = new Guid("552c20df-9c26-4b42-9bfb-d2b4a442569d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            MarksId = new Guid("1b3c3501-5cc1-4467-91fa-6140e7aad6c5")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            MarksId = new Guid("e4cf10c7-cdf2-49c4-af32-1fecdb50163d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            MarksId = new Guid("053ba6e1-0b76-490a-ab37-1964eed0f6c4")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("491f4511-331b-4624-941a-5a7810619dd1"),
                            MarksId = new Guid("5902bed5-04c7-4146-926a-596af7bff174")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("491f4511-331b-4624-941a-5a7810619dd1"),
                            MarksId = new Guid("a7d3d7b5-879b-4710-ad4f-817bd39a5aec")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("491f4511-331b-4624-941a-5a7810619dd1"),
                            MarksId = new Guid("12fff4b0-9820-4c08-a6b5-9981831cfde4")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("491f4511-331b-4624-941a-5a7810619dd1"),
                            MarksId = new Guid("89f2232d-1043-4009-aa4f-f36cd35a1d4b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("491f4511-331b-4624-941a-5a7810619dd1"),
                            MarksId = new Guid("0a34523d-d1e2-4280-994f-213be4679c0c")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("ApplicationForms");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RowId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("RowId");

                    b.HasIndex("ApplicationId", "RowId", "ColumnId")
                        .IsUnique();

                    b.ToTable("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("TableId", "Name")
                        .IsUnique();

                    b.HasIndex("TableId", "Number")
                        .IsUnique();

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22795765-869b-4009-8ace-06a2e178eb1b"),
                            Name = "Год",
                            Number = 1,
                            TableId = new Guid("d3b3bae6-2344-4b53-85cb-3529d48bbe99"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("c1448f16-f553-4c1e-936a-747a61e48312"),
                            Name = "Название конкурса",
                            Number = 2,
                            TableId = new Guid("d3b3bae6-2344-4b53-85cb-3529d48bbe99"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("25daf729-7f9c-45e8-9e3a-3dfd437bb785"),
                            Name = "Статус конкурса",
                            Number = 3,
                            TableId = new Guid("d3b3bae6-2344-4b53-85cb-3529d48bbe99"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("c8d46118-c651-49f9-baad-71dfbc1f2225"),
                            Name = "Награда",
                            Number = 4,
                            TableId = new Guid("d3b3bae6-2344-4b53-85cb-3529d48bbe99"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("54f80fc8-43ac-4c2c-b3f4-cf2373e702b9"),
                            Name = "Ссылка",
                            Number = 5,
                            TableId = new Guid("d3b3bae6-2344-4b53-85cb-3529d48bbe99"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("7b758505-19f5-4911-bb4a-1f898486d229"),
                            Name = "Название документа, реквизиты",
                            Number = 1,
                            TableId = new Guid("27b9e584-d330-4ae8-b25a-af96c0a9cff1"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("259a91ab-49aa-4231-9572-4237f1039d3a"),
                            Name = "Год получения документа",
                            Number = 2,
                            TableId = new Guid("27b9e584-d330-4ae8-b25a-af96c0a9cff1"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("7f394e07-b743-4ecb-b66e-87e382c97ba8"),
                            Name = "Наименование курса",
                            Number = 1,
                            TableId = new Guid("4645d45a-c02f-46e9-938d-d787b58d701b"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("a6d128e8-0716-4eea-b110-dc9b912732ea"),
                            Name = "Язык преподавания (русск./англ./др.)",
                            Number = 2,
                            TableId = new Guid("4645d45a-c02f-46e9-938d-d787b58d701b"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("616aee20-fa1f-45bd-8700-4b8af2372526"),
                            Name = "Лекции (час.)",
                            Number = 3,
                            TableId = new Guid("4645d45a-c02f-46e9-938d-d787b58d701b"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("5acd75b5-5639-49c0-9974-20be293da71b"),
                            Name = "Практические занятия (час.)",
                            Number = 4,
                            TableId = new Guid("4645d45a-c02f-46e9-938d-d787b58d701b"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("f87d43a4-7770-475f-8227-fe0e91f68980"),
                            Name = "Итого (час.)",
                            Number = 5,
                            TableId = new Guid("4645d45a-c02f-46e9-938d-d787b58d701b"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("4defc6cb-7b0b-4fab-bdf5-8f9f5dd40049"),
                            Name = "ФИО",
                            Number = 1,
                            TableId = new Guid("fde13e02-8582-481d-a4bb-f2610e697fe1"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("d51779c4-7f09-4d0d-a89b-2729908f7033"),
                            Name = "Название конкурса/премии",
                            Number = 2,
                            TableId = new Guid("fde13e02-8582-481d-a4bb-f2610e697fe1"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("a7f90f3c-a4a8-4189-bdc2-1f28051aad0d"),
                            Name = "Год",
                            Number = 3,
                            TableId = new Guid("fde13e02-8582-481d-a4bb-f2610e697fe1"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("1c131d44-5b5b-40cf-96ea-0922aa4260a3"),
                            Name = "Статус конкурса (международный, всероссийский), статус награды (РФ, субъект РФ)",
                            Number = 4,
                            TableId = new Guid("fde13e02-8582-481d-a4bb-f2610e697fe1"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("e68d390c-ce69-471a-ae61-9ec05e8730f1"),
                            Name = "Награда/премия (медаль, диплом с указанием степени)",
                            Number = 5,
                            TableId = new Guid("fde13e02-8582-481d-a4bb-f2610e697fe1"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("95724674-2bc6-42ba-9d2a-ef50d181b023"),
                            Name = "Название организации/должность/ставка",
                            Number = 1,
                            TableId = new Guid("568788ad-0b8e-4f33-b909-47c5c988f61c"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("3f45ef64-4ec5-4e2c-b41c-8d87a4cafb9f"),
                            Name = "Место нахождения (субъект РФ, зарубежье)",
                            Number = 2,
                            TableId = new Guid("568788ad-0b8e-4f33-b909-47c5c988f61c"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("337551cf-f0b1-4d83-956f-0a0cd7abac45"),
                            Name = "Вид деятельности (преподавательская)",
                            Number = 3,
                            TableId = new Guid("568788ad-0b8e-4f33-b909-47c5c988f61c"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("d6d86fe8-4a9c-46a8-a62c-e09dfa5fbb71"),
                            Name = "Количество часов",
                            Number = 4,
                            TableId = new Guid("568788ad-0b8e-4f33-b909-47c5c988f61c"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("4f2d202a-dc1a-4581-9101-aff95272fb3f"),
                            Name = "Вид публикации",
                            Number = 1,
                            TableId = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b"),
                            ValueTypeId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("12a8bdd2-fda9-4671-87d8-3db10483868c"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("952cf86e-ae11-41df-b91b-e0a1a7efa49b"),
                            Name = "Соавторы",
                            Number = 3,
                            TableId = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("8aaab10c-91e7-4234-8291-ad93c1996bc8"),
                            Name = "Количество печатных листов",
                            Number = 4,
                            TableId = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("f88df40e-8baf-4c13-8551-eb2d8e46d9e8"),
                            Name = "Наличие грифа",
                            Number = 5,
                            TableId = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b"),
                            ValueTypeId = new Guid("978e285a-2719-463d-855d-488801d440ae")
                        },
                        new
                        {
                            Id = new Guid("e3c1a8e5-ca76-422e-8db0-c4a534111803"),
                            Name = "Издательство, год",
                            Number = 6,
                            TableId = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("6d8805d5-4392-46da-81b2-15a664aa7990"),
                            Name = "Название дисциплины",
                            Number = 1,
                            TableId = new Guid("7bb6953d-0284-44d4-957c-b3be4e09df49"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("a3a856aa-649b-4ecf-9f75-159144234bdf"),
                            Name = "Вид (лекции, лабораторные)",
                            Number = 2,
                            TableId = new Guid("7bb6953d-0284-44d4-957c-b3be4e09df49"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("4523e611-de3e-4fd1-bc72-bc379b6c1dcb"),
                            Name = "Название курса",
                            Number = 1,
                            TableId = new Guid("1de25f8e-f3a4-42ef-bf92-d12fd25b5ea0"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("a75ee7c2-1d54-4662-9b24-42d26cdd783f"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("1de25f8e-f3a4-42ef-bf92-d12fd25b5ea0"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("8da2f97a-9699-43a0-9045-3d40ea72e0ed"),
                            Name = "Ссылка на платформу",
                            Number = 3,
                            TableId = new Guid("1de25f8e-f3a4-42ef-bf92-d12fd25b5ea0"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("21a89bdc-71f4-4870-ae07-5495ed8da81f"),
                            Name = "Год",
                            Number = 4,
                            TableId = new Guid("1de25f8e-f3a4-42ef-bf92-d12fd25b5ea0"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("376f4a76-68a5-4e1e-b2fc-5479eca304e8"),
                            Name = "Название статьи",
                            Number = 1,
                            TableId = new Guid("2f462a8b-4cb0-44c8-824a-6ffe9d7ff1e0"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("c0938620-f392-4824-b270-140b8a5c16a4"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("2f462a8b-4cb0-44c8-824a-6ffe9d7ff1e0"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("39972ea4-0450-46c4-a436-231822b5ae3a"),
                            Name = "Тип публикации (категория ВАК/квартиль МБД)",
                            Number = 3,
                            TableId = new Guid("2f462a8b-4cb0-44c8-824a-6ffe9d7ff1e0"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("2cfa490a-ede6-411e-8508-2e7ba65268d7"),
                            Name = "Издание, год",
                            Number = 4,
                            TableId = new Guid("2f462a8b-4cb0-44c8-824a-6ffe9d7ff1e0"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("576ec524-900c-4189-b94b-c84ec90f2ef2"),
                            Name = "Тип идентификатора",
                            Number = 1,
                            TableId = new Guid("c762f8cd-1c05-4025-b9d5-4678983e46ff"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("8231e5e1-05d1-421d-9b58-cc5c8768d0e4"),
                            Name = "Идентификатор",
                            Number = 2,
                            TableId = new Guid("c762f8cd-1c05-4025-b9d5-4678983e46ff"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("9115d30c-95b0-4756-8373-365c4de0296e"),
                            Name = "Количество публикаций в БАЗЕ",
                            Number = 3,
                            TableId = new Guid("c762f8cd-1c05-4025-b9d5-4678983e46ff"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("eb0a9002-2db6-4db1-ad14-34cca07f7671"),
                            Name = "Количество цитирований",
                            Number = 4,
                            TableId = new Guid("c762f8cd-1c05-4025-b9d5-4678983e46ff"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("0dd84a9b-3d3a-43f7-81a3-894723a1bb9b"),
                            Name = "Индекс Хирша (за все время)",
                            Number = 5,
                            TableId = new Guid("c762f8cd-1c05-4025-b9d5-4678983e46ff"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("5ac0e64e-80fb-4f1b-ae27-8a1e74b6bef5"),
                            Name = "Название НИР/НИОКР",
                            Number = 1,
                            TableId = new Guid("4feb52c3-8be3-4468-8e5b-8044f0c39153"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("f0f33e82-ac2b-415e-b408-2e3bf35ef012"),
                            Name = "Сумма финансирования (тыс. руб.)",
                            Number = 2,
                            TableId = new Guid("4feb52c3-8be3-4468-8e5b-8044f0c39153"),
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("64850e6e-c587-4bdd-9ba9-61ad4cb5733a"),
                            Name = "Период выполнения",
                            Number = 3,
                            TableId = new Guid("4feb52c3-8be3-4468-8e5b-8044f0c39153"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("4bb462ca-db4c-4cfb-b180-117059051920"),
                            Name = "Статус (руководитель/исполнитель)",
                            Number = 4,
                            TableId = new Guid("4feb52c3-8be3-4468-8e5b-8044f0c39153"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("c3f29709-a2ae-4c1a-9532-31b3e992c140"),
                            Name = "Регистрационный номер карты в системе ЕГИСУ (https://www.rosrid.ru/)",
                            Number = 5,
                            TableId = new Guid("4feb52c3-8be3-4468-8e5b-8044f0c39153"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("da51a04c-b9d5-496b-8c62-98bbbfa33011"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("187ea85a-2703-4662-b66e-1ce518f5fb0e"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("7897285c-a951-474f-a689-0e6cd176a717"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("187ea85a-2703-4662-b66e-1ce518f5fb0e"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("c82e7c55-71c2-410c-9e34-332f7a76b023"),
                            Name = "ФИО соавторов",
                            Number = 3,
                            TableId = new Guid("187ea85a-2703-4662-b66e-1ce518f5fb0e"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("b031d25a-3d36-4885-b2ff-45fea3c464c8"),
                            Name = "Номер РИД",
                            Number = 4,
                            TableId = new Guid("187ea85a-2703-4662-b66e-1ce518f5fb0e"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("e1475aed-30ad-4eea-90cf-62079a899592"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("5719e3d7-67d7-4f37-b368-5779e1c4e7cd"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("1b29645f-96e5-48af-85d8-99ded04d1b5c"),
                            Name = "Название разработки",
                            Number = 2,
                            TableId = new Guid("5719e3d7-67d7-4f37-b368-5779e1c4e7cd"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("eaaa5f28-5504-47fb-9447-36c0f74e5917"),
                            Name = "Название организации в которую внедрена разработка",
                            Number = 3,
                            TableId = new Guid("5719e3d7-67d7-4f37-b368-5779e1c4e7cd"),
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("EditBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "Общая информация",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("9ccefea5-fead-45a2-a7aa-57e2d584810e"),
                            Name = "Категория участников",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("5057cb29-44bc-4119-b4b3-d84dd61dc0e9"),
                            Name = "Профессиональное развитие",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Деятельность",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("beb58483-4136-450b-b831-d8669e2578f7"),
                            Name = "Деятельность",
                            Number = 5
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Placeholder")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4fbcbe10-cec4-42b9-9f8a-47e0b8c4ec77"),
                            EditBlockId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "ФИО",
                            Number = 1,
                            Placeholder = "Иванов Иван Иванович",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("2ae1441a-274e-4373-9adc-01a058198446"),
                            EditBlockId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "Дата рождения",
                            Number = 2,
                            Placeholder = "01.01.2000",
                            ValueTypeId = new Guid("7d584302-c308-40ad-ae7a-bc7fddfa57e0")
                        },
                        new
                        {
                            Id = new Guid("a5cd8441-9bcf-4296-af93-39860cd1a90b"),
                            EditBlockId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "Домашний адрес",
                            Number = 3,
                            Placeholder = "Регион, город, улица, дом, квартира",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("891c35c9-f30f-4e42-a31d-2de222cd8cbc"),
                            EditBlockId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "Контактный телефон",
                            Number = 4,
                            Placeholder = "+8 (900)-000-00-00",
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("ceada615-4230-40ab-8f47-74b44c4e17b0"),
                            EditBlockId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "Электронная почта",
                            Number = 5,
                            Placeholder = "user@example.com",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("8c3db563-9dd0-42f7-b543-b824166566eb"),
                            EditBlockId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "Место работы/учебы",
                            Number = 6,
                            Placeholder = "Название организации",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("2845d8d1-f08b-4ecb-8d55-f00f556794f0"),
                            EditBlockId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "Адрес работы/учебы",
                            Number = 7,
                            Placeholder = "Регион, город, улица, дом",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("bf3392d8-4b8a-4473-bb0b-af7ae3e6a9a4"),
                            EditBlockId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "Институт, факультет, кафедра, лаборатория",
                            Number = 8,
                            Placeholder = "Введите институт, факультет, кафедру, лабораторию",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("3e0422cb-151d-4d73-a957-c30a6bf5a9d5"),
                            EditBlockId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "Должность",
                            Number = 9,
                            Placeholder = "Введите свою должность в организации",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("a8d4f324-bf85-40a4-94ad-4e8198ec5ca9"),
                            EditBlockId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "Стаж научно-педагогической деятельности по трудовой книжке",
                            Number = 10,
                            Placeholder = "Введите свой стаж",
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("a13c12d5-a9b2-4bf4-b3c4-d8ee078db0ed"),
                            EditBlockId = new Guid("83c025bf-049f-4bc8-947c-93e8027c788a"),
                            Name = "Дополнительная информация",
                            Number = 11,
                            Placeholder = "Пример",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("e1189cf5-48bb-4dbe-8113-18127a3dbb2f"),
                            EditBlockId = new Guid("9ccefea5-fead-45a2-a7aa-57e2d584810e"),
                            Name = "Направление конкурса",
                            Number = 12,
                            Placeholder = "Выберите направление конкурса",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("ac8c84db-e865-49b1-93a1-bf01988d207d"),
                            EditBlockId = new Guid("9ccefea5-fead-45a2-a7aa-57e2d584810e"),
                            Name = "Категория участника конкурса",
                            Number = 13,
                            Placeholder = "Выберите категорию участника конкруса",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("876fe695-546f-46cb-834a-9319784ab15b"),
                            EditBlockId = new Guid("9ccefea5-fead-45a2-a7aa-57e2d584810e"),
                            Name = "Название конкрусной работы",
                            Number = 14,
                            Placeholder = "Введите название своей конкурсной работы",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("0a13fe9a-8291-4b82-8ada-af22994ce905"),
                            EditBlockId = new Guid("9ccefea5-fead-45a2-a7aa-57e2d584810e"),
                            Name = "Ученое звание",
                            Number = 15,
                            Placeholder = "Выберите ученое звание",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("2190c802-624c-428c-ae2f-35c98bee5a9f"),
                            EditBlockId = new Guid("9ccefea5-fead-45a2-a7aa-57e2d584810e"),
                            Name = "Ученая степень",
                            Number = 16,
                            Placeholder = "Выберите ученую степень",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("46877dca-d317-4297-b043-aa9f578540c7"),
                            EditBlockId = new Guid("9ccefea5-fead-45a2-a7aa-57e2d584810e"),
                            Name = "Научная специальность (по классификации ВАК)",
                            Number = 17,
                            Placeholder = "Введите научную специальность (по классификации ВАК)",
                            ValueTypeId = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649")
                        },
                        new
                        {
                            Id = new Guid("cbf18ced-4896-457f-934c-e78fb697ad22"),
                            EditBlockId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Защитившиеся кадидаты наук",
                            Number = 18,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("8d561551-5f05-4321-8607-22af69a9449c"),
                            EditBlockId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Защитившиеся доктора наук",
                            Number = 19,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("2ab1c897-5131-46fc-a83b-2b9ca0094ab4"),
                            EditBlockId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Защитившиеся бакалавры",
                            Number = 20,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("f6b8c397-8d66-410f-8238-c00d51c51a11"),
                            EditBlockId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Защитившиеся специалисты",
                            Number = 21,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("b9012d85-8108-4417-a028-3e86a2ca6ba2"),
                            EditBlockId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Защитившиеся магистры",
                            Number = 22,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("7225ab70-9bda-4d89-977b-68df83cc4ef0"),
                            EditBlockId = new Guid("beb58483-4136-450b-b831-d8669e2578f7"),
                            Name = "Защитившиеся кандидаты наук",
                            Number = 23,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        },
                        new
                        {
                            Id = new Guid("82d35189-647e-428c-8676-e37cf3adf004"),
                            EditBlockId = new Guid("beb58483-4136-450b-b831-d8669e2578f7"),
                            Name = "Защитившиеся доктора наук",
                            Number = 24,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("ApplicationId", "FieldId")
                        .IsUnique();

                    b.ToTable("FieldVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("TableId");

                    b.ToTable("Marks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea8809e6-f29f-4bb7-ab63-897fd572bc80"),
                            Name = "Баллы за объем учебной нагрузки:",
                            Number = 1,
                            TableId = new Guid("4645d45a-c02f-46e9-938d-d787b58d701b")
                        },
                        new
                        {
                            Id = new Guid("72dd5279-cb6a-469f-bea9-a8de38f45f27"),
                            Name = "Баллы за количество дисциплин на иностранном языке, которые вел претендент, в предыдущем учебном году:",
                            Number = 2,
                            TableId = new Guid("4645d45a-c02f-46e9-938d-d787b58d701b")
                        },
                        new
                        {
                            Id = new Guid("11b8e5f4-5554-4a7a-8c99-7cf0e33b0828"),
                            FieldId = new Guid("b9012d85-8108-4417-a028-3e86a2ca6ba2"),
                            Name = "Баллы за количество квалификационных работ, выполненных под руководством претендента:",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("2345177c-3e08-4e91-b399-1013f1872a6b"),
                            FieldId = new Guid("cbf18ced-4896-457f-934c-e78fb697ad22"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("2e7df487-00d5-4cf5-a173-44849060d9bd"),
                            FieldId = new Guid("8d561551-5f05-4321-8607-22af69a9449c"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("ccb41034-7a05-4402-9bc2-2077d97164e4"),
                            Name = "Баллы за количество подготовленных студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание:",
                            Number = 6,
                            TableId = new Guid("fde13e02-8582-481d-a4bb-f2610e697fe1")
                        },
                        new
                        {
                            Id = new Guid("6af2648c-4831-4d6d-97c0-08e1f902e308"),
                            Name = "Баллы за количество онлайн курсов на открытых площадках:",
                            Number = 7,
                            TableId = new Guid("1de25f8e-f3a4-42ef-bf92-d12fd25b5ea0")
                        },
                        new
                        {
                            Id = new Guid("a26f16f6-6536-4099-92be-974343c031fb"),
                            Name = "Баллы за труды с грифом и без соавторства:",
                            Number = 8,
                            TableId = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b")
                        },
                        new
                        {
                            Id = new Guid("f550b7e7-978e-4aeb-9a25-ca9c8bf82c6f"),
                            Name = "Баллы за труды с грифом в соавторстве:",
                            Number = 9,
                            TableId = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b")
                        },
                        new
                        {
                            Id = new Guid("080af0b5-e4c7-4c0e-9937-5bb981a19493"),
                            Name = "Баллы за труды без грифа и без соавторства:",
                            Number = 10,
                            TableId = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b")
                        },
                        new
                        {
                            Id = new Guid("b48046e2-a8cc-400e-b677-de930165f33b"),
                            Name = "Баллы за труды без грифа в соавторстве:",
                            Number = 11,
                            TableId = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b")
                        },
                        new
                        {
                            Id = new Guid("98658907-864f-48b5-98d8-1cbcab2ea7ec"),
                            Name = "Баллы за количество практикумов и курсов лекций:",
                            Number = 12,
                            TableId = new Guid("7bb6953d-0284-44d4-957c-b3be4e09df49")
                        },
                        new
                        {
                            Id = new Guid("99002e8a-ffc2-4d89-af9a-896ebdb46ed7"),
                            FieldId = new Guid("0a13fe9a-8291-4b82-8ada-af22994ce905"),
                            Name = "Баллы за ученое звание:",
                            Number = 13
                        },
                        new
                        {
                            Id = new Guid("08d51fb0-8b6f-4720-8a95-5a12ad7e8168"),
                            Name = "Баллы за награды:",
                            Number = 14,
                            TableId = new Guid("d3b3bae6-2344-4b53-85cb-3529d48bbe99")
                        },
                        new
                        {
                            Id = new Guid("5902bed5-04c7-4146-926a-596af7bff174"),
                            Name = "Баллы за профессиональное развитие:",
                            Number = 15,
                            TableId = new Guid("27b9e584-d330-4ae8-b25a-af96c0a9cff1")
                        },
                        new
                        {
                            Id = new Guid("459d09a8-8ef4-4fd8-afca-75af9e722727"),
                            Name = "Баллы за научные публикации:",
                            Number = 16,
                            TableId = new Guid("2f462a8b-4cb0-44c8-824a-6ffe9d7ff1e0")
                        },
                        new
                        {
                            Id = new Guid("c1159ccd-107e-4699-9825-19974cc0c8d3"),
                            Name = "Баллы по базе Scopus:",
                            Number = 17,
                            TableId = new Guid("c762f8cd-1c05-4025-b9d5-4678983e46ff")
                        },
                        new
                        {
                            Id = new Guid("a6d1d440-56a6-4d61-b926-7eee957f41b6"),
                            Name = "Баллы по базе РИНЦ:",
                            Number = 18,
                            TableId = new Guid("c762f8cd-1c05-4025-b9d5-4678983e46ff")
                        },
                        new
                        {
                            Id = new Guid("552c20df-9c26-4b42-9bfb-d2b4a442569d"),
                            FieldId = new Guid("7225ab70-9bda-4d89-977b-68df83cc4ef0"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 19
                        },
                        new
                        {
                            Id = new Guid("1b3c3501-5cc1-4467-91fa-6140e7aad6c5"),
                            FieldId = new Guid("82d35189-647e-428c-8676-e37cf3adf004"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 20
                        },
                        new
                        {
                            Id = new Guid("e4cf10c7-cdf2-49c4-af32-1fecdb50163d"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве руководителя:",
                            Number = 21,
                            TableId = new Guid("4feb52c3-8be3-4468-8e5b-8044f0c39153")
                        },
                        new
                        {
                            Id = new Guid("053ba6e1-0b76-490a-ab37-1964eed0f6c4"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве исполнителя:",
                            Number = 22,
                            TableId = new Guid("4feb52c3-8be3-4468-8e5b-8044f0c39153")
                        },
                        new
                        {
                            Id = new Guid("a7d3d7b5-879b-4710-ad4f-817bd39a5aec"),
                            Name = "Баллы за количество объектов интеллектуальной собственности:",
                            Number = 23,
                            TableId = new Guid("187ea85a-2703-4662-b66e-1ce518f5fb0e")
                        },
                        new
                        {
                            Id = new Guid("12fff4b0-9820-4c08-a6b5-9981831cfde4"),
                            Name = "Баллы за количество разработок:",
                            Number = 24,
                            TableId = new Guid("5719e3d7-67d7-4f37-b368-5779e1c4e7cd")
                        },
                        new
                        {
                            Id = new Guid("89f2232d-1043-4009-aa4f-f36cd35a1d4b"),
                            Name = "Оценка уровня предоставленной работы:",
                            Number = 25
                        },
                        new
                        {
                            Id = new Guid("0a34523d-d1e2-4280-994f-213be4679c0c"),
                            Name = "Использование в представленной работе инновационных методов (проблемного и проективного обучения, тренинговых форм, модульно-кредитных, модульно-рейтинговых систем обучения и контроля знаний):",
                            Number = 26
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("MarkBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("085f6e85-e21c-463c-af5e-d5883bd7a710"),
                            Name = "Основной",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("359a3d74-16f9-4aec-b547-f62e79131852"),
                            Name = "Образовательная деятельность",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("c75445b1-98a9-4875-acb4-8365b68bb5eb"),
                            Name = "Методическая деятельность",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("0534260a-fe4f-450b-843d-01c1b9aab16d"),
                            Name = "Профессиональные показатели",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("03ec8939-4d74-41b8-8fd5-ff4b098e1799"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("491f4511-331b-4624-941a-5a7810619dd1"),
                            Name = "Инновационная и иная деятельность",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("5c0cb20f-44c5-4d31-a2dd-ee2fac38abd6"),
                            Name = "Конкурсная работа",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("32439931-0ae4-4fae-a68b-d3698f2cb521"),
                            Name = "Итог",
                            Number = 8
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarkId");

                    b.HasIndex("ApplicationId", "MarkId")
                        .IsUnique();

                    b.ToTable("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3b3bae6-2344-4b53-85cb-3529d48bbe99"),
                            EditBlockId = new Guid("5057cb29-44bc-4119-b4b3-d84dd61dc0e9"),
                            Name = "Награждение премиями, наградами в области научно-педагогической деятельности городского, всероссийского или международного уровня (в том числе зарубежными), победы в профессиональных конкурсах за весь период научно-педагогической деятельности",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("27b9e584-d330-4ae8-b25a-af96c0a9cff1"),
                            EditBlockId = new Guid("5057cb29-44bc-4119-b4b3-d84dd61dc0e9"),
                            Name = "Сведения о профессиональном развитии участника конкурса за последние 5 лет (курсы повышения квалификации/ стажировки)",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("4645d45a-c02f-46e9-938d-d787b58d701b"),
                            EditBlockId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Учебная нагрузка за предыдущий учебный год (за исключением методической)",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("fde13e02-8582-481d-a4bb-f2610e697fe1"),
                            EditBlockId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Список подготовленных под руководством участника конкурса студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("568788ad-0b8e-4f33-b909-47c5c988f61c"),
                            EditBlockId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Сведения о работе, выполняемой участником конкурса в области научно-педагогической деятельности по совместительству (не по основному месту работы) в высшем учебном заведении, академическом институте, отраслевом научно-исследовательском институте, профессиональной образовательной организации, общеобразовательной организации за предыдущий учебный год",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("a7a5b3b6-a228-41c8-a327-e24419aaef2b"),
                            EditBlockId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Монографии, учебники, учебные и учебно-методические пособия с грифами и без грифов УМО, Министерств РФ или государственных академий наук, изданные типографским способом за последние 5 лет",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("7bb6953d-0284-44d4-957c-b3be4e09df49"),
                            EditBlockId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Список лабораторных практикумов и курсов лекций (разработанных самостоятельно участником конкурса) за последние 5 лет",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("1de25f8e-f3a4-42ef-bf92-d12fd25b5ea0"),
                            EditBlockId = new Guid("e0617a15-0a25-4a3e-831f-cc2a6e1c7e61"),
                            Name = "Список разработанных онлайн-курсов на открытых платформах за последние 5 лет",
                            Number = 8
                        },
                        new
                        {
                            Id = new Guid("2f462a8b-4cb0-44c8-824a-6ffe9d7ff1e0"),
                            EditBlockId = new Guid("beb58483-4136-450b-b831-d8669e2578f7"),
                            Name = "Список научных публикаций за последние 5 лет",
                            Number = 9
                        },
                        new
                        {
                            Id = new Guid("c762f8cd-1c05-4025-b9d5-4678983e46ff"),
                            EditBlockId = new Guid("beb58483-4136-450b-b831-d8669e2578f7"),
                            Name = "Персональные идентификаторы и показатели",
                            Number = 10
                        },
                        new
                        {
                            Id = new Guid("4feb52c3-8be3-4468-8e5b-8044f0c39153"),
                            EditBlockId = new Guid("beb58483-4136-450b-b831-d8669e2578f7"),
                            Name = "Список выполненных НИР / НИОКР с финансированием в размере от 200 тыс. руб. и выше за последние 5 лет",
                            Number = 11
                        },
                        new
                        {
                            Id = new Guid("187ea85a-2703-4662-b66e-1ce518f5fb0e"),
                            EditBlockId = new Guid("beb58483-4136-450b-b831-d8669e2578f7"),
                            Name = "Список объектов интеллектуальной собственности, созданных участником конкурса за весь период научно-педагогической деятельности (созданных самостоятельно / в соавторстве), официально зарегистрированных в установленном порядке (в России / за рубежом)",
                            Number = 12
                        },
                        new
                        {
                            Id = new Guid("5719e3d7-67d7-4f37-b368-5779e1c4e7cd"),
                            EditBlockId = new Guid("beb58483-4136-450b-b831-d8669e2578f7"),
                            Name = "Перечень разработок, внедренных на предприятиях и организациях реального сектора экономики (в России / за рубежом)",
                            Number = 13
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("67e4414f-c866-4fa7-856f-1dfb97bc291e"),
                            Name = "Научно-педагогическая деятельность",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("dfbcced5-3c0a-44f2-bdfb-dfc1bec36d01"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 2
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("725d80ef-ae58-4e0a-8f13-fb65de5d04b8"),
                            Name = "User 1",
                            Username = "admin@mail.ru"
                        },
                        new
                        {
                            Id = new Guid("786919c6-e4ad-48e6-bd29-d92a73bfe040"),
                            Name = "User 2",
                            Username = "user@mail.ru"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DataTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eeb7ae3d-a2d5-4271-b057-370a1f3c4ec2"),
                            Name = "int"
                        },
                        new
                        {
                            Id = new Guid("09339532-85e3-4a96-9fbe-8a6b87672649"),
                            Name = "string"
                        },
                        new
                        {
                            Id = new Guid("978e285a-2719-463d-855d-488801d440ae"),
                            Name = "bool"
                        },
                        new
                        {
                            Id = new Guid("7d584302-c308-40ad-ae7a-bc7fddfa57e0"),
                            Name = "DateTime"
                        });
                });

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", null)
                        .WithMany()
                        .HasForeignKey("EditBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", null)
                        .WithMany()
                        .HasForeignKey("FieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Table", null)
                        .WithMany()
                        .HasForeignKey("TablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", null)
                        .WithMany()
                        .HasForeignKey("MarksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Track", "Track")
                        .WithMany("Applications")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.UserInfo", "UserInfo")
                        .WithMany("Applications")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("CellVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("CellVals")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Row", "Row")
                        .WithMany("CellVals")
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Column");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Columns")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Columns")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Fields")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Fields")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("FieldVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("FieldVals")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("Marks")
                        .HasForeignKey("FieldId");

                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Marks")
                        .HasForeignKey("TableId");

                    b.Navigation("Field");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("MarkVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", "Mark")
                        .WithMany("MarkVals")
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Mark");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Rows")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Tables")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Navigation("CellVals");

                    b.Navigation("FieldVals");

                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Navigation("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Navigation("FieldVals");

                    b.Navigation("Marks");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Navigation("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Marks");

                    b.Navigation("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
