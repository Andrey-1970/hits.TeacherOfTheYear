// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp.Data;

#nullable disable

namespace ServerApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.Property<Guid>("EditBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("EditBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("EditBlockTrack");

                    b.HasData(
                        new
                        {
                            EditBlocksId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            TracksId = new Guid("1e62019a-fde5-4cd0-90c2-a4629cdfa00d")
                        },
                        new
                        {
                            EditBlocksId = new Guid("9a4f902c-a939-4d44-9f47-27dc2ee7c721"),
                            TracksId = new Guid("1e62019a-fde5-4cd0-90c2-a4629cdfa00d")
                        },
                        new
                        {
                            EditBlocksId = new Guid("ce56e7d5-446d-43ff-8272-bb2c669de1e9"),
                            TracksId = new Guid("1e62019a-fde5-4cd0-90c2-a4629cdfa00d")
                        },
                        new
                        {
                            EditBlocksId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            TracksId = new Guid("1e62019a-fde5-4cd0-90c2-a4629cdfa00d")
                        },
                        new
                        {
                            EditBlocksId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            TracksId = new Guid("8a011dae-7d45-476a-9710-39cd6e4cd5bf")
                        },
                        new
                        {
                            EditBlocksId = new Guid("9a4f902c-a939-4d44-9f47-27dc2ee7c721"),
                            TracksId = new Guid("8a011dae-7d45-476a-9710-39cd6e4cd5bf")
                        },
                        new
                        {
                            EditBlocksId = new Guid("ce56e7d5-446d-43ff-8272-bb2c669de1e9"),
                            TracksId = new Guid("8a011dae-7d45-476a-9710-39cd6e4cd5bf")
                        },
                        new
                        {
                            EditBlocksId = new Guid("09532e26-2d28-4877-9f04-6e7a710ed05f"),
                            TracksId = new Guid("8a011dae-7d45-476a-9710-39cd6e4cd5bf")
                        });
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.Property<Guid>("FieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.HasKey("FieldsId", "MarkBlocksId");

                    b.HasIndex("MarkBlocksId");

                    b.ToTable("FieldMarkBlock");

                    b.HasData(
                        new
                        {
                            FieldsId = new Guid("5bfce4e2-d1ac-4abe-877a-c04676e1c25f"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("c29e276d-c9bc-46e7-bf0c-ce06c3a6c984"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("591ef9c2-a85d-4d40-a658-43fab6e73656"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("b6c8cafb-bea0-43c0-afa6-7ee01b47c1ca"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("f78dc198-26a7-4f07-8808-d9392c7b55e3"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("0dad3e48-09ff-4fe8-a3dc-4e25e204fba7"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("588a5a3f-a39b-4952-8a2d-0cfeb36f0c69"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("f33818b4-4f03-4be4-92cd-0589772c131c"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("40da641f-bc14-4cd0-ae4e-0e2985df0ad3"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("ffe38875-bb66-41be-8858-35636e2a17e5"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("ae5f4dca-c293-44c1-a55b-cc19189bd394"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("3e5bfb56-78ab-4b62-8c73-18e4fd1f4ea0"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("393da3a1-0483-4c21-8df6-9299246354a9"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("39a539eb-a82a-4858-b5f3-1b23822bcea7"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("9a9cf9db-5ab8-4d8d-8971-4c9d4ac9e4ed"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("92cbb652-818d-4b84-8513-eabf8e6545e0"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("7277b79c-d78d-49ac-82f6-4647d5a8aae8"),
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061")
                        },
                        new
                        {
                            FieldsId = new Guid("e52f4fb7-ce33-40de-9edd-9f5f8fefc3d3"),
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e")
                        },
                        new
                        {
                            FieldsId = new Guid("9decef32-e026-4a31-97e0-d278c168d9a8"),
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e")
                        },
                        new
                        {
                            FieldsId = new Guid("8c7dee90-4d75-481c-bfcc-c23849bf6745"),
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e")
                        },
                        new
                        {
                            FieldsId = new Guid("c649c228-0457-4c5e-aa55-9d45bcdeadb5"),
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e")
                        },
                        new
                        {
                            FieldsId = new Guid("9ca64c68-2d63-4405-96e9-72de243a1971"),
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e")
                        },
                        new
                        {
                            FieldsId = new Guid("9a9cf9db-5ab8-4d8d-8971-4c9d4ac9e4ed"),
                            MarkBlocksId = new Guid("d710a6c3-4f51-4556-960a-af0ee3c09ac4")
                        },
                        new
                        {
                            FieldsId = new Guid("9a9cf9db-5ab8-4d8d-8971-4c9d4ac9e4ed"),
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f")
                        },
                        new
                        {
                            FieldsId = new Guid("a6f0948a-e2d1-4aa5-aef5-7529c1093fe5"),
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f")
                        },
                        new
                        {
                            FieldsId = new Guid("4370237b-cb19-4eef-b9ef-fd62178eb224"),
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f")
                        });
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TablesId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TablesId");

                    b.HasIndex("TablesId");

                    b.ToTable("MarkBlockTable");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            TablesId = new Guid("a41adff7-9ca5-453a-aba9-cdfae07bfaa8")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            TablesId = new Guid("78d11403-f2b6-4295-a283-69f8e57d87ab")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            TablesId = new Guid("7de4de08-2ab3-4108-8d37-578e8e5e6a82")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            TablesId = new Guid("c672ba6e-3028-46e1-af58-74279355e171")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("51c5bdb8-f9ca-4bb1-a61c-8c9814f6532e"),
                            TablesId = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("51c5bdb8-f9ca-4bb1-a61c-8c9814f6532e"),
                            TablesId = new Guid("3c5cb8fb-936b-4bcc-8a3f-a7bad0a00bc0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d710a6c3-4f51-4556-960a-af0ee3c09ac4"),
                            TablesId = new Guid("e6962ea4-b9e8-42c7-95b0-87af64391ca9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d710a6c3-4f51-4556-960a-af0ee3c09ac4"),
                            TablesId = new Guid("fb960f02-8add-4c73-8eed-0a08bcdb7e06")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            TablesId = new Guid("e6962ea4-b9e8-42c7-95b0-87af64391ca9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            TablesId = new Guid("6c8d2bb9-fd47-4c3b-8524-539aad009bf3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            TablesId = new Guid("c520ffcd-97c6-4d22-818c-067e8ac83184")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            TablesId = new Guid("01525d5a-d4a0-4e1a-94c7-056d7dac68b2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("38bf0bde-9687-4697-ae43-271441aa8323"),
                            TablesId = new Guid("fb960f02-8add-4c73-8eed-0a08bcdb7e06")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("38bf0bde-9687-4697-ae43-271441aa8323"),
                            TablesId = new Guid("9a5ed757-4049-4b9a-8bf2-d9022b29135c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("38bf0bde-9687-4697-ae43-271441aa8323"),
                            TablesId = new Guid("f3d224ae-f6d1-4af4-958b-8bc0014bd840")
                        });
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("MarkBlockTrack");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061"),
                            TracksId = new Guid("1e62019a-fde5-4cd0-90c2-a4629cdfa00d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            TracksId = new Guid("1e62019a-fde5-4cd0-90c2-a4629cdfa00d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("51c5bdb8-f9ca-4bb1-a61c-8c9814f6532e"),
                            TracksId = new Guid("1e62019a-fde5-4cd0-90c2-a4629cdfa00d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d710a6c3-4f51-4556-960a-af0ee3c09ac4"),
                            TracksId = new Guid("1e62019a-fde5-4cd0-90c2-a4629cdfa00d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("1230511b-f7db-408b-a611-8964cc2fbcf1"),
                            TracksId = new Guid("1e62019a-fde5-4cd0-90c2-a4629cdfa00d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("ac5284ae-7889-45a5-8274-35365db2e3f1"),
                            TracksId = new Guid("1e62019a-fde5-4cd0-90c2-a4629cdfa00d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061"),
                            TracksId = new Guid("8a011dae-7d45-476a-9710-39cd6e4cd5bf")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            TracksId = new Guid("8a011dae-7d45-476a-9710-39cd6e4cd5bf")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("38bf0bde-9687-4697-ae43-271441aa8323"),
                            TracksId = new Guid("8a011dae-7d45-476a-9710-39cd6e4cd5bf")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("1230511b-f7db-408b-a611-8964cc2fbcf1"),
                            TracksId = new Guid("8a011dae-7d45-476a-9710-39cd6e4cd5bf")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("ac5284ae-7889-45a5-8274-35365db2e3f1"),
                            TracksId = new Guid("8a011dae-7d45-476a-9710-39cd6e4cd5bf")
                        });
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "MarksId");

                    b.HasIndex("MarksId");

                    b.ToTable("MarkMarkBlock");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            MarksId = new Guid("8bb7b1e2-5368-4d05-8047-f625d0c39cfd")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            MarksId = new Guid("a90f21ab-0da0-4171-8418-fcb8cb62c4be")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            MarksId = new Guid("ac3d3a89-f86c-42c1-928d-1d4b0eef7d89")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            MarksId = new Guid("55884316-aa03-4838-8c30-f4e6fb83cc38")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            MarksId = new Guid("de9c4b40-5869-43e3-9f08-c11ddf963d8b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            MarksId = new Guid("4303b008-802c-4cbb-878a-6c9b8991a56a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            MarksId = new Guid("5d77f987-bfa5-4145-ad8e-e75c71bfb486")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("51c5bdb8-f9ca-4bb1-a61c-8c9814f6532e"),
                            MarksId = new Guid("6542eb48-0302-4180-b546-bff6207b490b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("51c5bdb8-f9ca-4bb1-a61c-8c9814f6532e"),
                            MarksId = new Guid("1e74357e-bbc2-4c5a-9238-74c38397ab4d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("51c5bdb8-f9ca-4bb1-a61c-8c9814f6532e"),
                            MarksId = new Guid("1eff8874-c4ee-4ecd-9287-43b0f8568287")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("51c5bdb8-f9ca-4bb1-a61c-8c9814f6532e"),
                            MarksId = new Guid("41d58669-0c42-4ad6-835f-538a3e647274")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("51c5bdb8-f9ca-4bb1-a61c-8c9814f6532e"),
                            MarksId = new Guid("31deefbc-698a-4d57-850c-4a2b008ef833")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d710a6c3-4f51-4556-960a-af0ee3c09ac4"),
                            MarksId = new Guid("ac049182-d7a3-4974-831b-b44bd8f0fef1")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d710a6c3-4f51-4556-960a-af0ee3c09ac4"),
                            MarksId = new Guid("541cc36d-ce4c-49ce-994a-525097028857")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d710a6c3-4f51-4556-960a-af0ee3c09ac4"),
                            MarksId = new Guid("0ab3f8c6-9f50-4694-a3da-f0b06ee318dc")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            MarksId = new Guid("ac049182-d7a3-4974-831b-b44bd8f0fef1")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            MarksId = new Guid("541cc36d-ce4c-49ce-994a-525097028857")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            MarksId = new Guid("aeb8aeff-caa5-4545-8c97-c71699aec934")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            MarksId = new Guid("0933b7ab-7ede-41e0-b769-6ef4010be2c7")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            MarksId = new Guid("0958ac4b-05a0-4884-8032-3e1fde3953cf")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            MarksId = new Guid("6582b4f9-a973-4404-9301-b2678401faad")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            MarksId = new Guid("6048f22a-e133-4333-b09c-6ad7a1857704")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            MarksId = new Guid("4706b05c-aa15-4bd6-8850-89a44dcab086")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            MarksId = new Guid("db5a8fd6-1fd9-4f47-9764-e79ae83cd2a0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("38bf0bde-9687-4697-ae43-271441aa8323"),
                            MarksId = new Guid("0ab3f8c6-9f50-4694-a3da-f0b06ee318dc")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("38bf0bde-9687-4697-ae43-271441aa8323"),
                            MarksId = new Guid("ecb43a9b-724e-4a90-a0f0-e7b13214b378")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("38bf0bde-9687-4697-ae43-271441aa8323"),
                            MarksId = new Guid("bbb6a0a8-9c2a-4be5-82d5-0d6f5f8d1437")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("38bf0bde-9687-4697-ae43-271441aa8323"),
                            MarksId = new Guid("e839e3bb-dfac-4707-8788-ae0dca814205")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("38bf0bde-9687-4697-ae43-271441aa8323"),
                            MarksId = new Guid("f9fd728e-ea92-49db-9f42-456319e8f043")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("ApplicationForms");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RowId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("RowId");

                    b.HasIndex("ApplicationId", "RowId", "ColumnId")
                        .IsUnique();

                    b.ToTable("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("TableId", "Name")
                        .IsUnique();

                    b.HasIndex("TableId", "Number")
                        .IsUnique();

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fca0e6fa-df27-4336-a01a-c8fa272a6d65"),
                            Name = "Год",
                            Number = 1,
                            TableId = new Guid("e6962ea4-b9e8-42c7-95b0-87af64391ca9"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("b7cb5f78-c394-4b6f-86af-35ea8d2b53e3"),
                            Name = "Название конкурса",
                            Number = 2,
                            TableId = new Guid("e6962ea4-b9e8-42c7-95b0-87af64391ca9"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("c7cc4801-e1f0-48cd-a7f0-18404c6d069d"),
                            Name = "Статус конкурса",
                            Number = 3,
                            TableId = new Guid("e6962ea4-b9e8-42c7-95b0-87af64391ca9"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("58bfb7d8-534a-45dd-a2a6-fdedee3d9a78"),
                            Name = "Награда",
                            Number = 4,
                            TableId = new Guid("e6962ea4-b9e8-42c7-95b0-87af64391ca9"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("add70215-51b9-442b-b47d-7f91e8803d67"),
                            Name = "Ссылка",
                            Number = 5,
                            TableId = new Guid("e6962ea4-b9e8-42c7-95b0-87af64391ca9"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("475b0293-091b-415b-bcaa-6d294c4326f6"),
                            Name = "Название документа, реквизиты",
                            Number = 1,
                            TableId = new Guid("fb960f02-8add-4c73-8eed-0a08bcdb7e06"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("99b4773f-1c96-4ba6-a180-54123398e50e"),
                            Name = "Год получения документа",
                            Number = 2,
                            TableId = new Guid("fb960f02-8add-4c73-8eed-0a08bcdb7e06"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("106dd7d1-df03-4a83-a162-891b0422ee2e"),
                            Name = "Наименование курса",
                            Number = 1,
                            TableId = new Guid("a41adff7-9ca5-453a-aba9-cdfae07bfaa8"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("a583915e-113d-4ebc-93d0-0cd4ddd433b6"),
                            Name = "Язык преподавания (русск./англ./др.)",
                            Number = 2,
                            TableId = new Guid("a41adff7-9ca5-453a-aba9-cdfae07bfaa8"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("889ecc9a-8300-4659-ae5e-648d15dd2925"),
                            Name = "Лекции (час.)",
                            Number = 3,
                            TableId = new Guid("a41adff7-9ca5-453a-aba9-cdfae07bfaa8"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("6c89319a-5493-4002-8c38-4693b5cf3405"),
                            Name = "Практические занятия (час.)",
                            Number = 4,
                            TableId = new Guid("a41adff7-9ca5-453a-aba9-cdfae07bfaa8"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("af493375-5a6e-4499-aa6b-3f64bcf5468b"),
                            Name = "Итого (час.)",
                            Number = 5,
                            TableId = new Guid("a41adff7-9ca5-453a-aba9-cdfae07bfaa8"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("670882fc-8fda-4fd7-8a19-079fc3f1df54"),
                            Name = "ФИО",
                            Number = 1,
                            TableId = new Guid("78d11403-f2b6-4295-a283-69f8e57d87ab"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("bd7bc9c3-dd28-45cb-a4e0-a716d9b3b01a"),
                            Name = "Название конкурса/премии",
                            Number = 2,
                            TableId = new Guid("78d11403-f2b6-4295-a283-69f8e57d87ab"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("658647db-4261-4ed8-8cf8-994ef4b94134"),
                            Name = "Год",
                            Number = 3,
                            TableId = new Guid("78d11403-f2b6-4295-a283-69f8e57d87ab"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("868bc78d-7e82-4342-b945-4ca9442b8867"),
                            Name = "Статус конкурса (международный, всероссийский), статус награды (РФ, субъект РФ)",
                            Number = 4,
                            TableId = new Guid("78d11403-f2b6-4295-a283-69f8e57d87ab"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("399423c9-62e4-4aa4-a768-d6d66a65e8ab"),
                            Name = "Награда/премия (медаль, диплом с указанием степени)",
                            Number = 5,
                            TableId = new Guid("78d11403-f2b6-4295-a283-69f8e57d87ab"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("d3f3aba2-a3a0-4323-805d-6865ad24c652"),
                            Name = "Название организации/должность/ставка",
                            Number = 1,
                            TableId = new Guid("7de4de08-2ab3-4108-8d37-578e8e5e6a82"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("a695c48c-aa2a-4083-9308-cd59d2fdae2b"),
                            Name = "Место нахождения (субъект РФ, зарубежье)",
                            Number = 2,
                            TableId = new Guid("7de4de08-2ab3-4108-8d37-578e8e5e6a82"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("928cd406-7dd6-48f1-8df3-d0e13e6b7fe0"),
                            Name = "Вид деятельности (преподавательская)",
                            Number = 3,
                            TableId = new Guid("7de4de08-2ab3-4108-8d37-578e8e5e6a82"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("2eeaf0a5-7276-4e5e-a0ba-19151c98bae6"),
                            Name = "Количество часов",
                            Number = 4,
                            TableId = new Guid("7de4de08-2ab3-4108-8d37-578e8e5e6a82"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("cf2258ed-9a08-443c-8fc8-2328480f1264"),
                            Name = "Вид публикации",
                            Number = 1,
                            TableId = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("976eddb3-7d79-428c-846b-5e5a10374b51"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("93ef822e-725c-4dee-a324-124d52ffd7a1"),
                            Name = "Соавторы",
                            Number = 3,
                            TableId = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("fefba724-70b7-4c9d-ad21-d965ff60a401"),
                            Name = "Количество печатных листов",
                            Number = 4,
                            TableId = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("52d3ef34-2f23-45e3-a9fa-da68b43d470f"),
                            Name = "Наличие грифа",
                            Number = 5,
                            TableId = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157"),
                            ValueTypeId = new Guid("8cdabb26-e943-453e-b7f7-4ca9dc0c9b8a")
                        },
                        new
                        {
                            Id = new Guid("80b78371-a1a5-4afb-87c0-74cbf057f659"),
                            Name = "Издательство, год",
                            Number = 6,
                            TableId = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("81b3b8c1-620f-4add-bcaf-20b2dae73a6c"),
                            Name = "Название дисциплины",
                            Number = 1,
                            TableId = new Guid("3c5cb8fb-936b-4bcc-8a3f-a7bad0a00bc0"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("7620d988-bab2-4b89-a2d2-55da6c6ce7a1"),
                            Name = "Вид (лекции, лабораторные)",
                            Number = 2,
                            TableId = new Guid("3c5cb8fb-936b-4bcc-8a3f-a7bad0a00bc0"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("07d9d6b3-9fd0-413e-a4f2-b1625e9cca62"),
                            Name = "Название курса",
                            Number = 1,
                            TableId = new Guid("c672ba6e-3028-46e1-af58-74279355e171"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("c58824ac-f095-4aa3-b21f-114e736489f4"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("c672ba6e-3028-46e1-af58-74279355e171"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("67456d04-4c01-4629-b1d1-09ef7ac0ec1d"),
                            Name = "Ссылка на платформу",
                            Number = 3,
                            TableId = new Guid("c672ba6e-3028-46e1-af58-74279355e171"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("9006e30b-49d2-4a3f-b7e8-46f8877174d0"),
                            Name = "Год",
                            Number = 4,
                            TableId = new Guid("c672ba6e-3028-46e1-af58-74279355e171"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("2c93717d-6803-4e2f-a977-bca3748fcfc3"),
                            Name = "Название статьи",
                            Number = 1,
                            TableId = new Guid("6c8d2bb9-fd47-4c3b-8524-539aad009bf3"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("186d22f6-7ffa-4659-bacd-29d97506c752"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("6c8d2bb9-fd47-4c3b-8524-539aad009bf3"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("46aa2ea6-88c2-4827-84cd-81df0fde7c4c"),
                            Name = "Тип публикации (категория ВАК/квартиль МБД)",
                            Number = 3,
                            TableId = new Guid("6c8d2bb9-fd47-4c3b-8524-539aad009bf3"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("7996878b-c7a2-4c04-9fa6-4da98ce36fa7"),
                            Name = "Издание, год",
                            Number = 4,
                            TableId = new Guid("6c8d2bb9-fd47-4c3b-8524-539aad009bf3"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("bb7b0a1a-98ca-4992-aeec-9c9ac42b2d58"),
                            Name = "Тип идентификатора",
                            Number = 1,
                            TableId = new Guid("c520ffcd-97c6-4d22-818c-067e8ac83184"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("cf7ef57a-2ebf-4d40-adae-57b965ae40af"),
                            Name = "Идентификатор",
                            Number = 2,
                            TableId = new Guid("c520ffcd-97c6-4d22-818c-067e8ac83184"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("078e9f18-ee30-40bb-90bf-4b8c8cae4003"),
                            Name = "Количество публикаций в БАЗЕ",
                            Number = 3,
                            TableId = new Guid("c520ffcd-97c6-4d22-818c-067e8ac83184"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("712012d1-6abc-46f7-9cd9-5fbc44a3390e"),
                            Name = "Количество цитирований",
                            Number = 4,
                            TableId = new Guid("c520ffcd-97c6-4d22-818c-067e8ac83184"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("dcc471c5-8a86-421f-b0e2-3b078100399c"),
                            Name = "Индекс Хирша (за все время)",
                            Number = 5,
                            TableId = new Guid("c520ffcd-97c6-4d22-818c-067e8ac83184"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("4f2f5869-90f9-4dc3-bdbe-889bcf20306a"),
                            Name = "Название НИР/НИОКР",
                            Number = 1,
                            TableId = new Guid("01525d5a-d4a0-4e1a-94c7-056d7dac68b2"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("a70e48aa-4da8-4b75-8fb7-a30f5003d578"),
                            Name = "Сумма финансирования (тыс. руб.)",
                            Number = 2,
                            TableId = new Guid("01525d5a-d4a0-4e1a-94c7-056d7dac68b2"),
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("585a1d90-7675-48fc-9707-2f0f18a1375c"),
                            Name = "Период выполнения",
                            Number = 3,
                            TableId = new Guid("01525d5a-d4a0-4e1a-94c7-056d7dac68b2"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("deb9788e-5b66-4666-9c92-d5cf9351231f"),
                            Name = "Статус (руководитель/исполнитель)",
                            Number = 4,
                            TableId = new Guid("01525d5a-d4a0-4e1a-94c7-056d7dac68b2"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("c4a35f72-ea9c-4ff8-a6d2-3cf60faa4b8e"),
                            Name = "Регистрационный номер карты в системе ЕГИСУ (https://www.rosrid.ru/)",
                            Number = 5,
                            TableId = new Guid("01525d5a-d4a0-4e1a-94c7-056d7dac68b2"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("3eddd1be-8dfe-4127-8aaf-a17e3d089f40"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("9a5ed757-4049-4b9a-8bf2-d9022b29135c"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("a8d40d89-1a4b-4230-8fa4-54c34f679876"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("9a5ed757-4049-4b9a-8bf2-d9022b29135c"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("ad8ab7bc-d785-4c32-8ad4-6be387a9c94c"),
                            Name = "ФИО соавторов",
                            Number = 3,
                            TableId = new Guid("9a5ed757-4049-4b9a-8bf2-d9022b29135c"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("69e6b74a-cd75-4972-9186-9dfc91cdc365"),
                            Name = "Номер РИД",
                            Number = 4,
                            TableId = new Guid("9a5ed757-4049-4b9a-8bf2-d9022b29135c"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("c74c0825-e277-4c41-b1e3-dbfe7cad5656"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("f3d224ae-f6d1-4af4-958b-8bc0014bd840"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("03a8d508-5f97-4e0d-8160-06265eb75739"),
                            Name = "Название разработки",
                            Number = 2,
                            TableId = new Guid("f3d224ae-f6d1-4af4-958b-8bc0014bd840"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("bf345d57-7170-453f-a337-d5d8428c44a0"),
                            Name = "Название организации в которую внедрена разработка",
                            Number = 3,
                            TableId = new Guid("f3d224ae-f6d1-4af4-958b-8bc0014bd840"),
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("EditBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "Общая информация",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("9a4f902c-a939-4d44-9f47-27dc2ee7c721"),
                            Name = "Категория участников",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("ce56e7d5-446d-43ff-8272-bb2c669de1e9"),
                            Name = "Профессиональное развитие",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            Name = "Деятельность",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("09532e26-2d28-4877-9f04-6e7a710ed05f"),
                            Name = "Деятельность",
                            Number = 5
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditGroup")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Placeholder")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5bfce4e2-d1ac-4abe-877a-c04676e1c25f"),
                            EditBlockId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "ФИО",
                            Number = 1,
                            Placeholder = "Иванов Иван Иванович",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("c29e276d-c9bc-46e7-bf0c-ce06c3a6c984"),
                            EditBlockId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "Дата рождения",
                            Number = 2,
                            Placeholder = "01.01.2000",
                            ValueTypeId = new Guid("cfa2eea3-e14e-4493-8da5-c5a81aa0096f")
                        },
                        new
                        {
                            Id = new Guid("591ef9c2-a85d-4d40-a658-43fab6e73656"),
                            EditBlockId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "Домашний адрес",
                            Number = 3,
                            Placeholder = "Регион, город, улица, дом, квартира",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("b6c8cafb-bea0-43c0-afa6-7ee01b47c1ca"),
                            EditBlockId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "Контактный телефон",
                            Number = 4,
                            Placeholder = "+8 (900)-000-00-00",
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("f78dc198-26a7-4f07-8808-d9392c7b55e3"),
                            EditBlockId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "Электронная почта",
                            Number = 5,
                            Placeholder = "user@example.com",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("0dad3e48-09ff-4fe8-a3dc-4e25e204fba7"),
                            EditBlockId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "Место работы/учебы",
                            Number = 6,
                            Placeholder = "Название организации",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("588a5a3f-a39b-4952-8a2d-0cfeb36f0c69"),
                            EditBlockId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "Адрес работы/учебы",
                            Number = 7,
                            Placeholder = "Регион, город, улица, дом",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("f33818b4-4f03-4be4-92cd-0589772c131c"),
                            EditBlockId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "Институт, факультет, кафедра, лаборатория",
                            Number = 8,
                            Placeholder = "Введите институт, факультет, кафедру, лабораторию",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("40da641f-bc14-4cd0-ae4e-0e2985df0ad3"),
                            EditBlockId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "Должность",
                            Number = 9,
                            Placeholder = "Введите свою должность в организации",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("ffe38875-bb66-41be-8858-35636e2a17e5"),
                            EditBlockId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "Стаж научно-педагогической деятельности по трудовой книжке",
                            Number = 10,
                            Placeholder = "Введите свой стаж",
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("ae5f4dca-c293-44c1-a55b-cc19189bd394"),
                            EditBlockId = new Guid("e0db3a1a-958e-4d42-a0a7-27e2ebd3500e"),
                            Name = "Дополнительная информация",
                            Number = 11,
                            Placeholder = "Пример",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("3e5bfb56-78ab-4b62-8c73-18e4fd1f4ea0"),
                            EditBlockId = new Guid("9a4f902c-a939-4d44-9f47-27dc2ee7c721"),
                            Name = "Направление конкурса",
                            Number = 12,
                            Placeholder = "Выберите направление конкурса",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("393da3a1-0483-4c21-8df6-9299246354a9"),
                            EditBlockId = new Guid("9a4f902c-a939-4d44-9f47-27dc2ee7c721"),
                            Name = "Категория участника конкурса (Работники высших учебных заведений, отраслевых и академических институтов, работники сектора промышленности (исследователи), осуществляющие научно-исследовательскую и/или научно-педагогическую деятельность)",
                            Number = 13,
                            Placeholder = "Выберите категорию участника конкруса",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("39a539eb-a82a-4858-b5f3-1b23822bcea7"),
                            EditBlockId = new Guid("9a4f902c-a939-4d44-9f47-27dc2ee7c721"),
                            Name = "Название конкрусной работы",
                            Number = 14,
                            Placeholder = "Введите название своей конкурсной работы",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("9a9cf9db-5ab8-4d8d-8971-4c9d4ac9e4ed"),
                            EditBlockId = new Guid("9a4f902c-a939-4d44-9f47-27dc2ee7c721"),
                            Name = "Ученое звание",
                            Number = 15,
                            Placeholder = "Выберите ученое звание",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("92cbb652-818d-4b84-8513-eabf8e6545e0"),
                            EditBlockId = new Guid("9a4f902c-a939-4d44-9f47-27dc2ee7c721"),
                            Name = "Ученая степень",
                            Number = 16,
                            Placeholder = "Выберите ученую степень",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("7277b79c-d78d-49ac-82f6-4647d5a8aae8"),
                            EditBlockId = new Guid("9a4f902c-a939-4d44-9f47-27dc2ee7c721"),
                            Name = "Научная специальность (по классификации ВАК)",
                            Number = 17,
                            Placeholder = "Введите научную специальность (по классификации ВАК)",
                            ValueTypeId = new Guid("1036f8af-9386-4332-8de2-126399de5aec")
                        },
                        new
                        {
                            Id = new Guid("e52f4fb7-ce33-40de-9edd-9f5f8fefc3d3"),
                            EditBlockId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-педагогической деятельности",
                            Name = "Защитившиеся кадидаты наук",
                            Number = 18,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("9decef32-e026-4a31-97e0-d278c168d9a8"),
                            EditBlockId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            Name = "Защитившиеся доктора наук",
                            Number = 19,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("8c7dee90-4d75-481c-bfcc-c23849bf6745"),
                            EditBlockId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            EditGroup = "Руководство дипломными проектами за предыдущий учебный год",
                            Name = "Защитившиеся бакалавры",
                            Number = 20,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("c649c228-0457-4c5e-aa55-9d45bcdeadb5"),
                            EditBlockId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            Name = "Защитившиеся специалисты",
                            Number = 21,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("9ca64c68-2d63-4405-96e9-72de243a1971"),
                            EditBlockId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            Name = "Защитившиеся магистры",
                            Number = 22,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("a6f0948a-e2d1-4aa5-aef5-7529c1093fe5"),
                            EditBlockId = new Guid("09532e26-2d28-4877-9f04-6e7a710ed05f"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-исследовательской деятельности",
                            Name = "Защитившиеся кандидаты наук",
                            Number = 23,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        },
                        new
                        {
                            Id = new Guid("4370237b-cb19-4eef-b9ef-fd62178eb224"),
                            EditBlockId = new Guid("09532e26-2d28-4877-9f04-6e7a710ed05f"),
                            Name = "Защитившиеся доктора наук",
                            Number = 24,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("ApplicationId", "FieldId")
                        .IsUnique();

                    b.ToTable("FieldVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("TableId");

                    b.ToTable("Marks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bb7b1e2-5368-4d05-8047-f625d0c39cfd"),
                            Name = "Баллы за объем учебной нагрузки:",
                            Number = 1,
                            TableId = new Guid("a41adff7-9ca5-453a-aba9-cdfae07bfaa8")
                        },
                        new
                        {
                            Id = new Guid("a90f21ab-0da0-4171-8418-fcb8cb62c4be"),
                            Name = "Баллы за количество дисциплин на иностранном языке, которые вел претендент, в предыдущем учебном году:",
                            Number = 2,
                            TableId = new Guid("a41adff7-9ca5-453a-aba9-cdfae07bfaa8")
                        },
                        new
                        {
                            Id = new Guid("ac3d3a89-f86c-42c1-928d-1d4b0eef7d89"),
                            FieldId = new Guid("9ca64c68-2d63-4405-96e9-72de243a1971"),
                            Name = "Баллы за количество квалификационных работ, выполненных под руководством претендента:",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("55884316-aa03-4838-8c30-f4e6fb83cc38"),
                            FieldId = new Guid("e52f4fb7-ce33-40de-9edd-9f5f8fefc3d3"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("de9c4b40-5869-43e3-9f08-c11ddf963d8b"),
                            FieldId = new Guid("9decef32-e026-4a31-97e0-d278c168d9a8"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("4303b008-802c-4cbb-878a-6c9b8991a56a"),
                            Name = "Баллы за количество подготовленных студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание:",
                            Number = 6,
                            TableId = new Guid("78d11403-f2b6-4295-a283-69f8e57d87ab")
                        },
                        new
                        {
                            Id = new Guid("5d77f987-bfa5-4145-ad8e-e75c71bfb486"),
                            Name = "Баллы за количество онлайн курсов на открытых площадках:",
                            Number = 7,
                            TableId = new Guid("c672ba6e-3028-46e1-af58-74279355e171")
                        },
                        new
                        {
                            Id = new Guid("6542eb48-0302-4180-b546-bff6207b490b"),
                            Name = "Баллы за труды с грифом и без соавторства:",
                            Number = 8,
                            TableId = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157")
                        },
                        new
                        {
                            Id = new Guid("1e74357e-bbc2-4c5a-9238-74c38397ab4d"),
                            Name = "Баллы за труды с грифом в соавторстве:",
                            Number = 9,
                            TableId = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157")
                        },
                        new
                        {
                            Id = new Guid("1eff8874-c4ee-4ecd-9287-43b0f8568287"),
                            Name = "Баллы за труды без грифа и без соавторства:",
                            Number = 10,
                            TableId = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157")
                        },
                        new
                        {
                            Id = new Guid("41d58669-0c42-4ad6-835f-538a3e647274"),
                            Name = "Баллы за труды без грифа в соавторстве:",
                            Number = 11,
                            TableId = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157")
                        },
                        new
                        {
                            Id = new Guid("31deefbc-698a-4d57-850c-4a2b008ef833"),
                            Name = "Баллы за количество практикумов и курсов лекций:",
                            Number = 12,
                            TableId = new Guid("3c5cb8fb-936b-4bcc-8a3f-a7bad0a00bc0")
                        },
                        new
                        {
                            Id = new Guid("ac049182-d7a3-4974-831b-b44bd8f0fef1"),
                            FieldId = new Guid("9a9cf9db-5ab8-4d8d-8971-4c9d4ac9e4ed"),
                            Name = "Баллы за ученое звание:",
                            Number = 13
                        },
                        new
                        {
                            Id = new Guid("541cc36d-ce4c-49ce-994a-525097028857"),
                            Name = "Баллы за награды:",
                            Number = 14,
                            TableId = new Guid("e6962ea4-b9e8-42c7-95b0-87af64391ca9")
                        },
                        new
                        {
                            Id = new Guid("0ab3f8c6-9f50-4694-a3da-f0b06ee318dc"),
                            Name = "Баллы за профессиональное развитие:",
                            Number = 15,
                            TableId = new Guid("fb960f02-8add-4c73-8eed-0a08bcdb7e06")
                        },
                        new
                        {
                            Id = new Guid("aeb8aeff-caa5-4545-8c97-c71699aec934"),
                            Name = "Баллы за научные публикации:",
                            Number = 16,
                            TableId = new Guid("6c8d2bb9-fd47-4c3b-8524-539aad009bf3")
                        },
                        new
                        {
                            Id = new Guid("0933b7ab-7ede-41e0-b769-6ef4010be2c7"),
                            Name = "Баллы по базе Scopus:",
                            Number = 17,
                            TableId = new Guid("c520ffcd-97c6-4d22-818c-067e8ac83184")
                        },
                        new
                        {
                            Id = new Guid("0958ac4b-05a0-4884-8032-3e1fde3953cf"),
                            Name = "Баллы по базе РИНЦ:",
                            Number = 18,
                            TableId = new Guid("c520ffcd-97c6-4d22-818c-067e8ac83184")
                        },
                        new
                        {
                            Id = new Guid("6582b4f9-a973-4404-9301-b2678401faad"),
                            FieldId = new Guid("a6f0948a-e2d1-4aa5-aef5-7529c1093fe5"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 19
                        },
                        new
                        {
                            Id = new Guid("6048f22a-e133-4333-b09c-6ad7a1857704"),
                            FieldId = new Guid("4370237b-cb19-4eef-b9ef-fd62178eb224"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 20
                        },
                        new
                        {
                            Id = new Guid("4706b05c-aa15-4bd6-8850-89a44dcab086"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве руководителя:",
                            Number = 21,
                            TableId = new Guid("01525d5a-d4a0-4e1a-94c7-056d7dac68b2")
                        },
                        new
                        {
                            Id = new Guid("db5a8fd6-1fd9-4f47-9764-e79ae83cd2a0"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве исполнителя:",
                            Number = 22,
                            TableId = new Guid("01525d5a-d4a0-4e1a-94c7-056d7dac68b2")
                        },
                        new
                        {
                            Id = new Guid("ecb43a9b-724e-4a90-a0f0-e7b13214b378"),
                            Name = "Баллы за количество объектов интеллектуальной собственности:",
                            Number = 23,
                            TableId = new Guid("9a5ed757-4049-4b9a-8bf2-d9022b29135c")
                        },
                        new
                        {
                            Id = new Guid("bbb6a0a8-9c2a-4be5-82d5-0d6f5f8d1437"),
                            Name = "Баллы за количество разработок:",
                            Number = 24,
                            TableId = new Guid("f3d224ae-f6d1-4af4-958b-8bc0014bd840")
                        },
                        new
                        {
                            Id = new Guid("e839e3bb-dfac-4707-8788-ae0dca814205"),
                            Name = "Оценка уровня предоставленной работы:",
                            Number = 25
                        },
                        new
                        {
                            Id = new Guid("f9fd728e-ea92-49db-9f42-456319e8f043"),
                            Name = "Использование в представленной работе инновационных методов (проблемного и проективного обучения, тренинговых форм, модульно-кредитных, модульно-рейтинговых систем обучения и контроля знаний):",
                            Number = 26
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("MarkBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5a5f191-6c78-4499-b895-5ee0e6b54061"),
                            Name = "Основной",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("fe83e54d-ca38-459f-ae3b-a18ef80aba5e"),
                            Name = "Образовательная деятельность",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("51c5bdb8-f9ca-4bb1-a61c-8c9814f6532e"),
                            Name = "Методическая деятельность",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("d710a6c3-4f51-4556-960a-af0ee3c09ac4"),
                            Name = "Профессиональные показатели",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("d394e72f-66b1-4f08-be40-feb742527f3f"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("38bf0bde-9687-4697-ae43-271441aa8323"),
                            Name = "Инновационная и иная деятельность",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("1230511b-f7db-408b-a611-8964cc2fbcf1"),
                            Name = "Конкурсная работа",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("ac5284ae-7889-45a5-8274-35365db2e3f1"),
                            Name = "Итог",
                            Number = 8
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarkId");

                    b.HasIndex("ApplicationId", "MarkId")
                        .IsUnique();

                    b.ToTable("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.SelectValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("FieldId");

                    b.ToTable("SelectValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("179f9bce-2b9e-421f-bf9a-9793245ce992"),
                            FieldId = new Guid("3e5bfb56-78ab-4b62-8c73-18e4fd1f4ea0"),
                            Value = "АРХИТЕКТУРА"
                        },
                        new
                        {
                            Id = new Guid("3e9df638-d069-4b36-9322-e6c4a7ab207f"),
                            FieldId = new Guid("3e5bfb56-78ab-4b62-8c73-18e4fd1f4ea0"),
                            Value = "ТЕХНИКА И ТЕХНОЛОГИИ СТРОИТЕЛЬСТВА"
                        },
                        new
                        {
                            Id = new Guid("b909448b-dad1-425f-af11-24df6e343146"),
                            FieldId = new Guid("3e5bfb56-78ab-4b62-8c73-18e4fd1f4ea0"),
                            Value = "СТРОИТЕЛЬСТВО И АРХИТЕКТУРА"
                        },
                        new
                        {
                            Id = new Guid("3aef07ae-055d-49b9-9648-7f0335bb26bb"),
                            FieldId = new Guid("3e5bfb56-78ab-4b62-8c73-18e4fd1f4ea0"),
                            Value = "ЭЛЕКТРО- И ТЕПЛОЭНЕРГЕТИКА"
                        },
                        new
                        {
                            Id = new Guid("1956c9e0-e1d2-4c15-921a-bc712e7a1cca"),
                            FieldId = new Guid("3e5bfb56-78ab-4b62-8c73-18e4fd1f4ea0"),
                            Value = "ПРИКЛАДНАЯ ГЕОЛОГИЯ, ГОРНОЕ ДЕЛО, НЕФТЕГАЗОВОЕ ДЕЛО И ГЕОДЕЗИЯ"
                        },
                        new
                        {
                            Id = new Guid("5244aa6e-d5ec-4c16-910e-487fcb8a5269"),
                            FieldId = new Guid("3e5bfb56-78ab-4b62-8c73-18e4fd1f4ea0"),
                            Value = "НЕДРОПОЛЬЗОВАНИЕ И ГОРНЫЕ НАУКИ"
                        },
                        new
                        {
                            Id = new Guid("3ee35f42-9d7e-42a8-b2de-682adff8d13e"),
                            FieldId = new Guid("393da3a1-0483-4c21-8df6-9299246354a9"),
                            Value = "Аспиранты, адъюнкты, ординаторы, ассистенты-стажеры, не имеющие ученой степени"
                        },
                        new
                        {
                            Id = new Guid("44a41881-58e4-41c8-b91a-169e1f48943e"),
                            FieldId = new Guid("393da3a1-0483-4c21-8df6-9299246354a9"),
                            Value = "Докторанты, имеющие ученую степень кандидата наук"
                        },
                        new
                        {
                            Id = new Guid("20b69325-a189-42c2-927a-53d1b4ff124c"),
                            FieldId = new Guid("393da3a1-0483-4c21-8df6-9299246354a9"),
                            Value = "Имеющие ученую степень доктора наук"
                        },
                        new
                        {
                            Id = new Guid("6fca2e38-f024-46f4-8d69-11c98a7ae519"),
                            FieldId = new Guid("9a9cf9db-5ab8-4d8d-8971-4c9d4ac9e4ed"),
                            Value = "Доцент"
                        },
                        new
                        {
                            Id = new Guid("e90a15d7-211a-4223-957d-fcc50499962e"),
                            FieldId = new Guid("9a9cf9db-5ab8-4d8d-8971-4c9d4ac9e4ed"),
                            Value = "Профессор"
                        },
                        new
                        {
                            Id = new Guid("ac9a0e08-be7a-40c2-95b5-902fb64783ec"),
                            ColumnId = new Guid("c7cc4801-e1f0-48cd-a7f0-18404c6d069d"),
                            Value = "Региональный"
                        },
                        new
                        {
                            Id = new Guid("806673b5-738d-46b4-b5df-6fc474fe8674"),
                            ColumnId = new Guid("c7cc4801-e1f0-48cd-a7f0-18404c6d069d"),
                            Value = "Всероссийский"
                        },
                        new
                        {
                            Id = new Guid("953e3be4-66de-4bea-8b7d-22decbe97a3f"),
                            ColumnId = new Guid("c7cc4801-e1f0-48cd-a7f0-18404c6d069d"),
                            Value = "Международный"
                        },
                        new
                        {
                            Id = new Guid("127fdfb4-8f0f-469b-a8d5-f08b8be0241e"),
                            ColumnId = new Guid("cf2258ed-9a08-443c-8fc8-2328480f1264"),
                            Value = "Учебное и/или учебно-методическое пособие"
                        },
                        new
                        {
                            Id = new Guid("f0d6a777-32a1-418d-866c-0b4e1c3f14c6"),
                            ColumnId = new Guid("cf2258ed-9a08-443c-8fc8-2328480f1264"),
                            Value = "Учебник"
                        },
                        new
                        {
                            Id = new Guid("e7e40a74-ba29-4332-9be3-c143a12b94cd"),
                            ColumnId = new Guid("cf2258ed-9a08-443c-8fc8-2328480f1264"),
                            Value = "Монография"
                        },
                        new
                        {
                            Id = new Guid("6606a79e-3622-417e-93c0-3a81b62a8ff5"),
                            ColumnId = new Guid("7620d988-bab2-4b89-a2d2-55da6c6ce7a1"),
                            Value = "Лекции"
                        },
                        new
                        {
                            Id = new Guid("97273b7d-ba72-4530-b36c-325da2976347"),
                            ColumnId = new Guid("7620d988-bab2-4b89-a2d2-55da6c6ce7a1"),
                            Value = "Лабораторные"
                        },
                        new
                        {
                            Id = new Guid("0d355024-d7a1-4b6c-b3ba-806f2dd5a964"),
                            ColumnId = new Guid("deb9788e-5b66-4666-9c92-d5cf9351231f"),
                            Value = "Руководитель"
                        },
                        new
                        {
                            Id = new Guid("2062f0b3-65f5-4d15-9f11-bbd69857f01b"),
                            ColumnId = new Guid("deb9788e-5b66-4666-9c92-d5cf9351231f"),
                            Value = "Исполнитель"
                        },
                        new
                        {
                            Id = new Guid("315a0996-1a54-4209-992b-eaadad896fde"),
                            ColumnId = new Guid("3eddd1be-8dfe-4127-8aaf-a17e3d089f40"),
                            Value = "Изобретение"
                        },
                        new
                        {
                            Id = new Guid("84821c7e-8ea4-4f97-9b65-8d7957852c47"),
                            ColumnId = new Guid("3eddd1be-8dfe-4127-8aaf-a17e3d089f40"),
                            Value = "Полезная модель"
                        },
                        new
                        {
                            Id = new Guid("be729fa9-2621-493b-89a2-d985904d88ac"),
                            ColumnId = new Guid("3eddd1be-8dfe-4127-8aaf-a17e3d089f40"),
                            Value = "База данных"
                        },
                        new
                        {
                            Id = new Guid("b6e2ddaf-b64e-40ae-aadb-cc3aae884ea6"),
                            ColumnId = new Guid("c74c0825-e277-4c41-b1e3-dbfe7cad5656"),
                            Value = "Изобретение"
                        },
                        new
                        {
                            Id = new Guid("95909036-94b6-4676-a541-f32373c3666b"),
                            ColumnId = new Guid("c74c0825-e277-4c41-b1e3-dbfe7cad5656"),
                            Value = "Полезная модель"
                        },
                        new
                        {
                            Id = new Guid("7eb34e56-fafc-49a6-91ac-1dae7850cc42"),
                            ColumnId = new Guid("c74c0825-e277-4c41-b1e3-dbfe7cad5656"),
                            Value = "База данных"
                        },
                        new
                        {
                            Id = new Guid("de707aae-a749-4191-ba79-720d745e7208"),
                            FieldId = new Guid("9a9cf9db-5ab8-4d8d-8971-4c9d4ac9e4ed"),
                            Value = "Нет"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6962ea4-b9e8-42c7-95b0-87af64391ca9"),
                            EditBlockId = new Guid("ce56e7d5-446d-43ff-8272-bb2c669de1e9"),
                            Name = "Награждение премиями, наградами в области научно-педагогической деятельности городского, всероссийского или международного уровня (в том числе зарубежными), победы в профессиональных конкурсах за весь период научно-педагогической деятельности",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("fb960f02-8add-4c73-8eed-0a08bcdb7e06"),
                            EditBlockId = new Guid("ce56e7d5-446d-43ff-8272-bb2c669de1e9"),
                            Name = "Сведения о профессиональном развитии участника конкурса за последние 5 лет (курсы повышения квалификации/ стажировки)",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("a41adff7-9ca5-453a-aba9-cdfae07bfaa8"),
                            EditBlockId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            Name = "Учебная нагрузка за предыдущий учебный год (за исключением методической)",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("78d11403-f2b6-4295-a283-69f8e57d87ab"),
                            EditBlockId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            Name = "Список подготовленных под руководством участника конкурса студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("7de4de08-2ab3-4108-8d37-578e8e5e6a82"),
                            EditBlockId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            Name = "Сведения о работе, выполняемой участником конкурса в области научно-педагогической деятельности по совместительству (не по основному месту работы) в высшем учебном заведении, академическом институте, отраслевом научно-исследовательском институте, профессиональной образовательной организации, общеобразовательной организации за предыдущий учебный год",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("d3e03f86-f01a-4e24-9678-b3d225364157"),
                            EditBlockId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            Name = "Монографии, учебники, учебные и учебно-методические пособия с грифами и без грифов УМО, Министерств РФ или государственных академий наук, изданные типографским способом за последние 5 лет",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("3c5cb8fb-936b-4bcc-8a3f-a7bad0a00bc0"),
                            EditBlockId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            Name = "Список лабораторных практикумов и курсов лекций (разработанных самостоятельно участником конкурса) за последние 5 лет",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("c672ba6e-3028-46e1-af58-74279355e171"),
                            EditBlockId = new Guid("1841f718-f40c-4df9-9ebf-b2bc21fb9514"),
                            Name = "Список разработанных онлайн-курсов на открытых платформах за последние 5 лет",
                            Number = 8
                        },
                        new
                        {
                            Id = new Guid("6c8d2bb9-fd47-4c3b-8524-539aad009bf3"),
                            EditBlockId = new Guid("09532e26-2d28-4877-9f04-6e7a710ed05f"),
                            Name = "Список научных публикаций за последние 5 лет",
                            Number = 9
                        },
                        new
                        {
                            Id = new Guid("c520ffcd-97c6-4d22-818c-067e8ac83184"),
                            EditBlockId = new Guid("09532e26-2d28-4877-9f04-6e7a710ed05f"),
                            Name = "Персональные идентификаторы и показатели",
                            Number = 10
                        },
                        new
                        {
                            Id = new Guid("01525d5a-d4a0-4e1a-94c7-056d7dac68b2"),
                            EditBlockId = new Guid("09532e26-2d28-4877-9f04-6e7a710ed05f"),
                            Name = "Список выполненных НИР / НИОКР с финансированием в размере от 200 тыс. руб. и выше за последние 5 лет",
                            Number = 11
                        },
                        new
                        {
                            Id = new Guid("9a5ed757-4049-4b9a-8bf2-d9022b29135c"),
                            EditBlockId = new Guid("09532e26-2d28-4877-9f04-6e7a710ed05f"),
                            Name = "Список объектов интеллектуальной собственности, созданных участником конкурса за весь период научно-педагогической деятельности (созданных самостоятельно / в соавторстве), официально зарегистрированных в установленном порядке (в России / за рубежом)",
                            Number = 12
                        },
                        new
                        {
                            Id = new Guid("f3d224ae-f6d1-4af4-958b-8bc0014bd840"),
                            EditBlockId = new Guid("09532e26-2d28-4877-9f04-6e7a710ed05f"),
                            Name = "Перечень разработок, внедренных на предприятиях и организациях реального сектора экономики (в России / за рубежом)",
                            Number = 13
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e62019a-fde5-4cd0-90c2-a4629cdfa00d"),
                            Name = "Научно-педагогическая деятельность",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("8a011dae-7d45-476a-9710-39cd6e4cd5bf"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 2
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a2288f8-baea-40f9-8aef-d3f883d11706"),
                            Name = "User 1",
                            Username = "admin@mail.ru"
                        },
                        new
                        {
                            Id = new Guid("33a68cec-d017-4f91-89ec-9dc34ee7771e"),
                            Name = "User 2",
                            Username = "user@mail.ru"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ValueTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("18d4a1dd-5e77-4887-958a-4dd767394779"),
                            Name = "int"
                        },
                        new
                        {
                            Id = new Guid("1036f8af-9386-4332-8de2-126399de5aec"),
                            Name = "string"
                        },
                        new
                        {
                            Id = new Guid("8cdabb26-e943-453e-b7f7-4ca9dc0c9b8a"),
                            Name = "bool"
                        },
                        new
                        {
                            Id = new Guid("cfa2eea3-e14e-4493-8da5-c5a81aa0096f"),
                            Name = "DateTime"
                        });
                });

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", null)
                        .WithMany()
                        .HasForeignKey("EditBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", null)
                        .WithMany()
                        .HasForeignKey("FieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Table", null)
                        .WithMany()
                        .HasForeignKey("TablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", null)
                        .WithMany()
                        .HasForeignKey("MarksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Track", "Track")
                        .WithMany("Applications")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.UserInfo", "UserInfo")
                        .WithMany("Applications")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("CellVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("CellVals")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Row", "Row")
                        .WithMany("CellVals")
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Column");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Columns")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Columns")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Fields")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Fields")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("FieldVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("FieldVals")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("Marks")
                        .HasForeignKey("FieldId");

                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Marks")
                        .HasForeignKey("TableId");

                    b.Navigation("Field");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("MarkVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", "Mark")
                        .WithMany("MarkVals")
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Mark");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Rows")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.SelectValue", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("SelectValues")
                        .HasForeignKey("ColumnId");

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("SelectValues")
                        .HasForeignKey("FieldId");

                    b.Navigation("Column");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Tables")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Navigation("CellVals");

                    b.Navigation("FieldVals");

                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Navigation("CellVals");

                    b.Navigation("SelectValues");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Navigation("FieldVals");

                    b.Navigation("Marks");

                    b.Navigation("SelectValues");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Navigation("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Marks");

                    b.Navigation("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
