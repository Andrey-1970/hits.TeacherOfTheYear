// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp.Data;

#nullable disable

namespace ServerApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.Property<Guid>("EditBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("EditBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("EditBlockTrack");

                    b.HasData(
                        new
                        {
                            EditBlocksId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            TracksId = new Guid("c8b24990-fb90-413d-a59c-b6fcac76ce3a")
                        },
                        new
                        {
                            EditBlocksId = new Guid("fec83673-0cd0-44c7-9328-8060d6a67945"),
                            TracksId = new Guid("c8b24990-fb90-413d-a59c-b6fcac76ce3a")
                        },
                        new
                        {
                            EditBlocksId = new Guid("1e55ba1b-0dcf-4f02-a532-f369c97a7404"),
                            TracksId = new Guid("c8b24990-fb90-413d-a59c-b6fcac76ce3a")
                        },
                        new
                        {
                            EditBlocksId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            TracksId = new Guid("c8b24990-fb90-413d-a59c-b6fcac76ce3a")
                        },
                        new
                        {
                            EditBlocksId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            TracksId = new Guid("432c6f0a-bdcd-481f-b262-421ecf7f2b0c")
                        },
                        new
                        {
                            EditBlocksId = new Guid("fec83673-0cd0-44c7-9328-8060d6a67945"),
                            TracksId = new Guid("432c6f0a-bdcd-481f-b262-421ecf7f2b0c")
                        },
                        new
                        {
                            EditBlocksId = new Guid("1e55ba1b-0dcf-4f02-a532-f369c97a7404"),
                            TracksId = new Guid("432c6f0a-bdcd-481f-b262-421ecf7f2b0c")
                        },
                        new
                        {
                            EditBlocksId = new Guid("83161399-1997-4df8-bfe4-cd68d5ca8b8a"),
                            TracksId = new Guid("432c6f0a-bdcd-481f-b262-421ecf7f2b0c")
                        });
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.Property<Guid>("FieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.HasKey("FieldsId", "MarkBlocksId");

                    b.HasIndex("MarkBlocksId");

                    b.ToTable("FieldMarkBlock");

                    b.HasData(
                        new
                        {
                            FieldsId = new Guid("acde6fa0-0df2-4836-a46b-6cc48fdf97e8"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("4b37db7b-b52a-46e5-847f-a4fd6cb84f2a"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("a4590bb4-bf66-4f1e-b2dd-baf74ec48544"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("99fa60be-2fd0-407c-8599-8fb0da749ae9"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("41b57971-2130-409a-a983-dba25621fd2d"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("027c4334-1c9e-4b77-ac57-54230190df62"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("e85783ad-b55a-40fb-b175-609aec2201b8"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("c25964fc-75ba-43f6-a6e0-9e1dc3ed12a4"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("6f663593-b00d-4147-943c-234e4e08c96c"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("2548b2e9-9926-456e-a3a2-e891afdd213e"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("b7960abf-655d-438a-973d-23cd7ca6f633"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("0ee2cde7-8ee8-41de-a38b-790db60243b7"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("8694b52c-31dd-4f5b-a513-811ddf1c5e4c"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("2f580712-3b7f-4c49-82bb-446eab11e85d"),
                            MarkBlocksId = new Guid("469f5632-c849-4f97-ae58-c53733f05236")
                        },
                        new
                        {
                            FieldsId = new Guid("7cd531e6-b532-48ea-885d-362a2a7a1346"),
                            MarkBlocksId = new Guid("469f5632-c849-4f97-ae58-c53733f05236")
                        },
                        new
                        {
                            FieldsId = new Guid("2d4dd3f7-053f-4de3-9e60-d1f0f4fdbd02"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("b7db4185-d168-4c19-90fd-f1a3c4fc9b04"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("12680cdb-6baa-4f07-959e-45c06a3c1b43"),
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce")
                        },
                        new
                        {
                            FieldsId = new Guid("9dc2897f-c48e-4867-997e-35a03d7140c1"),
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f")
                        },
                        new
                        {
                            FieldsId = new Guid("21883794-274e-44e8-8082-595ba1f2e878"),
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f")
                        },
                        new
                        {
                            FieldsId = new Guid("72a79f12-3af5-4d35-9b39-12ba288ddeeb"),
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f")
                        },
                        new
                        {
                            FieldsId = new Guid("bc2d1751-e37d-4175-8833-1bf1b5f3e4ea"),
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f")
                        },
                        new
                        {
                            FieldsId = new Guid("05776e0b-86dd-4c86-848a-39d121292c50"),
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f")
                        },
                        new
                        {
                            FieldsId = new Guid("2d4dd3f7-053f-4de3-9e60-d1f0f4fdbd02"),
                            MarkBlocksId = new Guid("a6d2c0ab-909d-4008-960e-5c0f1fa70347")
                        },
                        new
                        {
                            FieldsId = new Guid("2d4dd3f7-053f-4de3-9e60-d1f0f4fdbd02"),
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce")
                        },
                        new
                        {
                            FieldsId = new Guid("966c636e-5322-46b1-9554-9442240ddb63"),
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce")
                        },
                        new
                        {
                            FieldsId = new Guid("55bc1415-1931-4765-ac8c-9fe3d9269269"),
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce")
                        });
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TablesId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TablesId");

                    b.HasIndex("TablesId");

                    b.ToTable("MarkBlockTable");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            TablesId = new Guid("6309600a-eb41-4741-87af-0b3c9ca86849")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            TablesId = new Guid("7cfec383-f404-411f-bfbb-5d814362fe39")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            TablesId = new Guid("47ef4c5e-50cb-4a4d-84b2-562856409ee7")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            TablesId = new Guid("b3680832-298c-498b-b7a7-88f667ab9e95")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("8b8e178e-a913-4054-a26b-b675182b079d"),
                            TablesId = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("8b8e178e-a913-4054-a26b-b675182b079d"),
                            TablesId = new Guid("eebe339f-e89e-49bc-8bdf-645682993520")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("a6d2c0ab-909d-4008-960e-5c0f1fa70347"),
                            TablesId = new Guid("68a69f8e-4a1c-4025-aaee-98b9f9d4191b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("a6d2c0ab-909d-4008-960e-5c0f1fa70347"),
                            TablesId = new Guid("bbbc1091-405a-489a-b141-5a91137653fe")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            TablesId = new Guid("68a69f8e-4a1c-4025-aaee-98b9f9d4191b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            TablesId = new Guid("bc51b00b-c3ba-4440-b180-5cdeed24c4e3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            TablesId = new Guid("5de8013b-e3f8-4679-989e-45994f59920c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            TablesId = new Guid("3c911560-0416-45e1-bb68-c928962e5233")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49f5f48b-c5bc-48fd-ae1a-03f7239dfbcd"),
                            TablesId = new Guid("bbbc1091-405a-489a-b141-5a91137653fe")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49f5f48b-c5bc-48fd-ae1a-03f7239dfbcd"),
                            TablesId = new Guid("927c041c-1329-4f85-89f3-520d4282c2ad")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49f5f48b-c5bc-48fd-ae1a-03f7239dfbcd"),
                            TablesId = new Guid("bc0ad19a-5e8f-4164-bcd1-21661b498819")
                        });
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("MarkBlockTrack");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce"),
                            TracksId = new Guid("c8b24990-fb90-413d-a59c-b6fcac76ce3a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            TracksId = new Guid("c8b24990-fb90-413d-a59c-b6fcac76ce3a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("8b8e178e-a913-4054-a26b-b675182b079d"),
                            TracksId = new Guid("c8b24990-fb90-413d-a59c-b6fcac76ce3a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("a6d2c0ab-909d-4008-960e-5c0f1fa70347"),
                            TracksId = new Guid("c8b24990-fb90-413d-a59c-b6fcac76ce3a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("469f5632-c849-4f97-ae58-c53733f05236"),
                            TracksId = new Guid("c8b24990-fb90-413d-a59c-b6fcac76ce3a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("b4e80db1-9db3-4446-9774-71131750ba12"),
                            TracksId = new Guid("c8b24990-fb90-413d-a59c-b6fcac76ce3a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce"),
                            TracksId = new Guid("432c6f0a-bdcd-481f-b262-421ecf7f2b0c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            TracksId = new Guid("432c6f0a-bdcd-481f-b262-421ecf7f2b0c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49f5f48b-c5bc-48fd-ae1a-03f7239dfbcd"),
                            TracksId = new Guid("432c6f0a-bdcd-481f-b262-421ecf7f2b0c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("469f5632-c849-4f97-ae58-c53733f05236"),
                            TracksId = new Guid("432c6f0a-bdcd-481f-b262-421ecf7f2b0c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("b4e80db1-9db3-4446-9774-71131750ba12"),
                            TracksId = new Guid("432c6f0a-bdcd-481f-b262-421ecf7f2b0c")
                        });
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "MarksId");

                    b.HasIndex("MarksId");

                    b.ToTable("MarkMarkBlock");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            MarksId = new Guid("52684c23-b6bd-4308-a043-4e3f6d5d40b8")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            MarksId = new Guid("80e6fe47-3ece-4b4c-978f-b58206427183")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            MarksId = new Guid("8d105131-0112-4dea-8521-a597eda968e0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            MarksId = new Guid("e558a693-74a4-403a-87d5-ecc0c8604c5b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            MarksId = new Guid("88a1dead-9a06-4051-b1be-b132d0d50691")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            MarksId = new Guid("5825354a-129b-4a60-93aa-7f3b09508f51")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            MarksId = new Guid("6b8a6709-91a0-40e8-8f83-dac7316cc715")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("8b8e178e-a913-4054-a26b-b675182b079d"),
                            MarksId = new Guid("7a30a046-b25f-49ff-88a7-eb60aefd57b7")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("8b8e178e-a913-4054-a26b-b675182b079d"),
                            MarksId = new Guid("b9e2e4ae-85df-488b-99a0-fa17e8369e13")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("8b8e178e-a913-4054-a26b-b675182b079d"),
                            MarksId = new Guid("3953d8f2-c321-4446-863b-7e186f0715c8")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("8b8e178e-a913-4054-a26b-b675182b079d"),
                            MarksId = new Guid("833d4c65-7fa1-4091-8c11-a66a1814ccf6")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("8b8e178e-a913-4054-a26b-b675182b079d"),
                            MarksId = new Guid("e94793df-ae93-41c2-9a60-ebdd6ec8eddb")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("a6d2c0ab-909d-4008-960e-5c0f1fa70347"),
                            MarksId = new Guid("5a8f575d-49f2-4b8d-aa40-4aa75d9ac39e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("a6d2c0ab-909d-4008-960e-5c0f1fa70347"),
                            MarksId = new Guid("6ce7aecd-d96f-4262-b5db-646007eb1d30")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("a6d2c0ab-909d-4008-960e-5c0f1fa70347"),
                            MarksId = new Guid("2b9ed696-3e5e-4b88-81dc-6504e3f7347f")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            MarksId = new Guid("5a8f575d-49f2-4b8d-aa40-4aa75d9ac39e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            MarksId = new Guid("6ce7aecd-d96f-4262-b5db-646007eb1d30")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            MarksId = new Guid("69a9b553-ce47-483a-8ee5-2848e2bb16f8")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            MarksId = new Guid("e720d85f-9f0b-449f-87d8-2b6960e122f0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            MarksId = new Guid("9c2a47d1-73ad-4c08-bfc8-02272d0e1169")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            MarksId = new Guid("cab92c0e-51d7-4feb-855f-2eb4ad218771")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            MarksId = new Guid("f5f609a3-e857-4ff9-822a-e773c41f28e2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            MarksId = new Guid("9f2f4a41-bf9a-444b-8505-e56872671620")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            MarksId = new Guid("ec9760c6-a8b3-47d1-91d9-b0ca3bd1be77")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49f5f48b-c5bc-48fd-ae1a-03f7239dfbcd"),
                            MarksId = new Guid("2b9ed696-3e5e-4b88-81dc-6504e3f7347f")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49f5f48b-c5bc-48fd-ae1a-03f7239dfbcd"),
                            MarksId = new Guid("15b473e4-48a6-44f9-bb85-1fced92a7a00")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49f5f48b-c5bc-48fd-ae1a-03f7239dfbcd"),
                            MarksId = new Guid("92322e8f-34fd-4a09-b99e-09228ace26e3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49f5f48b-c5bc-48fd-ae1a-03f7239dfbcd"),
                            MarksId = new Guid("3de89d62-bdf7-44aa-ac8c-772ec20a67ea")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49f5f48b-c5bc-48fd-ae1a-03f7239dfbcd"),
                            MarksId = new Guid("d057343c-5abf-4b74-aab2-9ffbbfd83f45")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("ApplicationForms");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.BlockReviewStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Commentary")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkBlockId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ReviewStatus")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ReviewerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("MarkBlockId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("BlockReviewStatus");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RowId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("RowId");

                    b.HasIndex("ApplicationId", "RowId", "ColumnId")
                        .IsUnique();

                    b.ToTable("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("TableId", "Name")
                        .IsUnique();

                    b.HasIndex("TableId", "Number")
                        .IsUnique();

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c71ea20-af89-48b0-b03e-b044168cd269"),
                            Name = "Год",
                            Number = 1,
                            TableId = new Guid("68a69f8e-4a1c-4025-aaee-98b9f9d4191b"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("a23102f3-f186-4f83-a74f-3285b221144c"),
                            Name = "Название конкурса",
                            Number = 2,
                            TableId = new Guid("68a69f8e-4a1c-4025-aaee-98b9f9d4191b"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("707c5724-413e-4705-b44e-b42f68b8119f"),
                            Name = "Статус конкурса",
                            Number = 3,
                            TableId = new Guid("68a69f8e-4a1c-4025-aaee-98b9f9d4191b"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("cb2836a3-f800-495e-89a1-440731ff9068"),
                            Name = "Награда",
                            Number = 4,
                            TableId = new Guid("68a69f8e-4a1c-4025-aaee-98b9f9d4191b"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("95dd9cbe-bdb4-4dc4-a1ea-21670d03202e"),
                            Name = "Ссылка",
                            Number = 5,
                            TableId = new Guid("68a69f8e-4a1c-4025-aaee-98b9f9d4191b"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("89cfb5b5-d492-448b-b4ea-3b5a4cc5b4d0"),
                            Name = "Название документа, реквизиты",
                            Number = 1,
                            TableId = new Guid("bbbc1091-405a-489a-b141-5a91137653fe"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("b7330e0a-bc62-49e5-ae7f-0bf0aed7e743"),
                            Name = "Год получения документа",
                            Number = 2,
                            TableId = new Guid("bbbc1091-405a-489a-b141-5a91137653fe"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("da86355d-1bb7-4663-b556-5f06e1e717de"),
                            Name = "Наименование курса",
                            Number = 1,
                            TableId = new Guid("6309600a-eb41-4741-87af-0b3c9ca86849"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("e15e33b0-501d-4cd5-ac6f-cd7fa17e1d5a"),
                            Name = "Язык преподавания (русск./англ./др.)",
                            Number = 2,
                            TableId = new Guid("6309600a-eb41-4741-87af-0b3c9ca86849"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("2c584d87-98d0-4502-acc3-0da0b64d826c"),
                            Name = "Лекции (час.)",
                            Number = 3,
                            TableId = new Guid("6309600a-eb41-4741-87af-0b3c9ca86849"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("6dd0daf6-d1a6-430b-89cf-f255801779e9"),
                            Name = "Практические занятия (час.)",
                            Number = 4,
                            TableId = new Guid("6309600a-eb41-4741-87af-0b3c9ca86849"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("675ec6d1-4e98-4e31-bf8d-78648a810096"),
                            Name = "Итого (час.)",
                            Number = 5,
                            TableId = new Guid("6309600a-eb41-4741-87af-0b3c9ca86849"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("b76d9003-3e94-4221-be93-e92b6d276b4f"),
                            Name = "ФИО",
                            Number = 1,
                            TableId = new Guid("7cfec383-f404-411f-bfbb-5d814362fe39"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("dd8d420c-2cc0-421c-928c-c6720e43bab4"),
                            Name = "Название конкурса/премии",
                            Number = 2,
                            TableId = new Guid("7cfec383-f404-411f-bfbb-5d814362fe39"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("17b79bee-cb3a-4d03-8b7d-d77d94315398"),
                            Name = "Год",
                            Number = 3,
                            TableId = new Guid("7cfec383-f404-411f-bfbb-5d814362fe39"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("6c33129f-41ba-4cc2-8dd3-69d9e2eb25cb"),
                            Name = "Статус конкурса (международный, всероссийский), статус награды (РФ, субъект РФ)",
                            Number = 4,
                            TableId = new Guid("7cfec383-f404-411f-bfbb-5d814362fe39"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("7fd8aa75-188d-406f-9f41-e4f6a96c1fb0"),
                            Name = "Награда/премия (медаль, диплом с указанием степени)",
                            Number = 5,
                            TableId = new Guid("7cfec383-f404-411f-bfbb-5d814362fe39"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("0173f1b6-1a91-4885-853b-66e52f69ce03"),
                            Name = "Название организации/должность/ставка",
                            Number = 1,
                            TableId = new Guid("47ef4c5e-50cb-4a4d-84b2-562856409ee7"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("fb482171-711b-42a8-aaa6-85a5ce4c2503"),
                            Name = "Место нахождения (субъект РФ, зарубежье)",
                            Number = 2,
                            TableId = new Guid("47ef4c5e-50cb-4a4d-84b2-562856409ee7"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("947ae2bb-1899-4daf-959d-257f54c40d42"),
                            Name = "Вид деятельности (преподавательская)",
                            Number = 3,
                            TableId = new Guid("47ef4c5e-50cb-4a4d-84b2-562856409ee7"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("645c4484-d10c-4cee-816e-0d9710cf6881"),
                            Name = "Количество часов",
                            Number = 4,
                            TableId = new Guid("47ef4c5e-50cb-4a4d-84b2-562856409ee7"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("a4c0ed80-5de4-4544-8e8a-524319aa754b"),
                            Name = "Вид публикации",
                            Number = 1,
                            TableId = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("3ef60dbf-6f08-47e6-8d1f-57598f2182ac"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("b9cd68bf-fb48-4765-9510-b5640bffefe6"),
                            Name = "Соавторы",
                            Number = 3,
                            TableId = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("3e4e1d84-4c3e-48f5-a8bc-85a6d2a9b796"),
                            Name = "Количество печатных листов",
                            Number = 4,
                            TableId = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("bc3e1850-0265-49eb-ac5f-9d084171acb5"),
                            Name = "Наличие грифа",
                            Number = 5,
                            TableId = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca"),
                            ValueTypeId = new Guid("10d3a7f2-1949-4f32-b671-c55ba77a8753")
                        },
                        new
                        {
                            Id = new Guid("b098b84d-98a9-4fec-b0d5-1a3c8bd4b5d1"),
                            Name = "Издательство, год",
                            Number = 6,
                            TableId = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("c28f3fc0-975f-4f52-93ac-f932aa4ec782"),
                            Name = "Название дисциплины",
                            Number = 1,
                            TableId = new Guid("eebe339f-e89e-49bc-8bdf-645682993520"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("8fbf882a-1b9b-4610-9543-bc0b2a6a041c"),
                            Name = "Вид (лекции, лабораторные)",
                            Number = 2,
                            TableId = new Guid("eebe339f-e89e-49bc-8bdf-645682993520"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("81a52eee-57e7-4349-bf83-5d0e396ee2fa"),
                            Name = "Название курса",
                            Number = 1,
                            TableId = new Guid("b3680832-298c-498b-b7a7-88f667ab9e95"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("a6bbcd7a-3b54-4881-995d-59d084dc3490"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("b3680832-298c-498b-b7a7-88f667ab9e95"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("5eca2ca2-b37d-4c01-a3a2-18b6b4dd2b69"),
                            Name = "Ссылка на платформу",
                            Number = 3,
                            TableId = new Guid("b3680832-298c-498b-b7a7-88f667ab9e95"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("c9ae0279-9f05-4167-9de1-518164a7b3a3"),
                            Name = "Год",
                            Number = 4,
                            TableId = new Guid("b3680832-298c-498b-b7a7-88f667ab9e95"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("84ef4610-606a-4622-993a-6bae70b9b72c"),
                            Name = "Название статьи",
                            Number = 1,
                            TableId = new Guid("bc51b00b-c3ba-4440-b180-5cdeed24c4e3"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("31fbcbc3-cd82-426d-8a53-294561a6a6ac"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("bc51b00b-c3ba-4440-b180-5cdeed24c4e3"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("9eaebfde-956b-4c25-a616-77623d6ed567"),
                            Name = "Тип публикации (категория ВАК/квартиль МБД)",
                            Number = 3,
                            TableId = new Guid("bc51b00b-c3ba-4440-b180-5cdeed24c4e3"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("cd837ea8-86d6-4c53-830c-30fad639e597"),
                            Name = "Издание, год",
                            Number = 4,
                            TableId = new Guid("bc51b00b-c3ba-4440-b180-5cdeed24c4e3"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("599a1d76-0713-4180-a897-f4309a559e03"),
                            Name = "Тип идентификатора",
                            Number = 1,
                            TableId = new Guid("5de8013b-e3f8-4679-989e-45994f59920c"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("9e45ea33-08e0-4cf8-8459-cb165be5065a"),
                            Name = "Идентификатор",
                            Number = 2,
                            TableId = new Guid("5de8013b-e3f8-4679-989e-45994f59920c"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("42e698f4-70a3-4c48-afe0-e84dd448a1eb"),
                            Name = "Количество публикаций в БАЗЕ",
                            Number = 3,
                            TableId = new Guid("5de8013b-e3f8-4679-989e-45994f59920c"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("99b50c8e-9aab-465f-8a77-6571604578a2"),
                            Name = "Количество цитирований",
                            Number = 4,
                            TableId = new Guid("5de8013b-e3f8-4679-989e-45994f59920c"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("89e9e4b1-a42a-4d62-8a86-f8c6ab2afe02"),
                            Name = "Индекс Хирша (за все время)",
                            Number = 5,
                            TableId = new Guid("5de8013b-e3f8-4679-989e-45994f59920c"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("3d47338e-3220-48da-a964-d9b9157bbf57"),
                            Name = "Название НИР/НИОКР",
                            Number = 1,
                            TableId = new Guid("3c911560-0416-45e1-bb68-c928962e5233"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("4cc80729-b7a8-4787-8c53-db68a9e123ba"),
                            Name = "Сумма финансирования (тыс. руб.)",
                            Number = 2,
                            TableId = new Guid("3c911560-0416-45e1-bb68-c928962e5233"),
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("4639c3e6-af80-4106-a60e-f8186253bb1e"),
                            Name = "Период выполнения",
                            Number = 3,
                            TableId = new Guid("3c911560-0416-45e1-bb68-c928962e5233"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("32d7ad17-070c-4ba5-b421-84400b194485"),
                            Name = "Статус (руководитель/исполнитель)",
                            Number = 4,
                            TableId = new Guid("3c911560-0416-45e1-bb68-c928962e5233"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("803e9bbc-0d7b-4704-af38-856a3ee9fae9"),
                            Name = "Регистрационный номер карты в системе ЕГИСУ (https://www.rosrid.ru/)",
                            Number = 5,
                            TableId = new Guid("3c911560-0416-45e1-bb68-c928962e5233"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("cb8ca501-15af-404e-86c9-4fa1b2c6db5a"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("927c041c-1329-4f85-89f3-520d4282c2ad"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("64d631fa-01c9-480a-bf09-df074b24d32f"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("927c041c-1329-4f85-89f3-520d4282c2ad"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("0dfa2b0c-58cd-4027-ad29-6a59a1564a10"),
                            Name = "ФИО соавторов",
                            Number = 3,
                            TableId = new Guid("927c041c-1329-4f85-89f3-520d4282c2ad"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("1fa10ea8-403e-4418-a488-2bd1ba635c66"),
                            Name = "Номер РИД",
                            Number = 4,
                            TableId = new Guid("927c041c-1329-4f85-89f3-520d4282c2ad"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("9cc90b5b-04da-4c35-940c-125e8ec2381f"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("bc0ad19a-5e8f-4164-bcd1-21661b498819"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("f79c8273-2386-4016-8ec0-d690e4d9b5dc"),
                            Name = "Название разработки",
                            Number = 2,
                            TableId = new Guid("bc0ad19a-5e8f-4164-bcd1-21661b498819"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("2e51eb5b-2e50-4c8e-9016-1278533ac66c"),
                            Name = "Название организации в которую внедрена разработка",
                            Number = 3,
                            TableId = new Guid("bc0ad19a-5e8f-4164-bcd1-21661b498819"),
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("EditBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "Общая информация",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("fec83673-0cd0-44c7-9328-8060d6a67945"),
                            Name = "Категория участников",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("1e55ba1b-0dcf-4f02-a532-f369c97a7404"),
                            Name = "Профессиональное развитие",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            Name = "Деятельность",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("83161399-1997-4df8-bfe4-cd68d5ca8b8a"),
                            Name = "Деятельность",
                            Number = 5
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlockStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("EditBlockId");

                    b.ToTable("EditBlockStatuses");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditGroup")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Placeholder")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("acde6fa0-0df2-4836-a46b-6cc48fdf97e8"),
                            EditBlockId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "ФИО",
                            Number = 1,
                            Placeholder = "Иванов Иван Иванович",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("4b37db7b-b52a-46e5-847f-a4fd6cb84f2a"),
                            EditBlockId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "Дата рождения",
                            Number = 2,
                            Placeholder = "01.01.2000",
                            ValueTypeId = new Guid("5c069965-0971-47f4-834b-ef551d76e601")
                        },
                        new
                        {
                            Id = new Guid("a4590bb4-bf66-4f1e-b2dd-baf74ec48544"),
                            EditBlockId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "Домашний адрес",
                            Number = 3,
                            Placeholder = "Регион, город, улица, дом, квартира",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("99fa60be-2fd0-407c-8599-8fb0da749ae9"),
                            EditBlockId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "Контактный телефон",
                            Number = 4,
                            Placeholder = "+8 (900)-000-00-00",
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("41b57971-2130-409a-a983-dba25621fd2d"),
                            EditBlockId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "Электронная почта",
                            Number = 5,
                            Placeholder = "user@example.com",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("027c4334-1c9e-4b77-ac57-54230190df62"),
                            EditBlockId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "Место работы/учебы",
                            Number = 6,
                            Placeholder = "Название организации",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("e85783ad-b55a-40fb-b175-609aec2201b8"),
                            EditBlockId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "Адрес работы/учебы",
                            Number = 7,
                            Placeholder = "Регион, город, улица, дом",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("c25964fc-75ba-43f6-a6e0-9e1dc3ed12a4"),
                            EditBlockId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "Институт, факультет, кафедра, лаборатория",
                            Number = 8,
                            Placeholder = "Введите институт, факультет, кафедру, лабораторию",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("6f663593-b00d-4147-943c-234e4e08c96c"),
                            EditBlockId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "Должность",
                            Number = 9,
                            Placeholder = "Введите свою должность в организации",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("2548b2e9-9926-456e-a3a2-e891afdd213e"),
                            EditBlockId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "Стаж научно-педагогической деятельности по трудовой книжке",
                            Number = 10,
                            Placeholder = "Введите свой стаж",
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("b7960abf-655d-438a-973d-23cd7ca6f633"),
                            EditBlockId = new Guid("99a18210-4e6e-4863-9d78-e2c4ad968842"),
                            Name = "Дополнительная информация",
                            Number = 11,
                            Placeholder = "Пример",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("0ee2cde7-8ee8-41de-a38b-790db60243b7"),
                            EditBlockId = new Guid("fec83673-0cd0-44c7-9328-8060d6a67945"),
                            Name = "Направление конкурса",
                            Number = 12,
                            Placeholder = "Выберите направление конкурса",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("8694b52c-31dd-4f5b-a513-811ddf1c5e4c"),
                            EditBlockId = new Guid("fec83673-0cd0-44c7-9328-8060d6a67945"),
                            Name = "Категория участника конкурса (Работники высших учебных заведений, отраслевых и академических институтов, работники сектора промышленности (исследователи), осуществляющие научно-исследовательскую и/или научно-педагогическую деятельность)",
                            Number = 13,
                            Placeholder = "Выберите категорию участника конкруса",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("2f580712-3b7f-4c49-82bb-446eab11e85d"),
                            EditBlockId = new Guid("fec83673-0cd0-44c7-9328-8060d6a67945"),
                            Name = "Название конкурсной работы",
                            Number = 14,
                            Placeholder = "Введите название своей конкурсной работы",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("7cd531e6-b532-48ea-885d-362a2a7a1346"),
                            EditBlockId = new Guid("fec83673-0cd0-44c7-9328-8060d6a67945"),
                            Name = "Ссылка на конкурсную работу",
                            Number = 15,
                            Placeholder = "Введите ссылку своей конкурсной работы",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("2d4dd3f7-053f-4de3-9e60-d1f0f4fdbd02"),
                            EditBlockId = new Guid("fec83673-0cd0-44c7-9328-8060d6a67945"),
                            Name = "Ученое звание",
                            Number = 16,
                            Placeholder = "Выберите ученое звание",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("b7db4185-d168-4c19-90fd-f1a3c4fc9b04"),
                            EditBlockId = new Guid("fec83673-0cd0-44c7-9328-8060d6a67945"),
                            Name = "Ученая степень",
                            Number = 17,
                            Placeholder = "Выберите ученую степень",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("12680cdb-6baa-4f07-959e-45c06a3c1b43"),
                            EditBlockId = new Guid("fec83673-0cd0-44c7-9328-8060d6a67945"),
                            Name = "Научная специальность (по классификации ВАК)",
                            Number = 18,
                            Placeholder = "Введите научную специальность (по классификации ВАК)",
                            ValueTypeId = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8")
                        },
                        new
                        {
                            Id = new Guid("9dc2897f-c48e-4867-997e-35a03d7140c1"),
                            EditBlockId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-педагогической деятельности",
                            Name = "Защитившиеся кадидаты наук",
                            Number = 19,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("21883794-274e-44e8-8082-595ba1f2e878"),
                            EditBlockId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            Name = "Защитившиеся доктора наук",
                            Number = 20,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("72a79f12-3af5-4d35-9b39-12ba288ddeeb"),
                            EditBlockId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            EditGroup = "Руководство дипломными проектами за предыдущий учебный год",
                            Name = "Защитившиеся бакалавры",
                            Number = 21,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("bc2d1751-e37d-4175-8833-1bf1b5f3e4ea"),
                            EditBlockId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            Name = "Защитившиеся специалисты",
                            Number = 22,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("05776e0b-86dd-4c86-848a-39d121292c50"),
                            EditBlockId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            Name = "Защитившиеся магистры",
                            Number = 23,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("966c636e-5322-46b1-9554-9442240ddb63"),
                            EditBlockId = new Guid("83161399-1997-4df8-bfe4-cd68d5ca8b8a"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-исследовательской деятельности",
                            Name = "Защитившиеся кандидаты наук",
                            Number = 24,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        },
                        new
                        {
                            Id = new Guid("55bc1415-1931-4765-ac8c-9fe3d9269269"),
                            EditBlockId = new Guid("83161399-1997-4df8-bfe4-cd68d5ca8b8a"),
                            Name = "Защитившиеся доктора наук",
                            Number = 25,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("ApplicationId", "FieldId")
                        .IsUnique();

                    b.ToTable("FieldVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("TableId");

                    b.ToTable("Marks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52684c23-b6bd-4308-a043-4e3f6d5d40b8"),
                            Name = "Баллы за объем учебной нагрузки:",
                            Number = 1,
                            TableId = new Guid("6309600a-eb41-4741-87af-0b3c9ca86849")
                        },
                        new
                        {
                            Id = new Guid("80e6fe47-3ece-4b4c-978f-b58206427183"),
                            Name = "Баллы за количество дисциплин на иностранном языке, которые вел претендент, в предыдущем учебном году:",
                            Number = 2,
                            TableId = new Guid("6309600a-eb41-4741-87af-0b3c9ca86849")
                        },
                        new
                        {
                            Id = new Guid("8d105131-0112-4dea-8521-a597eda968e0"),
                            FieldId = new Guid("05776e0b-86dd-4c86-848a-39d121292c50"),
                            Name = "Баллы за количество квалификационных работ, выполненных под руководством претендента:",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("e558a693-74a4-403a-87d5-ecc0c8604c5b"),
                            FieldId = new Guid("9dc2897f-c48e-4867-997e-35a03d7140c1"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("88a1dead-9a06-4051-b1be-b132d0d50691"),
                            FieldId = new Guid("21883794-274e-44e8-8082-595ba1f2e878"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("5825354a-129b-4a60-93aa-7f3b09508f51"),
                            Name = "Баллы за количество подготовленных студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание:",
                            Number = 6,
                            TableId = new Guid("7cfec383-f404-411f-bfbb-5d814362fe39")
                        },
                        new
                        {
                            Id = new Guid("6b8a6709-91a0-40e8-8f83-dac7316cc715"),
                            Name = "Баллы за количество онлайн курсов на открытых площадках:",
                            Number = 7,
                            TableId = new Guid("b3680832-298c-498b-b7a7-88f667ab9e95")
                        },
                        new
                        {
                            Id = new Guid("7a30a046-b25f-49ff-88a7-eb60aefd57b7"),
                            Name = "Баллы за труды с грифом и без соавторства:",
                            Number = 8,
                            TableId = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca")
                        },
                        new
                        {
                            Id = new Guid("b9e2e4ae-85df-488b-99a0-fa17e8369e13"),
                            Name = "Баллы за труды с грифом в соавторстве:",
                            Number = 9,
                            TableId = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca")
                        },
                        new
                        {
                            Id = new Guid("3953d8f2-c321-4446-863b-7e186f0715c8"),
                            Name = "Баллы за труды без грифа и без соавторства:",
                            Number = 10,
                            TableId = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca")
                        },
                        new
                        {
                            Id = new Guid("833d4c65-7fa1-4091-8c11-a66a1814ccf6"),
                            Name = "Баллы за труды без грифа в соавторстве:",
                            Number = 11,
                            TableId = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca")
                        },
                        new
                        {
                            Id = new Guid("e94793df-ae93-41c2-9a60-ebdd6ec8eddb"),
                            Name = "Баллы за количество практикумов и курсов лекций:",
                            Number = 12,
                            TableId = new Guid("eebe339f-e89e-49bc-8bdf-645682993520")
                        },
                        new
                        {
                            Id = new Guid("5a8f575d-49f2-4b8d-aa40-4aa75d9ac39e"),
                            FieldId = new Guid("2d4dd3f7-053f-4de3-9e60-d1f0f4fdbd02"),
                            Name = "Баллы за ученое звание:",
                            Number = 13
                        },
                        new
                        {
                            Id = new Guid("6ce7aecd-d96f-4262-b5db-646007eb1d30"),
                            Name = "Баллы за награды:",
                            Number = 14,
                            TableId = new Guid("68a69f8e-4a1c-4025-aaee-98b9f9d4191b")
                        },
                        new
                        {
                            Id = new Guid("2b9ed696-3e5e-4b88-81dc-6504e3f7347f"),
                            Name = "Баллы за профессиональное развитие:",
                            Number = 15,
                            TableId = new Guid("bbbc1091-405a-489a-b141-5a91137653fe")
                        },
                        new
                        {
                            Id = new Guid("69a9b553-ce47-483a-8ee5-2848e2bb16f8"),
                            Name = "Баллы за научные публикации:",
                            Number = 16,
                            TableId = new Guid("bc51b00b-c3ba-4440-b180-5cdeed24c4e3")
                        },
                        new
                        {
                            Id = new Guid("e720d85f-9f0b-449f-87d8-2b6960e122f0"),
                            Name = "Баллы по базе Scopus:",
                            Number = 17,
                            TableId = new Guid("5de8013b-e3f8-4679-989e-45994f59920c")
                        },
                        new
                        {
                            Id = new Guid("9c2a47d1-73ad-4c08-bfc8-02272d0e1169"),
                            Name = "Баллы по базе РИНЦ:",
                            Number = 18,
                            TableId = new Guid("5de8013b-e3f8-4679-989e-45994f59920c")
                        },
                        new
                        {
                            Id = new Guid("cab92c0e-51d7-4feb-855f-2eb4ad218771"),
                            FieldId = new Guid("966c636e-5322-46b1-9554-9442240ddb63"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 19
                        },
                        new
                        {
                            Id = new Guid("f5f609a3-e857-4ff9-822a-e773c41f28e2"),
                            FieldId = new Guid("55bc1415-1931-4765-ac8c-9fe3d9269269"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 20
                        },
                        new
                        {
                            Id = new Guid("9f2f4a41-bf9a-444b-8505-e56872671620"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве руководителя:",
                            Number = 21,
                            TableId = new Guid("3c911560-0416-45e1-bb68-c928962e5233")
                        },
                        new
                        {
                            Id = new Guid("ec9760c6-a8b3-47d1-91d9-b0ca3bd1be77"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве исполнителя:",
                            Number = 22,
                            TableId = new Guid("3c911560-0416-45e1-bb68-c928962e5233")
                        },
                        new
                        {
                            Id = new Guid("15b473e4-48a6-44f9-bb85-1fced92a7a00"),
                            Name = "Баллы за количество объектов интеллектуальной собственности:",
                            Number = 23,
                            TableId = new Guid("927c041c-1329-4f85-89f3-520d4282c2ad")
                        },
                        new
                        {
                            Id = new Guid("92322e8f-34fd-4a09-b99e-09228ace26e3"),
                            Name = "Баллы за количество разработок:",
                            Number = 24,
                            TableId = new Guid("bc0ad19a-5e8f-4164-bcd1-21661b498819")
                        },
                        new
                        {
                            Id = new Guid("3de89d62-bdf7-44aa-ac8c-772ec20a67ea"),
                            Name = "Оценка уровня предоставленной работы:",
                            Number = 25
                        },
                        new
                        {
                            Id = new Guid("d057343c-5abf-4b74-aab2-9ffbbfd83f45"),
                            Name = "Использование в представленной работе инновационных методов (проблемного и проективного обучения, тренинговых форм, модульно-кредитных, модульно-рейтинговых систем обучения и контроля знаний):",
                            Number = 26
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("MarkBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7781518-c04e-4034-a3d5-5bc44f2000ce"),
                            Name = "Основной",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("163a5029-9ef6-4dc9-8def-d712064ea12f"),
                            Name = "Образовательная деятельность",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("8b8e178e-a913-4054-a26b-b675182b079d"),
                            Name = "Методическая деятельность",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("a6d2c0ab-909d-4008-960e-5c0f1fa70347"),
                            Name = "Профессиональные показатели",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("f4e9cdfe-1b1a-4604-b9ef-50619051dbce"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("49f5f48b-c5bc-48fd-ae1a-03f7239dfbcd"),
                            Name = "Инновационная и иная деятельность",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("469f5632-c849-4f97-ae58-c53733f05236"),
                            Name = "Конкурсная работа",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("b4e80db1-9db3-4446-9774-71131750ba12"),
                            Name = "Итог",
                            Number = 8
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarkId");

                    b.HasIndex("ApplicationId", "MarkId")
                        .IsUnique();

                    b.ToTable("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.SelectValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("FieldId");

                    b.ToTable("SelectValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b265009-590d-4687-8935-edd7883ec1af"),
                            FieldId = new Guid("0ee2cde7-8ee8-41de-a38b-790db60243b7"),
                            Value = "АРХИТЕКТУРА"
                        },
                        new
                        {
                            Id = new Guid("b2ab1344-c1e3-4a50-a07a-e488390138d2"),
                            FieldId = new Guid("0ee2cde7-8ee8-41de-a38b-790db60243b7"),
                            Value = "ТЕХНИКА И ТЕХНОЛОГИИ СТРОИТЕЛЬСТВА"
                        },
                        new
                        {
                            Id = new Guid("60812a0d-d376-4533-8194-b33aca0b62f7"),
                            FieldId = new Guid("0ee2cde7-8ee8-41de-a38b-790db60243b7"),
                            Value = "СТРОИТЕЛЬСТВО И АРХИТЕКТУРА"
                        },
                        new
                        {
                            Id = new Guid("9e49f764-2e15-401e-8db9-f2ddc9c291e3"),
                            FieldId = new Guid("0ee2cde7-8ee8-41de-a38b-790db60243b7"),
                            Value = "ЭЛЕКТРО- И ТЕПЛОЭНЕРГЕТИКА"
                        },
                        new
                        {
                            Id = new Guid("0352ba02-b1e8-4fdd-9aaf-0b32a108729c"),
                            FieldId = new Guid("0ee2cde7-8ee8-41de-a38b-790db60243b7"),
                            Value = "ПРИКЛАДНАЯ ГЕОЛОГИЯ, ГОРНОЕ ДЕЛО, НЕФТЕГАЗОВОЕ ДЕЛО И ГЕОДЕЗИЯ"
                        },
                        new
                        {
                            Id = new Guid("fe1ded5d-a97f-44b0-8875-d115391acbf4"),
                            FieldId = new Guid("0ee2cde7-8ee8-41de-a38b-790db60243b7"),
                            Value = "НЕДРОПОЛЬЗОВАНИЕ И ГОРНЫЕ НАУКИ"
                        },
                        new
                        {
                            Id = new Guid("e4fd9be5-e5a2-4e50-a672-f491e303d05c"),
                            FieldId = new Guid("8694b52c-31dd-4f5b-a513-811ddf1c5e4c"),
                            Value = "Аспиранты, адъюнкты, ординаторы, ассистенты-стажеры, не имеющие ученой степени"
                        },
                        new
                        {
                            Id = new Guid("6b2d31bd-be4c-44e5-90cd-3db963d984eb"),
                            FieldId = new Guid("8694b52c-31dd-4f5b-a513-811ddf1c5e4c"),
                            Value = "Докторанты, имеющие ученую степень кандидата наук"
                        },
                        new
                        {
                            Id = new Guid("63ee8062-ab0a-402e-806b-7a31455db2f1"),
                            FieldId = new Guid("8694b52c-31dd-4f5b-a513-811ddf1c5e4c"),
                            Value = "Имеющие ученую степень доктора наук"
                        },
                        new
                        {
                            Id = new Guid("5c724b10-8fc2-4173-96bb-2bb9ba973fe2"),
                            FieldId = new Guid("2d4dd3f7-053f-4de3-9e60-d1f0f4fdbd02"),
                            Value = "Доцент"
                        },
                        new
                        {
                            Id = new Guid("2a81d72a-b342-46e7-8340-b61b942ae4eb"),
                            FieldId = new Guid("2d4dd3f7-053f-4de3-9e60-d1f0f4fdbd02"),
                            Value = "Профессор"
                        },
                        new
                        {
                            Id = new Guid("1508b4d8-08f9-4fc5-90d8-3be1e267721a"),
                            ColumnId = new Guid("707c5724-413e-4705-b44e-b42f68b8119f"),
                            Value = "Региональный"
                        },
                        new
                        {
                            Id = new Guid("be94882d-9a50-4a7a-8e6a-4e8d42091d23"),
                            ColumnId = new Guid("707c5724-413e-4705-b44e-b42f68b8119f"),
                            Value = "Всероссийский"
                        },
                        new
                        {
                            Id = new Guid("841977c8-bc1c-450e-909b-bfceffd99149"),
                            ColumnId = new Guid("707c5724-413e-4705-b44e-b42f68b8119f"),
                            Value = "Международный"
                        },
                        new
                        {
                            Id = new Guid("97404de6-3e39-4762-8742-abaa68408d6f"),
                            ColumnId = new Guid("a4c0ed80-5de4-4544-8e8a-524319aa754b"),
                            Value = "Учебное и/или учебно-методическое пособие"
                        },
                        new
                        {
                            Id = new Guid("6f45ba6d-a1c8-41eb-adfe-3e2883b38fe5"),
                            ColumnId = new Guid("a4c0ed80-5de4-4544-8e8a-524319aa754b"),
                            Value = "Учебник"
                        },
                        new
                        {
                            Id = new Guid("1dc0e87e-bbfa-46fa-b90e-5ed5b67e4b87"),
                            ColumnId = new Guid("a4c0ed80-5de4-4544-8e8a-524319aa754b"),
                            Value = "Монография"
                        },
                        new
                        {
                            Id = new Guid("672923a0-0ad7-4e0b-b861-966aa3a55d1b"),
                            ColumnId = new Guid("8fbf882a-1b9b-4610-9543-bc0b2a6a041c"),
                            Value = "Лекции"
                        },
                        new
                        {
                            Id = new Guid("48becfcb-16c0-444e-96a3-7025f34d8f53"),
                            ColumnId = new Guid("8fbf882a-1b9b-4610-9543-bc0b2a6a041c"),
                            Value = "Лабораторные"
                        },
                        new
                        {
                            Id = new Guid("f5d10a56-2bcd-4a73-a68f-092177dcf0d1"),
                            ColumnId = new Guid("32d7ad17-070c-4ba5-b421-84400b194485"),
                            Value = "Руководитель"
                        },
                        new
                        {
                            Id = new Guid("892cd223-cc92-4c9d-aedf-72ae59f5f7ac"),
                            ColumnId = new Guid("32d7ad17-070c-4ba5-b421-84400b194485"),
                            Value = "Исполнитель"
                        },
                        new
                        {
                            Id = new Guid("264e0fda-130e-4976-8ca3-507ab88dfc0c"),
                            ColumnId = new Guid("cb8ca501-15af-404e-86c9-4fa1b2c6db5a"),
                            Value = "Изобретение"
                        },
                        new
                        {
                            Id = new Guid("65a928ce-49b4-447f-b984-efdfb19189c1"),
                            ColumnId = new Guid("cb8ca501-15af-404e-86c9-4fa1b2c6db5a"),
                            Value = "Полезная модель"
                        },
                        new
                        {
                            Id = new Guid("30af88c5-d426-496f-89e2-390074d3c161"),
                            ColumnId = new Guid("cb8ca501-15af-404e-86c9-4fa1b2c6db5a"),
                            Value = "База данных"
                        },
                        new
                        {
                            Id = new Guid("88a8e0bc-bf84-41da-9f86-0a7d2a7b5068"),
                            ColumnId = new Guid("9cc90b5b-04da-4c35-940c-125e8ec2381f"),
                            Value = "Изобретение"
                        },
                        new
                        {
                            Id = new Guid("e67fcb70-ec96-48b2-8352-a3eac33a4b2d"),
                            ColumnId = new Guid("9cc90b5b-04da-4c35-940c-125e8ec2381f"),
                            Value = "Полезная модель"
                        },
                        new
                        {
                            Id = new Guid("991e056b-fb98-4670-9347-f93f820193e9"),
                            ColumnId = new Guid("9cc90b5b-04da-4c35-940c-125e8ec2381f"),
                            Value = "База данных"
                        },
                        new
                        {
                            Id = new Guid("019bded7-5060-4727-8a1b-2dc7e31abc49"),
                            FieldId = new Guid("2d4dd3f7-053f-4de3-9e60-d1f0f4fdbd02"),
                            Value = "Нет"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("68a69f8e-4a1c-4025-aaee-98b9f9d4191b"),
                            EditBlockId = new Guid("1e55ba1b-0dcf-4f02-a532-f369c97a7404"),
                            Name = "Награждение премиями, наградами в области научно-педагогической деятельности городского, всероссийского или международного уровня (в том числе зарубежными), победы в профессиональных конкурсах за весь период научно-педагогической деятельности",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("bbbc1091-405a-489a-b141-5a91137653fe"),
                            EditBlockId = new Guid("1e55ba1b-0dcf-4f02-a532-f369c97a7404"),
                            Name = "Сведения о профессиональном развитии участника конкурса за последние 5 лет (курсы повышения квалификации/ стажировки)",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("6309600a-eb41-4741-87af-0b3c9ca86849"),
                            EditBlockId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            Name = "Учебная нагрузка за предыдущий учебный год (за исключением методической)",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("7cfec383-f404-411f-bfbb-5d814362fe39"),
                            EditBlockId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            Name = "Список подготовленных под руководством участника конкурса студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("47ef4c5e-50cb-4a4d-84b2-562856409ee7"),
                            EditBlockId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            Name = "Сведения о работе, выполняемой участником конкурса в области научно-педагогической деятельности по совместительству (не по основному месту работы) в высшем учебном заведении, академическом институте, отраслевом научно-исследовательском институте, профессиональной образовательной организации, общеобразовательной организации за предыдущий учебный год",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("2face741-ac3d-4866-8a32-fcf8c5897dca"),
                            EditBlockId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            Name = "Монографии, учебники, учебные и учебно-методические пособия с грифами и без грифов УМО, Министерств РФ или государственных академий наук, изданные типографским способом за последние 5 лет",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("eebe339f-e89e-49bc-8bdf-645682993520"),
                            EditBlockId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            Name = "Список лабораторных практикумов и курсов лекций (разработанных самостоятельно участником конкурса) за последние 5 лет",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("b3680832-298c-498b-b7a7-88f667ab9e95"),
                            EditBlockId = new Guid("971c515b-25ad-4d6f-b7d8-e7f1bc84a34c"),
                            Name = "Список разработанных онлайн-курсов на открытых платформах за последние 5 лет",
                            Number = 8
                        },
                        new
                        {
                            Id = new Guid("bc51b00b-c3ba-4440-b180-5cdeed24c4e3"),
                            EditBlockId = new Guid("83161399-1997-4df8-bfe4-cd68d5ca8b8a"),
                            Name = "Список научных публикаций за последние 5 лет",
                            Number = 9
                        },
                        new
                        {
                            Id = new Guid("5de8013b-e3f8-4679-989e-45994f59920c"),
                            EditBlockId = new Guid("83161399-1997-4df8-bfe4-cd68d5ca8b8a"),
                            Name = "Персональные идентификаторы и показатели",
                            Number = 10
                        },
                        new
                        {
                            Id = new Guid("3c911560-0416-45e1-bb68-c928962e5233"),
                            EditBlockId = new Guid("83161399-1997-4df8-bfe4-cd68d5ca8b8a"),
                            Name = "Список выполненных НИР / НИОКР с финансированием в размере от 200 тыс. руб. и выше за последние 5 лет",
                            Number = 11
                        },
                        new
                        {
                            Id = new Guid("927c041c-1329-4f85-89f3-520d4282c2ad"),
                            EditBlockId = new Guid("83161399-1997-4df8-bfe4-cd68d5ca8b8a"),
                            Name = "Список объектов интеллектуальной собственности, созданных участником конкурса за весь период научно-педагогической деятельности (созданных самостоятельно / в соавторстве), официально зарегистрированных в установленном порядке (в России / за рубежом)",
                            Number = 12
                        },
                        new
                        {
                            Id = new Guid("bc0ad19a-5e8f-4164-bcd1-21661b498819"),
                            EditBlockId = new Guid("83161399-1997-4df8-bfe4-cd68d5ca8b8a"),
                            Name = "Перечень разработок, внедренных на предприятиях и организациях реального сектора экономики (в России / за рубежом)",
                            Number = 13
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8b24990-fb90-413d-a59c-b6fcac76ce3a"),
                            Name = "Научно-педагогическая деятельность",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("432c6f0a-bdcd-481f-b262-421ecf7f2b0c"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 2
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dcd3cd6a-8e60-4b50-8081-62e593cd280f"),
                            Name = "User 1",
                            Username = "admin@mail.ru"
                        },
                        new
                        {
                            Id = new Guid("a14e4c85-9ab9-4a3c-9df4-e52d815b966f"),
                            Name = "User 2",
                            Username = "user@mail.ru"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ValueTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5fc472c7-2f3b-4ed5-a94a-0fff0f5b3f10"),
                            Name = "int"
                        },
                        new
                        {
                            Id = new Guid("748e60e5-3731-453e-9bd7-7f96852a34d8"),
                            Name = "string"
                        },
                        new
                        {
                            Id = new Guid("10d3a7f2-1949-4f32-b671-c55ba77a8753"),
                            Name = "bool"
                        },
                        new
                        {
                            Id = new Guid("5c069965-0971-47f4-834b-ef551d76e601"),
                            Name = "DateTime"
                        });
                });

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", null)
                        .WithMany()
                        .HasForeignKey("EditBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", null)
                        .WithMany()
                        .HasForeignKey("FieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Table", null)
                        .WithMany()
                        .HasForeignKey("TablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", null)
                        .WithMany()
                        .HasForeignKey("MarksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Track", "Track")
                        .WithMany("Applications")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.UserInfo", "UserInfo")
                        .WithMany("Applications")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.BlockReviewStatus", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("BlockReviewStatusList")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.MarkBlock", "MarkBlock")
                        .WithMany("ReviewStatusList")
                        .HasForeignKey("MarkBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.UserInfo", "Reviewer")
                        .WithMany("ReviewedBlocks")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("MarkBlock");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("CellVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("CellVals")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Row", "Row")
                        .WithMany("CellVals")
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Column");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Columns")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Columns")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlockStatus", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("EditBlockStatusList")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("EditBlockStatusList")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("EditBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Fields")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Fields")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("FieldVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("FieldVals")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("Marks")
                        .HasForeignKey("FieldId");

                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Marks")
                        .HasForeignKey("TableId");

                    b.Navigation("Field");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("MarkVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", "Mark")
                        .WithMany("MarkVals")
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Mark");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Rows")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.SelectValue", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("SelectValues")
                        .HasForeignKey("ColumnId");

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("SelectValues")
                        .HasForeignKey("FieldId");

                    b.Navigation("Column");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Tables")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Navigation("BlockReviewStatusList");

                    b.Navigation("CellVals");

                    b.Navigation("EditBlockStatusList");

                    b.Navigation("FieldVals");

                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Navigation("CellVals");

                    b.Navigation("SelectValues");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Navigation("EditBlockStatusList");

                    b.Navigation("Fields");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Navigation("FieldVals");

                    b.Navigation("Marks");

                    b.Navigation("SelectValues");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkBlock", b =>
                {
                    b.Navigation("ReviewStatusList");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Navigation("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Marks");

                    b.Navigation("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ReviewedBlocks");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
