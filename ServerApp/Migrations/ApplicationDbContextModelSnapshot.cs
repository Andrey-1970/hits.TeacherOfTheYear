// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp.Data;

#nullable disable

namespace ServerApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.Property<Guid>("EditBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("EditBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("EditBlockTrack");

                    b.HasData(
                        new
                        {
                            EditBlocksId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            TracksId = new Guid("2e920b6e-ae4c-4058-a576-4db305e114ac")
                        },
                        new
                        {
                            EditBlocksId = new Guid("0eab4ab8-36c2-46bd-a80b-fdf71fd043eb"),
                            TracksId = new Guid("2e920b6e-ae4c-4058-a576-4db305e114ac")
                        },
                        new
                        {
                            EditBlocksId = new Guid("604522af-e699-4aeb-bbb4-1425e0c94d10"),
                            TracksId = new Guid("2e920b6e-ae4c-4058-a576-4db305e114ac")
                        },
                        new
                        {
                            EditBlocksId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            TracksId = new Guid("2e920b6e-ae4c-4058-a576-4db305e114ac")
                        },
                        new
                        {
                            EditBlocksId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            TracksId = new Guid("9efc729b-8364-432c-93f4-c91beb2f03b6")
                        },
                        new
                        {
                            EditBlocksId = new Guid("0eab4ab8-36c2-46bd-a80b-fdf71fd043eb"),
                            TracksId = new Guid("9efc729b-8364-432c-93f4-c91beb2f03b6")
                        },
                        new
                        {
                            EditBlocksId = new Guid("604522af-e699-4aeb-bbb4-1425e0c94d10"),
                            TracksId = new Guid("9efc729b-8364-432c-93f4-c91beb2f03b6")
                        },
                        new
                        {
                            EditBlocksId = new Guid("4950b417-c050-44d5-9140-041c817898e5"),
                            TracksId = new Guid("9efc729b-8364-432c-93f4-c91beb2f03b6")
                        });
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.Property<Guid>("FieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.HasKey("FieldsId", "MarkBlocksId");

                    b.HasIndex("MarkBlocksId");

                    b.ToTable("FieldMarkBlock");

                    b.HasData(
                        new
                        {
                            FieldsId = new Guid("2fc220c7-07e5-4aac-97af-54f31d8064df"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("4230dd9c-ed0f-4b43-9f37-ec866346d419"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("1896cf73-5457-4660-baff-095484ab531c"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("61fc7299-c0fb-463c-be37-24f7c630d053"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("cc38cf10-4e12-4f48-a0c2-de97a78c39a4"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("5262b995-ecb2-4b38-aea2-d809d849696b"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("6411a446-c6c4-4d9c-bc2b-30d56c4af808"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("1ce51459-0b59-4372-9858-01f526bf4132"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("e758bd4a-4a13-4e0a-afde-0f4ad5f68d50"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("cc9b31ec-9f25-4d08-aa34-2f4e2137ab9d"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("e9b396fc-0e5e-4bc3-b1fe-cf58372d0ab6"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("d4adc223-06ce-41bf-ac63-c653a953d567"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("71cf8f0b-7391-466e-aadc-7b50f462228f"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("e488f0ca-874b-486e-b1e5-5d665d1231f8"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("6fcf31ac-e486-48e5-8584-9ba2b802b441"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("5ab74dc1-6936-45f3-a7b4-843020fc6f2f"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("cc13aa37-480b-4acb-a907-49523ebe0994"),
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8")
                        },
                        new
                        {
                            FieldsId = new Guid("78354a7f-716d-4a34-8ae0-d78dd1aabb12"),
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5")
                        },
                        new
                        {
                            FieldsId = new Guid("49d5f336-7c4b-4f77-a8de-617417906036"),
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5")
                        },
                        new
                        {
                            FieldsId = new Guid("4bce90d4-8d0a-4119-88aa-ed3a5b7fdbfc"),
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5")
                        },
                        new
                        {
                            FieldsId = new Guid("b8545ba3-42cd-47b1-865d-f07496696835"),
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5")
                        },
                        new
                        {
                            FieldsId = new Guid("4a90b917-2627-424d-ba2a-27fc2d0ee2c8"),
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5")
                        },
                        new
                        {
                            FieldsId = new Guid("6fcf31ac-e486-48e5-8584-9ba2b802b441"),
                            MarkBlocksId = new Guid("0aca1cb3-0557-4ce8-99e2-6ea4968a69cf")
                        },
                        new
                        {
                            FieldsId = new Guid("6fcf31ac-e486-48e5-8584-9ba2b802b441"),
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1")
                        },
                        new
                        {
                            FieldsId = new Guid("cdbe1d33-c8d1-40b0-ba6a-802032b2d3ed"),
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1")
                        },
                        new
                        {
                            FieldsId = new Guid("fb382e06-08a7-44d3-9226-b28edf976929"),
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1")
                        });
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TablesId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TablesId");

                    b.HasIndex("TablesId");

                    b.ToTable("MarkBlockTable");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            TablesId = new Guid("1311c06a-742c-4940-ad38-442571bab727")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            TablesId = new Guid("2ac787c9-21cc-4c0c-88f3-dba44c5086ae")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            TablesId = new Guid("35e3f520-203b-41c2-bbf8-9798017a2704")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            TablesId = new Guid("2b6eee8f-fc62-4206-8369-03a74edfaec4")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6279492f-3623-4b35-9574-783344abc512"),
                            TablesId = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6279492f-3623-4b35-9574-783344abc512"),
                            TablesId = new Guid("ef1a4101-267c-4a37-a4d7-c66c89ef0f2b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0aca1cb3-0557-4ce8-99e2-6ea4968a69cf"),
                            TablesId = new Guid("21a80b73-98cf-4377-b45d-b9aaf1e67562")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0aca1cb3-0557-4ce8-99e2-6ea4968a69cf"),
                            TablesId = new Guid("6ef7ed79-f91e-4358-a2cd-137d76fff4b6")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            TablesId = new Guid("21a80b73-98cf-4377-b45d-b9aaf1e67562")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            TablesId = new Guid("04640600-667d-48e2-a2ac-ba609f601560")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            TablesId = new Guid("7320a045-0eb0-4ded-96e7-b8b24f73469a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            TablesId = new Guid("54f5f19d-30fe-4615-96f2-2a11b53eec3d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("3270d52b-f9e4-46cc-8b1f-1b2025a5c613"),
                            TablesId = new Guid("6ef7ed79-f91e-4358-a2cd-137d76fff4b6")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("3270d52b-f9e4-46cc-8b1f-1b2025a5c613"),
                            TablesId = new Guid("cb6b56f5-6f97-4d75-af62-9ee97d63f169")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("3270d52b-f9e4-46cc-8b1f-1b2025a5c613"),
                            TablesId = new Guid("888c05a4-4fd9-40e0-b374-7adf683ff667")
                        });
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("MarkBlockTrack");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8"),
                            TracksId = new Guid("2e920b6e-ae4c-4058-a576-4db305e114ac")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            TracksId = new Guid("2e920b6e-ae4c-4058-a576-4db305e114ac")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6279492f-3623-4b35-9574-783344abc512"),
                            TracksId = new Guid("2e920b6e-ae4c-4058-a576-4db305e114ac")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0aca1cb3-0557-4ce8-99e2-6ea4968a69cf"),
                            TracksId = new Guid("2e920b6e-ae4c-4058-a576-4db305e114ac")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("69a6a484-4f98-4be3-9c0e-dd619975c266"),
                            TracksId = new Guid("2e920b6e-ae4c-4058-a576-4db305e114ac")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("09d843f5-0829-4d50-a4d1-0b9e44c75047"),
                            TracksId = new Guid("2e920b6e-ae4c-4058-a576-4db305e114ac")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8"),
                            TracksId = new Guid("9efc729b-8364-432c-93f4-c91beb2f03b6")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            TracksId = new Guid("9efc729b-8364-432c-93f4-c91beb2f03b6")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("3270d52b-f9e4-46cc-8b1f-1b2025a5c613"),
                            TracksId = new Guid("9efc729b-8364-432c-93f4-c91beb2f03b6")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("69a6a484-4f98-4be3-9c0e-dd619975c266"),
                            TracksId = new Guid("9efc729b-8364-432c-93f4-c91beb2f03b6")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("09d843f5-0829-4d50-a4d1-0b9e44c75047"),
                            TracksId = new Guid("9efc729b-8364-432c-93f4-c91beb2f03b6")
                        });
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "MarksId");

                    b.HasIndex("MarksId");

                    b.ToTable("MarkMarkBlock");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            MarksId = new Guid("045218a6-3288-4c61-97e6-31028203bad9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            MarksId = new Guid("14ebabf4-0d6a-40f5-8fe9-823f9d0844ab")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            MarksId = new Guid("d8bb2168-8e58-4491-a5bb-413a04ebfd60")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            MarksId = new Guid("1e99c47d-5155-4cf0-968d-0d2f57f972d9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            MarksId = new Guid("2b82dbfb-d54c-437f-a7e6-d949d68f4b12")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            MarksId = new Guid("acfa5e65-f77a-4212-b7f4-5c211359abc5")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            MarksId = new Guid("290d69fd-e634-425f-9b23-00d07471ac6e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6279492f-3623-4b35-9574-783344abc512"),
                            MarksId = new Guid("a99e763c-1d97-44bd-8377-5c56ba40cc72")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6279492f-3623-4b35-9574-783344abc512"),
                            MarksId = new Guid("1286c7f8-f983-42c5-b7c9-62253193b02f")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6279492f-3623-4b35-9574-783344abc512"),
                            MarksId = new Guid("f8422506-468e-47ef-8864-04d5fe11a1f3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6279492f-3623-4b35-9574-783344abc512"),
                            MarksId = new Guid("6a609fa4-06e8-48c6-a871-55c9881030bf")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("6279492f-3623-4b35-9574-783344abc512"),
                            MarksId = new Guid("d675a0de-6227-421f-b4a2-394ae04ea948")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0aca1cb3-0557-4ce8-99e2-6ea4968a69cf"),
                            MarksId = new Guid("dadc9642-a81a-4c24-8f83-0b11d115aef2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0aca1cb3-0557-4ce8-99e2-6ea4968a69cf"),
                            MarksId = new Guid("8fa45e6b-900c-4fac-b6f6-1f838a0a0c7b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("0aca1cb3-0557-4ce8-99e2-6ea4968a69cf"),
                            MarksId = new Guid("7e3f6f65-1189-45df-b19e-fe26ad35d7bb")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            MarksId = new Guid("dadc9642-a81a-4c24-8f83-0b11d115aef2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            MarksId = new Guid("8fa45e6b-900c-4fac-b6f6-1f838a0a0c7b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            MarksId = new Guid("5649a79b-aefc-433b-a556-7f05cba30135")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            MarksId = new Guid("eeeba0f3-00aa-45ea-a150-1479328f25ff")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            MarksId = new Guid("97bfd30d-32e3-4823-b377-2a86ce17f4f9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            MarksId = new Guid("4a2ab4be-8890-4537-9309-1e2644c30577")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            MarksId = new Guid("0480b432-44db-415b-8f72-05fa11655ff1")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            MarksId = new Guid("106a4341-f3cc-462a-ab14-32c943d0d451")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            MarksId = new Guid("ce04c0e8-d038-48fa-9b00-15167139bbf4")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("3270d52b-f9e4-46cc-8b1f-1b2025a5c613"),
                            MarksId = new Guid("7e3f6f65-1189-45df-b19e-fe26ad35d7bb")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("3270d52b-f9e4-46cc-8b1f-1b2025a5c613"),
                            MarksId = new Guid("9a391275-25ef-448e-a99a-125bf10745c2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("3270d52b-f9e4-46cc-8b1f-1b2025a5c613"),
                            MarksId = new Guid("42979eae-b9a0-424e-b47b-6ad73024148c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("3270d52b-f9e4-46cc-8b1f-1b2025a5c613"),
                            MarksId = new Guid("4286641b-bd58-45fb-b449-8e80b55256db")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("3270d52b-f9e4-46cc-8b1f-1b2025a5c613"),
                            MarksId = new Guid("5d3ca024-6ea3-40b7-a1cb-984510615772")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("ApplicationForms");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RowId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("RowId");

                    b.HasIndex("ApplicationId", "RowId", "ColumnId")
                        .IsUnique();

                    b.ToTable("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("TableId", "Name")
                        .IsUnique();

                    b.HasIndex("TableId", "Number")
                        .IsUnique();

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1cebe82b-a626-41a4-8c91-87ad32dc6c50"),
                            Name = "Год",
                            Number = 1,
                            TableId = new Guid("21a80b73-98cf-4377-b45d-b9aaf1e67562"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("e32f8c17-1a20-4678-a5c4-9e6bc0c42f1d"),
                            Name = "Название конкурса",
                            Number = 2,
                            TableId = new Guid("21a80b73-98cf-4377-b45d-b9aaf1e67562"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("c3b42b19-722d-4891-9d5d-e06ce9116172"),
                            Name = "Статус конкурса",
                            Number = 3,
                            TableId = new Guid("21a80b73-98cf-4377-b45d-b9aaf1e67562"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("69785d97-b02d-4fe3-a925-b796b9471b9a"),
                            Name = "Награда",
                            Number = 4,
                            TableId = new Guid("21a80b73-98cf-4377-b45d-b9aaf1e67562"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("62d95f61-c022-4571-b61b-442bd1a1ed50"),
                            Name = "Ссылка",
                            Number = 5,
                            TableId = new Guid("21a80b73-98cf-4377-b45d-b9aaf1e67562"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("db5e99ba-63dd-4d1b-88a6-b51985748950"),
                            Name = "Название документа, реквизиты",
                            Number = 1,
                            TableId = new Guid("6ef7ed79-f91e-4358-a2cd-137d76fff4b6"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("40be165b-4e66-450e-979b-a70a4257ecf4"),
                            Name = "Год получения документа",
                            Number = 2,
                            TableId = new Guid("6ef7ed79-f91e-4358-a2cd-137d76fff4b6"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("cfa91135-3194-45d7-ad2d-b1d1c3d01580"),
                            Name = "Наименование курса",
                            Number = 1,
                            TableId = new Guid("1311c06a-742c-4940-ad38-442571bab727"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("4f53f3ef-d452-480f-af3c-177170a4e160"),
                            Name = "Язык преподавания (русск./англ./др.)",
                            Number = 2,
                            TableId = new Guid("1311c06a-742c-4940-ad38-442571bab727"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("ec3b755d-dd4f-4073-bf65-51d45ab1b025"),
                            Name = "Лекции (час.)",
                            Number = 3,
                            TableId = new Guid("1311c06a-742c-4940-ad38-442571bab727"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("05832893-55c4-4b3f-958c-401da1494da9"),
                            Name = "Практические занятия (час.)",
                            Number = 4,
                            TableId = new Guid("1311c06a-742c-4940-ad38-442571bab727"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("f7a40ebe-580b-423c-9e71-93e1653ddf1e"),
                            Name = "Итого (час.)",
                            Number = 5,
                            TableId = new Guid("1311c06a-742c-4940-ad38-442571bab727"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("69efa923-c855-4a98-b3ea-a2c155e4a38d"),
                            Name = "ФИО",
                            Number = 1,
                            TableId = new Guid("2ac787c9-21cc-4c0c-88f3-dba44c5086ae"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("ffa7c70d-d60e-42da-90bf-2d6b655390fb"),
                            Name = "Название конкурса/премии",
                            Number = 2,
                            TableId = new Guid("2ac787c9-21cc-4c0c-88f3-dba44c5086ae"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("ccc57585-5351-4941-8c0e-8ae4a458790f"),
                            Name = "Год",
                            Number = 3,
                            TableId = new Guid("2ac787c9-21cc-4c0c-88f3-dba44c5086ae"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("b5d1c20f-124d-4782-ae10-3d3ec1f53088"),
                            Name = "Статус конкурса (международный, всероссийский), статус награды (РФ, субъект РФ)",
                            Number = 4,
                            TableId = new Guid("2ac787c9-21cc-4c0c-88f3-dba44c5086ae"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("03994fd4-275b-4480-9906-076372640fa4"),
                            Name = "Награда/премия (медаль, диплом с указанием степени)",
                            Number = 5,
                            TableId = new Guid("2ac787c9-21cc-4c0c-88f3-dba44c5086ae"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("5a6ed502-1090-405c-80f8-788fe63d1bc5"),
                            Name = "Название организации/должность/ставка",
                            Number = 1,
                            TableId = new Guid("35e3f520-203b-41c2-bbf8-9798017a2704"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("bb02bcf6-b7b2-4cb3-9b39-aa1c61fedd51"),
                            Name = "Место нахождения (субъект РФ, зарубежье)",
                            Number = 2,
                            TableId = new Guid("35e3f520-203b-41c2-bbf8-9798017a2704"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("2848fc45-3f26-4697-9286-4ad83df1cb6c"),
                            Name = "Вид деятельности (преподавательская)",
                            Number = 3,
                            TableId = new Guid("35e3f520-203b-41c2-bbf8-9798017a2704"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("d3716aee-b750-4f94-b618-a9af3c31eeb4"),
                            Name = "Количество часов",
                            Number = 4,
                            TableId = new Guid("35e3f520-203b-41c2-bbf8-9798017a2704"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("416b44ac-301d-4520-807c-d23eb36f5f37"),
                            Name = "Вид публикации",
                            Number = 1,
                            TableId = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206"),
                            ValueTypeId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a4dd6ca7-75c7-47be-bcfc-d22930a4ad4a"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("fc61d083-e1d8-416b-8766-09ea64641ef9"),
                            Name = "Соавторы",
                            Number = 3,
                            TableId = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("a20c521a-f306-499e-817d-edbc93fcf4b2"),
                            Name = "Количество печатных листов",
                            Number = 4,
                            TableId = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("32bbbbca-1e76-40a7-8ca7-45f45a7ca9a8"),
                            Name = "Наличие грифа",
                            Number = 5,
                            TableId = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206"),
                            ValueTypeId = new Guid("9fa1bf57-5188-4316-a94d-c7fec45314e8")
                        },
                        new
                        {
                            Id = new Guid("5f4eaac6-50dc-4d30-b29e-6006e939f0b7"),
                            Name = "Издательство, год",
                            Number = 6,
                            TableId = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("318105e6-2328-4bab-bd37-361081bf543b"),
                            Name = "Название дисциплины",
                            Number = 1,
                            TableId = new Guid("ef1a4101-267c-4a37-a4d7-c66c89ef0f2b"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("c678e719-6765-47ef-9ee8-7fcc6da6e313"),
                            Name = "Вид (лекции, лабораторные)",
                            Number = 2,
                            TableId = new Guid("ef1a4101-267c-4a37-a4d7-c66c89ef0f2b"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("4104bde1-0063-467f-85e1-aaf348a0f6d4"),
                            Name = "Название курса",
                            Number = 1,
                            TableId = new Guid("2b6eee8f-fc62-4206-8369-03a74edfaec4"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("54d3f511-778d-4620-87a9-1becac81a5ca"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("2b6eee8f-fc62-4206-8369-03a74edfaec4"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("8ce73638-5c50-411e-9654-b85ae4eb2678"),
                            Name = "Ссылка на платформу",
                            Number = 3,
                            TableId = new Guid("2b6eee8f-fc62-4206-8369-03a74edfaec4"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("81b39e28-ccd4-4106-b902-d9138b910dad"),
                            Name = "Год",
                            Number = 4,
                            TableId = new Guid("2b6eee8f-fc62-4206-8369-03a74edfaec4"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("f4a317ea-394c-42c8-9c81-afd3e674379c"),
                            Name = "Название статьи",
                            Number = 1,
                            TableId = new Guid("04640600-667d-48e2-a2ac-ba609f601560"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("95530dd1-fbd2-4241-92aa-511d022c7d0e"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("04640600-667d-48e2-a2ac-ba609f601560"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("93c36f8d-fb4c-44bd-bb2d-a4d8d2cb4a4d"),
                            Name = "Тип публикации (категория ВАК/квартиль МБД)",
                            Number = 3,
                            TableId = new Guid("04640600-667d-48e2-a2ac-ba609f601560"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("5a19e780-8e57-48d8-849b-2afe796a7ab1"),
                            Name = "Издание, год",
                            Number = 4,
                            TableId = new Guid("04640600-667d-48e2-a2ac-ba609f601560"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("2880da51-2855-4b2b-873b-2fd1b9daa99e"),
                            Name = "Тип идентификатора",
                            Number = 1,
                            TableId = new Guid("7320a045-0eb0-4ded-96e7-b8b24f73469a"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("c4950088-5a51-49b5-b612-7bfb86bf794f"),
                            Name = "Идентификатор",
                            Number = 2,
                            TableId = new Guid("7320a045-0eb0-4ded-96e7-b8b24f73469a"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("48b1384d-906d-42b4-a116-cfe4b1b0050a"),
                            Name = "Количество публикаций в БАЗЕ",
                            Number = 3,
                            TableId = new Guid("7320a045-0eb0-4ded-96e7-b8b24f73469a"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("f7c8920f-c8f0-4c63-9c48-6d970fd55f2b"),
                            Name = "Количество цитирований",
                            Number = 4,
                            TableId = new Guid("7320a045-0eb0-4ded-96e7-b8b24f73469a"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("a44162ef-ae92-40d1-8d33-fef2537c9169"),
                            Name = "Индекс Хирша (за все время)",
                            Number = 5,
                            TableId = new Guid("7320a045-0eb0-4ded-96e7-b8b24f73469a"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("f31ff489-3684-40c9-85b2-e7fbc25c67be"),
                            Name = "Название НИР/НИОКР",
                            Number = 1,
                            TableId = new Guid("54f5f19d-30fe-4615-96f2-2a11b53eec3d"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("64874550-28fa-4e8b-bd7c-a6ae22ac2c19"),
                            Name = "Сумма финансирования (тыс. руб.)",
                            Number = 2,
                            TableId = new Guid("54f5f19d-30fe-4615-96f2-2a11b53eec3d"),
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("424a4bb3-ac14-4ddc-8041-f9cc85293920"),
                            Name = "Период выполнения",
                            Number = 3,
                            TableId = new Guid("54f5f19d-30fe-4615-96f2-2a11b53eec3d"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("c467e0a9-eda2-432c-9e8c-acecc08d047a"),
                            Name = "Статус (руководитель/исполнитель)",
                            Number = 4,
                            TableId = new Guid("54f5f19d-30fe-4615-96f2-2a11b53eec3d"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("b3a76fad-1a4e-464d-b6c6-54a1b0e6c5dc"),
                            Name = "Регистрационный номер карты в системе ЕГИСУ (https://www.rosrid.ru/)",
                            Number = 5,
                            TableId = new Guid("54f5f19d-30fe-4615-96f2-2a11b53eec3d"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("af68b27c-a403-4957-8157-c019749c1d57"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("cb6b56f5-6f97-4d75-af62-9ee97d63f169"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("63ea06f6-bb96-41c5-b900-f93c8ae2206b"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("cb6b56f5-6f97-4d75-af62-9ee97d63f169"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("f5f5fdfb-6c50-467e-9ad0-a52d9b41fc87"),
                            Name = "ФИО соавторов",
                            Number = 3,
                            TableId = new Guid("cb6b56f5-6f97-4d75-af62-9ee97d63f169"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("76523a53-23d2-4d8e-a9cd-f84360cb3010"),
                            Name = "Номер РИД",
                            Number = 4,
                            TableId = new Guid("cb6b56f5-6f97-4d75-af62-9ee97d63f169"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("1e2f15d0-a84f-4609-b0d4-31028f48aaff"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("888c05a4-4fd9-40e0-b374-7adf683ff667"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("4cc0e54d-9f5c-4fd1-8be6-330713963046"),
                            Name = "Название разработки",
                            Number = 2,
                            TableId = new Guid("888c05a4-4fd9-40e0-b374-7adf683ff667"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("ad5a64e7-e901-4b7c-9694-a48bea28d0dd"),
                            Name = "Название организации в которую внедрена разработка",
                            Number = 3,
                            TableId = new Guid("888c05a4-4fd9-40e0-b374-7adf683ff667"),
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("EditBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "Общая информация",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("0eab4ab8-36c2-46bd-a80b-fdf71fd043eb"),
                            Name = "Категория участников",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("604522af-e699-4aeb-bbb4-1425e0c94d10"),
                            Name = "Профессиональное развитие",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Деятельность",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("4950b417-c050-44d5-9140-041c817898e5"),
                            Name = "Деятельность",
                            Number = 5
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Placeholder")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2fc220c7-07e5-4aac-97af-54f31d8064df"),
                            EditBlockId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "ФИО",
                            Number = 1,
                            Placeholder = "Иванов Иван Иванович",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("4230dd9c-ed0f-4b43-9f37-ec866346d419"),
                            EditBlockId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "Дата рождения",
                            Number = 2,
                            Placeholder = "01.01.2000",
                            ValueTypeId = new Guid("cc119393-578d-44f5-94bc-dc2a6266f7a9")
                        },
                        new
                        {
                            Id = new Guid("1896cf73-5457-4660-baff-095484ab531c"),
                            EditBlockId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "Домашний адрес",
                            Number = 3,
                            Placeholder = "Регион, город, улица, дом, квартира",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("61fc7299-c0fb-463c-be37-24f7c630d053"),
                            EditBlockId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "Контактный телефон",
                            Number = 4,
                            Placeholder = "+8 (900)-000-00-00",
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("cc38cf10-4e12-4f48-a0c2-de97a78c39a4"),
                            EditBlockId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "Электронная почта",
                            Number = 5,
                            Placeholder = "user@example.com",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("5262b995-ecb2-4b38-aea2-d809d849696b"),
                            EditBlockId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "Место работы/учебы",
                            Number = 6,
                            Placeholder = "Название организации",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("6411a446-c6c4-4d9c-bc2b-30d56c4af808"),
                            EditBlockId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "Адрес работы/учебы",
                            Number = 7,
                            Placeholder = "Регион, город, улица, дом",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("1ce51459-0b59-4372-9858-01f526bf4132"),
                            EditBlockId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "Институт, факультет, кафедра, лаборатория",
                            Number = 8,
                            Placeholder = "Введите институт, факультет, кафедру, лабораторию",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("e758bd4a-4a13-4e0a-afde-0f4ad5f68d50"),
                            EditBlockId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "Должность",
                            Number = 9,
                            Placeholder = "Введите свою должность в организации",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("cc9b31ec-9f25-4d08-aa34-2f4e2137ab9d"),
                            EditBlockId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "Стаж научно-педагогической деятельности по трудовой книжке",
                            Number = 10,
                            Placeholder = "Введите свой стаж",
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("e9b396fc-0e5e-4bc3-b1fe-cf58372d0ab6"),
                            EditBlockId = new Guid("8cc72552-9d27-4e46-a3f1-1fdc944d6365"),
                            Name = "Дополнительная информация",
                            Number = 11,
                            Placeholder = "Пример",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("d4adc223-06ce-41bf-ac63-c653a953d567"),
                            EditBlockId = new Guid("0eab4ab8-36c2-46bd-a80b-fdf71fd043eb"),
                            Name = "Направление конкурса",
                            Number = 12,
                            Placeholder = "Выберите направление конкурса",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("71cf8f0b-7391-466e-aadc-7b50f462228f"),
                            EditBlockId = new Guid("0eab4ab8-36c2-46bd-a80b-fdf71fd043eb"),
                            Name = "Категория участника конкурса",
                            Number = 13,
                            Placeholder = "Выберите категорию участника конкруса",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("e488f0ca-874b-486e-b1e5-5d665d1231f8"),
                            EditBlockId = new Guid("0eab4ab8-36c2-46bd-a80b-fdf71fd043eb"),
                            Name = "Название конкрусной работы",
                            Number = 14,
                            Placeholder = "Введите название своей конкурсной работы",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("6fcf31ac-e486-48e5-8584-9ba2b802b441"),
                            EditBlockId = new Guid("0eab4ab8-36c2-46bd-a80b-fdf71fd043eb"),
                            Name = "Ученое звание",
                            Number = 15,
                            Placeholder = "Выберите ученое звание",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("5ab74dc1-6936-45f3-a7b4-843020fc6f2f"),
                            EditBlockId = new Guid("0eab4ab8-36c2-46bd-a80b-fdf71fd043eb"),
                            Name = "Ученая степень",
                            Number = 16,
                            Placeholder = "Выберите ученую степень",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("cc13aa37-480b-4acb-a907-49523ebe0994"),
                            EditBlockId = new Guid("0eab4ab8-36c2-46bd-a80b-fdf71fd043eb"),
                            Name = "Научная специальность (по классификации ВАК)",
                            Number = 17,
                            Placeholder = "Введите научную специальность (по классификации ВАК)",
                            ValueTypeId = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965")
                        },
                        new
                        {
                            Id = new Guid("78354a7f-716d-4a34-8ae0-d78dd1aabb12"),
                            EditBlockId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Защитившиеся кадидаты наук",
                            Number = 18,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("49d5f336-7c4b-4f77-a8de-617417906036"),
                            EditBlockId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Защитившиеся доктора наук",
                            Number = 19,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("4bce90d4-8d0a-4119-88aa-ed3a5b7fdbfc"),
                            EditBlockId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Защитившиеся бакалавры",
                            Number = 20,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("b8545ba3-42cd-47b1-865d-f07496696835"),
                            EditBlockId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Защитившиеся специалисты",
                            Number = 21,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("4a90b917-2627-424d-ba2a-27fc2d0ee2c8"),
                            EditBlockId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Защитившиеся магистры",
                            Number = 22,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("cdbe1d33-c8d1-40b0-ba6a-802032b2d3ed"),
                            EditBlockId = new Guid("4950b417-c050-44d5-9140-041c817898e5"),
                            Name = "Защитившиеся кандидаты наук",
                            Number = 23,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        },
                        new
                        {
                            Id = new Guid("fb382e06-08a7-44d3-9226-b28edf976929"),
                            EditBlockId = new Guid("4950b417-c050-44d5-9140-041c817898e5"),
                            Name = "Защитившиеся доктора наук",
                            Number = 24,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("ApplicationId", "FieldId")
                        .IsUnique();

                    b.ToTable("FieldVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("TableId");

                    b.ToTable("Marks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("045218a6-3288-4c61-97e6-31028203bad9"),
                            Name = "Баллы за объем учебной нагрузки:",
                            Number = 1,
                            TableId = new Guid("1311c06a-742c-4940-ad38-442571bab727")
                        },
                        new
                        {
                            Id = new Guid("14ebabf4-0d6a-40f5-8fe9-823f9d0844ab"),
                            Name = "Баллы за количество дисциплин на иностранном языке, которые вел претендент, в предыдущем учебном году:",
                            Number = 2,
                            TableId = new Guid("1311c06a-742c-4940-ad38-442571bab727")
                        },
                        new
                        {
                            Id = new Guid("d8bb2168-8e58-4491-a5bb-413a04ebfd60"),
                            FieldId = new Guid("4a90b917-2627-424d-ba2a-27fc2d0ee2c8"),
                            Name = "Баллы за количество квалификационных работ, выполненных под руководством претендента:",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("1e99c47d-5155-4cf0-968d-0d2f57f972d9"),
                            FieldId = new Guid("78354a7f-716d-4a34-8ae0-d78dd1aabb12"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("2b82dbfb-d54c-437f-a7e6-d949d68f4b12"),
                            FieldId = new Guid("49d5f336-7c4b-4f77-a8de-617417906036"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("acfa5e65-f77a-4212-b7f4-5c211359abc5"),
                            Name = "Баллы за количество подготовленных студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание:",
                            Number = 6,
                            TableId = new Guid("2ac787c9-21cc-4c0c-88f3-dba44c5086ae")
                        },
                        new
                        {
                            Id = new Guid("290d69fd-e634-425f-9b23-00d07471ac6e"),
                            Name = "Баллы за количество онлайн курсов на открытых площадках:",
                            Number = 7,
                            TableId = new Guid("2b6eee8f-fc62-4206-8369-03a74edfaec4")
                        },
                        new
                        {
                            Id = new Guid("a99e763c-1d97-44bd-8377-5c56ba40cc72"),
                            Name = "Баллы за труды с грифом и без соавторства:",
                            Number = 8,
                            TableId = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206")
                        },
                        new
                        {
                            Id = new Guid("1286c7f8-f983-42c5-b7c9-62253193b02f"),
                            Name = "Баллы за труды с грифом в соавторстве:",
                            Number = 9,
                            TableId = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206")
                        },
                        new
                        {
                            Id = new Guid("f8422506-468e-47ef-8864-04d5fe11a1f3"),
                            Name = "Баллы за труды без грифа и без соавторства:",
                            Number = 10,
                            TableId = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206")
                        },
                        new
                        {
                            Id = new Guid("6a609fa4-06e8-48c6-a871-55c9881030bf"),
                            Name = "Баллы за труды без грифа в соавторстве:",
                            Number = 11,
                            TableId = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206")
                        },
                        new
                        {
                            Id = new Guid("d675a0de-6227-421f-b4a2-394ae04ea948"),
                            Name = "Баллы за количество практикумов и курсов лекций:",
                            Number = 12,
                            TableId = new Guid("ef1a4101-267c-4a37-a4d7-c66c89ef0f2b")
                        },
                        new
                        {
                            Id = new Guid("dadc9642-a81a-4c24-8f83-0b11d115aef2"),
                            FieldId = new Guid("6fcf31ac-e486-48e5-8584-9ba2b802b441"),
                            Name = "Баллы за ученое звание:",
                            Number = 13
                        },
                        new
                        {
                            Id = new Guid("8fa45e6b-900c-4fac-b6f6-1f838a0a0c7b"),
                            Name = "Баллы за награды:",
                            Number = 14,
                            TableId = new Guid("21a80b73-98cf-4377-b45d-b9aaf1e67562")
                        },
                        new
                        {
                            Id = new Guid("7e3f6f65-1189-45df-b19e-fe26ad35d7bb"),
                            Name = "Баллы за профессиональное развитие:",
                            Number = 15,
                            TableId = new Guid("6ef7ed79-f91e-4358-a2cd-137d76fff4b6")
                        },
                        new
                        {
                            Id = new Guid("5649a79b-aefc-433b-a556-7f05cba30135"),
                            Name = "Баллы за научные публикации:",
                            Number = 16,
                            TableId = new Guid("04640600-667d-48e2-a2ac-ba609f601560")
                        },
                        new
                        {
                            Id = new Guid("eeeba0f3-00aa-45ea-a150-1479328f25ff"),
                            Name = "Баллы по базе Scopus:",
                            Number = 17,
                            TableId = new Guid("7320a045-0eb0-4ded-96e7-b8b24f73469a")
                        },
                        new
                        {
                            Id = new Guid("97bfd30d-32e3-4823-b377-2a86ce17f4f9"),
                            Name = "Баллы по базе РИНЦ:",
                            Number = 18,
                            TableId = new Guid("7320a045-0eb0-4ded-96e7-b8b24f73469a")
                        },
                        new
                        {
                            Id = new Guid("4a2ab4be-8890-4537-9309-1e2644c30577"),
                            FieldId = new Guid("cdbe1d33-c8d1-40b0-ba6a-802032b2d3ed"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 19
                        },
                        new
                        {
                            Id = new Guid("0480b432-44db-415b-8f72-05fa11655ff1"),
                            FieldId = new Guid("fb382e06-08a7-44d3-9226-b28edf976929"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 20
                        },
                        new
                        {
                            Id = new Guid("106a4341-f3cc-462a-ab14-32c943d0d451"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве руководителя:",
                            Number = 21,
                            TableId = new Guid("54f5f19d-30fe-4615-96f2-2a11b53eec3d")
                        },
                        new
                        {
                            Id = new Guid("ce04c0e8-d038-48fa-9b00-15167139bbf4"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве исполнителя:",
                            Number = 22,
                            TableId = new Guid("54f5f19d-30fe-4615-96f2-2a11b53eec3d")
                        },
                        new
                        {
                            Id = new Guid("9a391275-25ef-448e-a99a-125bf10745c2"),
                            Name = "Баллы за количество объектов интеллектуальной собственности:",
                            Number = 23,
                            TableId = new Guid("cb6b56f5-6f97-4d75-af62-9ee97d63f169")
                        },
                        new
                        {
                            Id = new Guid("42979eae-b9a0-424e-b47b-6ad73024148c"),
                            Name = "Баллы за количество разработок:",
                            Number = 24,
                            TableId = new Guid("888c05a4-4fd9-40e0-b374-7adf683ff667")
                        },
                        new
                        {
                            Id = new Guid("4286641b-bd58-45fb-b449-8e80b55256db"),
                            Name = "Оценка уровня предоставленной работы:",
                            Number = 25
                        },
                        new
                        {
                            Id = new Guid("5d3ca024-6ea3-40b7-a1cb-984510615772"),
                            Name = "Использование в представленной работе инновационных методов (проблемного и проективного обучения, тренинговых форм, модульно-кредитных, модульно-рейтинговых систем обучения и контроля знаний):",
                            Number = 26
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("MarkBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d34979da-e8e4-4626-99c6-ed6b95e9d4e8"),
                            Name = "Основной",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("63f40824-aa16-4568-8b2c-ec9e45638ad5"),
                            Name = "Образовательная деятельность",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("6279492f-3623-4b35-9574-783344abc512"),
                            Name = "Методическая деятельность",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("0aca1cb3-0557-4ce8-99e2-6ea4968a69cf"),
                            Name = "Профессиональные показатели",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("f7399a31-ca0f-45b0-9c3b-3e58fe5f73c1"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("3270d52b-f9e4-46cc-8b1f-1b2025a5c613"),
                            Name = "Инновационная и иная деятельность",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("69a6a484-4f98-4be3-9c0e-dd619975c266"),
                            Name = "Конкурсная работа",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("09d843f5-0829-4d50-a4d1-0b9e44c75047"),
                            Name = "Итог",
                            Number = 8
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarkId");

                    b.HasIndex("ApplicationId", "MarkId")
                        .IsUnique();

                    b.ToTable("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21a80b73-98cf-4377-b45d-b9aaf1e67562"),
                            EditBlockId = new Guid("604522af-e699-4aeb-bbb4-1425e0c94d10"),
                            Name = "Награждение премиями, наградами в области научно-педагогической деятельности городского, всероссийского или международного уровня (в том числе зарубежными), победы в профессиональных конкурсах за весь период научно-педагогической деятельности",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("6ef7ed79-f91e-4358-a2cd-137d76fff4b6"),
                            EditBlockId = new Guid("604522af-e699-4aeb-bbb4-1425e0c94d10"),
                            Name = "Сведения о профессиональном развитии участника конкурса за последние 5 лет (курсы повышения квалификации/ стажировки)",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("1311c06a-742c-4940-ad38-442571bab727"),
                            EditBlockId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Учебная нагрузка за предыдущий учебный год (за исключением методической)",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("2ac787c9-21cc-4c0c-88f3-dba44c5086ae"),
                            EditBlockId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Список подготовленных под руководством участника конкурса студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("35e3f520-203b-41c2-bbf8-9798017a2704"),
                            EditBlockId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Сведения о работе, выполняемой участником конкурса в области научно-педагогической деятельности по совместительству (не по основному месту работы) в высшем учебном заведении, академическом институте, отраслевом научно-исследовательском институте, профессиональной образовательной организации, общеобразовательной организации за предыдущий учебный год",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("722dbf55-9caf-4768-84ea-fcf0a94c0206"),
                            EditBlockId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Монографии, учебники, учебные и учебно-методические пособия с грифами и без грифов УМО, Министерств РФ или государственных академий наук, изданные типографским способом за последние 5 лет",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("ef1a4101-267c-4a37-a4d7-c66c89ef0f2b"),
                            EditBlockId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Список лабораторных практикумов и курсов лекций (разработанных самостоятельно участником конкурса) за последние 5 лет",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("2b6eee8f-fc62-4206-8369-03a74edfaec4"),
                            EditBlockId = new Guid("8a86fa0d-f65a-4450-888a-4ecc04eb4f00"),
                            Name = "Список разработанных онлайн-курсов на открытых платформах за последние 5 лет",
                            Number = 8
                        },
                        new
                        {
                            Id = new Guid("04640600-667d-48e2-a2ac-ba609f601560"),
                            EditBlockId = new Guid("4950b417-c050-44d5-9140-041c817898e5"),
                            Name = "Список научных публикаций за последние 5 лет",
                            Number = 9
                        },
                        new
                        {
                            Id = new Guid("7320a045-0eb0-4ded-96e7-b8b24f73469a"),
                            EditBlockId = new Guid("4950b417-c050-44d5-9140-041c817898e5"),
                            Name = "Персональные идентификаторы и показатели",
                            Number = 10
                        },
                        new
                        {
                            Id = new Guid("54f5f19d-30fe-4615-96f2-2a11b53eec3d"),
                            EditBlockId = new Guid("4950b417-c050-44d5-9140-041c817898e5"),
                            Name = "Список выполненных НИР / НИОКР с финансированием в размере от 200 тыс. руб. и выше за последние 5 лет",
                            Number = 11
                        },
                        new
                        {
                            Id = new Guid("cb6b56f5-6f97-4d75-af62-9ee97d63f169"),
                            EditBlockId = new Guid("4950b417-c050-44d5-9140-041c817898e5"),
                            Name = "Список объектов интеллектуальной собственности, созданных участником конкурса за весь период научно-педагогической деятельности (созданных самостоятельно / в соавторстве), официально зарегистрированных в установленном порядке (в России / за рубежом)",
                            Number = 12
                        },
                        new
                        {
                            Id = new Guid("888c05a4-4fd9-40e0-b374-7adf683ff667"),
                            EditBlockId = new Guid("4950b417-c050-44d5-9140-041c817898e5"),
                            Name = "Перечень разработок, внедренных на предприятиях и организациях реального сектора экономики (в России / за рубежом)",
                            Number = 13
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2e920b6e-ae4c-4058-a576-4db305e114ac"),
                            Name = "Научно-педагогическая деятельность",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("9efc729b-8364-432c-93f4-c91beb2f03b6"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 2
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2b47b8b-336c-42f1-beed-f443b1c96d8d"),
                            Name = "User 1",
                            Username = "admin@mail.ru"
                        },
                        new
                        {
                            Id = new Guid("f76470bf-a8f7-4694-818d-71257330ddcb"),
                            Name = "User 2",
                            Username = "user@mail.ru"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DataTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9e3d09d6-d2df-484c-9c15-7e109f5b2cf4"),
                            Name = "int"
                        },
                        new
                        {
                            Id = new Guid("e8129f56-1ca2-4090-a93a-656e09bea965"),
                            Name = "string"
                        },
                        new
                        {
                            Id = new Guid("9fa1bf57-5188-4316-a94d-c7fec45314e8"),
                            Name = "bool"
                        },
                        new
                        {
                            Id = new Guid("cc119393-578d-44f5-94bc-dc2a6266f7a9"),
                            Name = "DateTime"
                        });
                });

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", null)
                        .WithMany()
                        .HasForeignKey("EditBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", null)
                        .WithMany()
                        .HasForeignKey("FieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Table", null)
                        .WithMany()
                        .HasForeignKey("TablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", null)
                        .WithMany()
                        .HasForeignKey("MarksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Track", "Track")
                        .WithMany("Applications")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.UserInfo", "UserInfo")
                        .WithMany("Applications")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("CellVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("CellVals")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Row", "Row")
                        .WithMany("CellVals")
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Column");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Columns")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Columns")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Fields")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Fields")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("FieldVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("FieldVals")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("Marks")
                        .HasForeignKey("FieldId");

                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Marks")
                        .HasForeignKey("TableId");

                    b.Navigation("Field");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("MarkVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", "Mark")
                        .WithMany("MarkVals")
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Mark");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Rows")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Tables")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Navigation("CellVals");

                    b.Navigation("FieldVals");

                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Navigation("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Navigation("FieldVals");

                    b.Navigation("Marks");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Navigation("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Marks");

                    b.Navigation("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
