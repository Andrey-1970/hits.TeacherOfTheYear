// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp.Data;

#nullable disable

namespace ServerApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.Property<Guid>("EditBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("EditBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("EditBlockTrack");

                    b.HasData(
                        new
                        {
                            EditBlocksId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            TracksId = new Guid("b7097ea6-b019-4ac9-9d9f-5ad58cc3fd82")
                        },
                        new
                        {
                            EditBlocksId = new Guid("668e4a6b-e854-4d76-8d9b-5b5d97f07631"),
                            TracksId = new Guid("b7097ea6-b019-4ac9-9d9f-5ad58cc3fd82")
                        },
                        new
                        {
                            EditBlocksId = new Guid("42ea1cc3-5487-449c-a581-02d8686bd21d"),
                            TracksId = new Guid("b7097ea6-b019-4ac9-9d9f-5ad58cc3fd82")
                        },
                        new
                        {
                            EditBlocksId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            TracksId = new Guid("b7097ea6-b019-4ac9-9d9f-5ad58cc3fd82")
                        },
                        new
                        {
                            EditBlocksId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            TracksId = new Guid("82418de5-d677-49fb-ae2c-78589d32d4f9")
                        },
                        new
                        {
                            EditBlocksId = new Guid("668e4a6b-e854-4d76-8d9b-5b5d97f07631"),
                            TracksId = new Guid("82418de5-d677-49fb-ae2c-78589d32d4f9")
                        },
                        new
                        {
                            EditBlocksId = new Guid("42ea1cc3-5487-449c-a581-02d8686bd21d"),
                            TracksId = new Guid("82418de5-d677-49fb-ae2c-78589d32d4f9")
                        },
                        new
                        {
                            EditBlocksId = new Guid("630d745b-5134-4f21-b165-f9104ecb1f35"),
                            TracksId = new Guid("82418de5-d677-49fb-ae2c-78589d32d4f9")
                        });
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.Property<Guid>("FieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.HasKey("FieldsId", "MarkBlocksId");

                    b.HasIndex("MarkBlocksId");

                    b.ToTable("FieldMarkBlock");

                    b.HasData(
                        new
                        {
                            FieldsId = new Guid("99dc4dc6-6ca6-4051-84b7-22004a74475d"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("562d1be2-164c-4b4f-a5f1-581f88f92abb"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("5564595b-72b1-4f5f-9293-72f22ac7deed"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("526b992c-defb-4b1e-b40e-c091b0be1359"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("4d7ec284-8ccc-4d3a-b24b-ddaf4fe8df3e"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("5e5e9907-ff45-44c0-adc8-4c5de5a1701e"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("25f93e6d-70cc-4f59-881c-3d575438363e"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("d3f653a7-4c3e-465d-ae6a-bc2d8ab719b3"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("7f0348f1-21c1-4cca-be2d-39c48da434d5"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("c09106d7-cbcb-4595-9dae-e1e2644c2f9e"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("3318f041-65b4-4abd-b943-fdd5c03dd2c6"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("a50dcda9-d4e5-4734-9ac0-a50e4058c6b7"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("9529d350-cca8-4de0-aa84-cf555da5da54"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("ba0ce598-fae9-4b2f-b9d3-adfb7cd051d3"),
                            MarkBlocksId = new Guid("bae51a96-b0ca-4c25-b4ab-713dfd3461a8")
                        },
                        new
                        {
                            FieldsId = new Guid("1cf3f58c-a8da-47fe-b839-a57b6d1f6078"),
                            MarkBlocksId = new Guid("bae51a96-b0ca-4c25-b4ab-713dfd3461a8")
                        },
                        new
                        {
                            FieldsId = new Guid("dde7acd9-3a3a-49fd-9b4b-c0a653b57e12"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("41423741-f167-49fb-9bf6-b9de4a310c45"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("33bcc605-c3f0-40e4-a2f3-f99efc069c6b"),
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f")
                        },
                        new
                        {
                            FieldsId = new Guid("059969c5-b52d-4ae3-99a7-b36e2f91bf28"),
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe")
                        },
                        new
                        {
                            FieldsId = new Guid("46af9650-180a-4700-906c-0fbec45ca9b4"),
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe")
                        },
                        new
                        {
                            FieldsId = new Guid("df1d538a-f638-4cad-a199-b9dac76d4f4c"),
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe")
                        },
                        new
                        {
                            FieldsId = new Guid("eadf86b1-513b-488b-b38c-8b5f52d35eb7"),
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe")
                        },
                        new
                        {
                            FieldsId = new Guid("3786a8a6-1233-4ab5-9838-ed588b67d814"),
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe")
                        },
                        new
                        {
                            FieldsId = new Guid("dde7acd9-3a3a-49fd-9b4b-c0a653b57e12"),
                            MarkBlocksId = new Guid("e3064d0e-15dc-4f37-a870-7b9dc7cd9e56")
                        },
                        new
                        {
                            FieldsId = new Guid("dde7acd9-3a3a-49fd-9b4b-c0a653b57e12"),
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f")
                        },
                        new
                        {
                            FieldsId = new Guid("960b2ebf-0a12-47db-b6fc-201d8502174c"),
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f")
                        },
                        new
                        {
                            FieldsId = new Guid("0b7fea8f-231e-49ce-a7a8-263a2efbc1de"),
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f")
                        });
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TablesId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TablesId");

                    b.HasIndex("TablesId");

                    b.ToTable("MarkBlockTable");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            TablesId = new Guid("eaa5e348-ac91-45b3-b200-159a934f5275")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            TablesId = new Guid("63ba0bca-8b82-41c6-b5b8-30ce69443f85")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            TablesId = new Guid("e8c6112d-1ee1-487e-a521-fc02ba80652b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            TablesId = new Guid("c2d6d551-a609-4e01-9643-0537cae9fbb0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("ed4a7a57-bbdf-4a99-a1a4-4e293d2f46a4"),
                            TablesId = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("ed4a7a57-bbdf-4a99-a1a4-4e293d2f46a4"),
                            TablesId = new Guid("f0cd4540-c63f-44e7-b047-c3ac83257200")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("e3064d0e-15dc-4f37-a870-7b9dc7cd9e56"),
                            TablesId = new Guid("db09b619-6f1d-4058-beb2-a301f4de7454")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("e3064d0e-15dc-4f37-a870-7b9dc7cd9e56"),
                            TablesId = new Guid("9afc1ea9-c6fb-4996-a881-e312ead0ee33")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            TablesId = new Guid("db09b619-6f1d-4058-beb2-a301f4de7454")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            TablesId = new Guid("aaa8d818-6f9c-4b16-9a50-18973b8b17f0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            TablesId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            TablesId = new Guid("dd873f32-7f8e-4ea6-9fc4-99467a4a3b9a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("4f700521-29a7-48ce-b570-b6f8f4ba247b"),
                            TablesId = new Guid("9afc1ea9-c6fb-4996-a881-e312ead0ee33")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("4f700521-29a7-48ce-b570-b6f8f4ba247b"),
                            TablesId = new Guid("553ac0db-ab48-4949-bfdb-d0fbe0b85fd3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("4f700521-29a7-48ce-b570-b6f8f4ba247b"),
                            TablesId = new Guid("534f2fdc-dc1c-4e46-b5ea-5cbf00a10e9b")
                        });
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("MarkBlockTrack");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f"),
                            TracksId = new Guid("b7097ea6-b019-4ac9-9d9f-5ad58cc3fd82")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            TracksId = new Guid("b7097ea6-b019-4ac9-9d9f-5ad58cc3fd82")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("ed4a7a57-bbdf-4a99-a1a4-4e293d2f46a4"),
                            TracksId = new Guid("b7097ea6-b019-4ac9-9d9f-5ad58cc3fd82")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("e3064d0e-15dc-4f37-a870-7b9dc7cd9e56"),
                            TracksId = new Guid("b7097ea6-b019-4ac9-9d9f-5ad58cc3fd82")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("bae51a96-b0ca-4c25-b4ab-713dfd3461a8"),
                            TracksId = new Guid("b7097ea6-b019-4ac9-9d9f-5ad58cc3fd82")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f"),
                            TracksId = new Guid("82418de5-d677-49fb-ae2c-78589d32d4f9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            TracksId = new Guid("82418de5-d677-49fb-ae2c-78589d32d4f9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("4f700521-29a7-48ce-b570-b6f8f4ba247b"),
                            TracksId = new Guid("82418de5-d677-49fb-ae2c-78589d32d4f9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("bae51a96-b0ca-4c25-b4ab-713dfd3461a8"),
                            TracksId = new Guid("82418de5-d677-49fb-ae2c-78589d32d4f9")
                        });
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "MarksId");

                    b.HasIndex("MarksId");

                    b.ToTable("MarkMarkBlock");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            MarksId = new Guid("f1c7d042-abfc-442b-a3d3-d4c796492797")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            MarksId = new Guid("b897c450-c565-4d4e-9d89-a87629b9f3a8")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            MarksId = new Guid("763130d8-f0f6-4986-abbb-99457fa4af2a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            MarksId = new Guid("41809e75-9e8d-4629-8d6b-a4a3a5a0e19c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            MarksId = new Guid("c40e98f0-3885-4aa5-ba04-cee82c91b79a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            MarksId = new Guid("34a5f1fa-1859-4287-922e-179b40cee4ce")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            MarksId = new Guid("6e1ce4fb-a8c7-4f05-9b65-2f6f39f5cf21")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("ed4a7a57-bbdf-4a99-a1a4-4e293d2f46a4"),
                            MarksId = new Guid("1b3648a1-625e-4a6b-b88d-79065380e07d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("ed4a7a57-bbdf-4a99-a1a4-4e293d2f46a4"),
                            MarksId = new Guid("b18c5554-abe6-44e6-b3e7-7058283a2b4c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("ed4a7a57-bbdf-4a99-a1a4-4e293d2f46a4"),
                            MarksId = new Guid("5ac16067-ca9d-49f9-9999-15625c2b720d")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("ed4a7a57-bbdf-4a99-a1a4-4e293d2f46a4"),
                            MarksId = new Guid("49789682-e2f0-4049-9188-167f0143250c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("ed4a7a57-bbdf-4a99-a1a4-4e293d2f46a4"),
                            MarksId = new Guid("ef2ecb03-19a7-42a4-975d-152affb69028")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("e3064d0e-15dc-4f37-a870-7b9dc7cd9e56"),
                            MarksId = new Guid("990e7453-f5a1-470a-998e-ec960a7db2e7")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("e3064d0e-15dc-4f37-a870-7b9dc7cd9e56"),
                            MarksId = new Guid("2bbf8971-c205-4a7f-8a88-8ccfa5f4f581")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("e3064d0e-15dc-4f37-a870-7b9dc7cd9e56"),
                            MarksId = new Guid("b0042889-c9a8-4509-9afd-b35647fdd907")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            MarksId = new Guid("990e7453-f5a1-470a-998e-ec960a7db2e7")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            MarksId = new Guid("2bbf8971-c205-4a7f-8a88-8ccfa5f4f581")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            MarksId = new Guid("367000e4-2bc6-425f-a78a-056f1537dc7c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            MarksId = new Guid("4005ae02-9121-416f-baa3-3674c19fe89e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            MarksId = new Guid("42751ccd-1df8-43b6-9a92-361e3b86a93a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            MarksId = new Guid("55d19766-9924-46bb-ac91-da66554a2eba")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            MarksId = new Guid("507f8cc7-9c24-4086-b8a5-ad6e17978b68")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            MarksId = new Guid("e93f6f73-d5a6-4a50-9761-26d1fe7d5016")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            MarksId = new Guid("2f823461-2828-4f9f-89ee-09e1cf162e9b")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("4f700521-29a7-48ce-b570-b6f8f4ba247b"),
                            MarksId = new Guid("b0042889-c9a8-4509-9afd-b35647fdd907")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("4f700521-29a7-48ce-b570-b6f8f4ba247b"),
                            MarksId = new Guid("123b73e2-3734-434b-b370-c940143c5630")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("4f700521-29a7-48ce-b570-b6f8f4ba247b"),
                            MarksId = new Guid("6b5c71fd-14df-413f-8bfd-b1d96e9d9442")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("bae51a96-b0ca-4c25-b4ab-713dfd3461a8"),
                            MarksId = new Guid("9c34caf0-b7d6-4064-8ef0-22fb609a3db5")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("bae51a96-b0ca-4c25-b4ab-713dfd3461a8"),
                            MarksId = new Guid("c5072d86-82dd-4c2c-b8a5-b790c1cb49c1")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationStatusId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ReviewerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationStatusId");

                    b.HasIndex("ReviewerId");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("ApplicationForms");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Status")
                        .IsUnique();

                    b.ToTable("ApplicationStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b84821c5-1212-4dfc-9972-7fa1e5fc2146"),
                            Number = 1,
                            Status = "В ожидании заполнения"
                        },
                        new
                        {
                            Id = new Guid("3a591baa-bf7c-48dc-a616-d0e7ae4ee88e"),
                            Number = 2,
                            Status = "В ожидании оценки"
                        },
                        new
                        {
                            Id = new Guid("ac2f6771-1db9-48b1-a702-f9206326f51a"),
                            Number = 3,
                            Status = "В процессе оценки"
                        },
                        new
                        {
                            Id = new Guid("5b38c570-f989-403e-80d8-5a72ec51d305"),
                            Number = 4,
                            Status = "Одобрена"
                        },
                        new
                        {
                            Id = new Guid("930e36d3-d5e5-4cd0-841a-1835490a41b3"),
                            Number = 5,
                            Status = "Отклонена"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.BlockReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Commentary")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkBlockId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("MarkBlockId");

                    b.ToTable("BlockReviews");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disable")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPrefilled")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RowId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("RowId");

                    b.HasIndex("ApplicationId", "RowId", "ColumnId")
                        .IsUnique();

                    b.ToTable("CellVals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdf0f372-2709-43ba-a21a-198327960ccb"),
                            ColumnId = new Guid("7fa1de20-9794-4d76-b204-85143dc4b91f"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("51279d19-b2b4-4b7a-9374-2473a3ac3938"),
                            Value = "ScopusID"
                        },
                        new
                        {
                            Id = new Guid("71dcf9d8-d5c3-4b78-b2fa-0925bccd1ea0"),
                            ColumnId = new Guid("8357ae79-c03e-48ab-8e0f-ada6323577f7"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("51279d19-b2b4-4b7a-9374-2473a3ac3938")
                        },
                        new
                        {
                            Id = new Guid("0bfea39b-8c99-4de9-b465-72423690cd14"),
                            ColumnId = new Guid("e05e0e2b-4ec5-47e1-9bfe-4e0a4666da58"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("51279d19-b2b4-4b7a-9374-2473a3ac3938")
                        },
                        new
                        {
                            Id = new Guid("ca17313a-b6fa-4dab-af82-83330413409d"),
                            ColumnId = new Guid("3199fba0-af14-47aa-917a-5b0bb663e014"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("51279d19-b2b4-4b7a-9374-2473a3ac3938")
                        },
                        new
                        {
                            Id = new Guid("a6e65dca-5b8a-4d7a-90d5-73e574494f9f"),
                            ColumnId = new Guid("c32c6b6e-9808-4549-9421-f2cca85364e0"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("51279d19-b2b4-4b7a-9374-2473a3ac3938")
                        },
                        new
                        {
                            Id = new Guid("e95b698d-3ebd-4b72-89a0-5e478b0af582"),
                            ColumnId = new Guid("7fa1de20-9794-4d76-b204-85143dc4b91f"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("80b6f6e9-e2e1-4e16-944e-45d2aae5fac3"),
                            Value = "ORCiD"
                        },
                        new
                        {
                            Id = new Guid("d7412333-7809-4a01-82a9-7bc0cafd104f"),
                            ColumnId = new Guid("8357ae79-c03e-48ab-8e0f-ada6323577f7"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("80b6f6e9-e2e1-4e16-944e-45d2aae5fac3")
                        },
                        new
                        {
                            Id = new Guid("fab88969-abca-4ef5-a63d-bfd31653a099"),
                            ColumnId = new Guid("e05e0e2b-4ec5-47e1-9bfe-4e0a4666da58"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("80b6f6e9-e2e1-4e16-944e-45d2aae5fac3")
                        },
                        new
                        {
                            Id = new Guid("4eab2ae5-d727-40c3-90f8-17208c0cbc5c"),
                            ColumnId = new Guid("3199fba0-af14-47aa-917a-5b0bb663e014"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("80b6f6e9-e2e1-4e16-944e-45d2aae5fac3")
                        },
                        new
                        {
                            Id = new Guid("bc7796df-123c-4524-a658-f0e9687aaaee"),
                            ColumnId = new Guid("c32c6b6e-9808-4549-9421-f2cca85364e0"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("80b6f6e9-e2e1-4e16-944e-45d2aae5fac3")
                        },
                        new
                        {
                            Id = new Guid("c5d6ed1c-b739-4e46-b830-e398617b3204"),
                            ColumnId = new Guid("7fa1de20-9794-4d76-b204-85143dc4b91f"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("8421876f-de74-4782-bffb-cb4e62a4d2f4"),
                            Value = "ResearcherID"
                        },
                        new
                        {
                            Id = new Guid("d8bdc2aa-73ae-4cd6-a9c1-4a34dddeb9b7"),
                            ColumnId = new Guid("8357ae79-c03e-48ab-8e0f-ada6323577f7"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("8421876f-de74-4782-bffb-cb4e62a4d2f4")
                        },
                        new
                        {
                            Id = new Guid("65a99b7e-a581-4f8a-b53a-712a34b19467"),
                            ColumnId = new Guid("e05e0e2b-4ec5-47e1-9bfe-4e0a4666da58"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("8421876f-de74-4782-bffb-cb4e62a4d2f4")
                        },
                        new
                        {
                            Id = new Guid("7e11bae9-04fb-4de8-9747-a42e665db61f"),
                            ColumnId = new Guid("3199fba0-af14-47aa-917a-5b0bb663e014"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("8421876f-de74-4782-bffb-cb4e62a4d2f4")
                        },
                        new
                        {
                            Id = new Guid("96c33cea-19dd-415a-8c77-b41516365702"),
                            ColumnId = new Guid("c32c6b6e-9808-4549-9421-f2cca85364e0"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("8421876f-de74-4782-bffb-cb4e62a4d2f4")
                        },
                        new
                        {
                            Id = new Guid("6118dbbe-e3d6-43b0-8a18-3a96e66e4a6d"),
                            ColumnId = new Guid("7fa1de20-9794-4d76-b204-85143dc4b91f"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("2cf3a6e4-cecb-43f9-a32c-a1384c6904a4"),
                            Value = "РИНЦ AuthorID"
                        },
                        new
                        {
                            Id = new Guid("e70c2df9-7c5c-4bf4-b6f4-fc4fab5a2e57"),
                            ColumnId = new Guid("8357ae79-c03e-48ab-8e0f-ada6323577f7"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("2cf3a6e4-cecb-43f9-a32c-a1384c6904a4")
                        },
                        new
                        {
                            Id = new Guid("46e819af-5d75-495f-bea7-439cd0ef3079"),
                            ColumnId = new Guid("e05e0e2b-4ec5-47e1-9bfe-4e0a4666da58"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("2cf3a6e4-cecb-43f9-a32c-a1384c6904a4")
                        },
                        new
                        {
                            Id = new Guid("075c557d-bb1d-4632-86ed-561c41171886"),
                            ColumnId = new Guid("3199fba0-af14-47aa-917a-5b0bb663e014"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("2cf3a6e4-cecb-43f9-a32c-a1384c6904a4")
                        },
                        new
                        {
                            Id = new Guid("c85d3f8b-e1e3-4b3e-8aa3-4c1a01bef503"),
                            ColumnId = new Guid("c32c6b6e-9808-4549-9421-f2cca85364e0"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("2cf3a6e4-cecb-43f9-a32c-a1384c6904a4")
                        },
                        new
                        {
                            Id = new Guid("99446bc0-c338-4cca-84e1-26da9bffe06c"),
                            ColumnId = new Guid("7fa1de20-9794-4d76-b204-85143dc4b91f"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("bc287c35-4f11-4794-b678-7232ec4a51e5"),
                            Value = "Google Scholar ID"
                        },
                        new
                        {
                            Id = new Guid("8b74c911-c832-45d0-acf3-c01edc38e5f4"),
                            ColumnId = new Guid("8357ae79-c03e-48ab-8e0f-ada6323577f7"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("bc287c35-4f11-4794-b678-7232ec4a51e5")
                        },
                        new
                        {
                            Id = new Guid("ca85ebba-6d76-4c89-9240-55f31aa8410a"),
                            ColumnId = new Guid("e05e0e2b-4ec5-47e1-9bfe-4e0a4666da58"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("bc287c35-4f11-4794-b678-7232ec4a51e5")
                        },
                        new
                        {
                            Id = new Guid("bd8c8955-8f13-4823-b4cf-7b48264e0570"),
                            ColumnId = new Guid("3199fba0-af14-47aa-917a-5b0bb663e014"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("bc287c35-4f11-4794-b678-7232ec4a51e5")
                        },
                        new
                        {
                            Id = new Guid("92122bb5-d2cd-48e2-a9d3-429c0d6caebe"),
                            ColumnId = new Guid("c32c6b6e-9808-4549-9421-f2cca85364e0"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("bc287c35-4f11-4794-b678-7232ec4a51e5")
                        },
                        new
                        {
                            Id = new Guid("6b41257b-598e-4c5b-9988-3b941a6b6519"),
                            ColumnId = new Guid("7fa1de20-9794-4d76-b204-85143dc4b91f"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("daeffb8c-2597-421a-8176-5d64da4f3aa6"),
                            Value = "Количество монографий/глав в монографии"
                        },
                        new
                        {
                            Id = new Guid("3284ae7b-bb5e-4b40-996f-0ae9fa59f0a7"),
                            ColumnId = new Guid("8357ae79-c03e-48ab-8e0f-ada6323577f7"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("daeffb8c-2597-421a-8176-5d64da4f3aa6")
                        },
                        new
                        {
                            Id = new Guid("3af739a9-293e-4788-b8fc-267fd6c46c13"),
                            ColumnId = new Guid("e05e0e2b-4ec5-47e1-9bfe-4e0a4666da58"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("daeffb8c-2597-421a-8176-5d64da4f3aa6")
                        },
                        new
                        {
                            Id = new Guid("2d8b77d7-ba6e-4cee-b913-b5bf30733456"),
                            ColumnId = new Guid("3199fba0-af14-47aa-917a-5b0bb663e014"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("daeffb8c-2597-421a-8176-5d64da4f3aa6")
                        },
                        new
                        {
                            Id = new Guid("643dc63f-805f-49da-85f0-2b198b782923"),
                            ColumnId = new Guid("c32c6b6e-9808-4549-9421-f2cca85364e0"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("daeffb8c-2597-421a-8176-5d64da4f3aa6")
                        },
                        new
                        {
                            Id = new Guid("5c466a60-ac6f-4e16-b9b3-655bc14534fa"),
                            ColumnId = new Guid("7fa1de20-9794-4d76-b204-85143dc4b91f"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("d1422f09-b7fc-4329-b6a9-cbad93349181"),
                            Value = "Количество патентов"
                        },
                        new
                        {
                            Id = new Guid("37f228f4-c93b-4ee7-a0c2-10b98dd929d4"),
                            ColumnId = new Guid("8357ae79-c03e-48ab-8e0f-ada6323577f7"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("d1422f09-b7fc-4329-b6a9-cbad93349181")
                        },
                        new
                        {
                            Id = new Guid("3513ab90-a21d-4f5f-92db-e9f37eac3e45"),
                            ColumnId = new Guid("e05e0e2b-4ec5-47e1-9bfe-4e0a4666da58"),
                            Disable = false,
                            IsPrefilled = true,
                            RowId = new Guid("d1422f09-b7fc-4329-b6a9-cbad93349181")
                        },
                        new
                        {
                            Id = new Guid("1a7e0c69-a640-47f6-82f5-29f716ff01a8"),
                            ColumnId = new Guid("3199fba0-af14-47aa-917a-5b0bb663e014"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("d1422f09-b7fc-4329-b6a9-cbad93349181")
                        },
                        new
                        {
                            Id = new Guid("1269b488-e356-4c35-b16a-62577865b606"),
                            ColumnId = new Guid("c32c6b6e-9808-4549-9421-f2cca85364e0"),
                            Disable = true,
                            IsPrefilled = true,
                            RowId = new Guid("d1422f09-b7fc-4329-b6a9-cbad93349181")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("TableId", "Name")
                        .IsUnique();

                    b.HasIndex("TableId", "Number")
                        .IsUnique();

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56485420-386d-47ff-9c8e-dff8eecb405b"),
                            Name = "Год",
                            Number = 1,
                            TableId = new Guid("db09b619-6f1d-4058-beb2-a301f4de7454"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("defa6d9c-20a1-4b2d-978f-71af59c5fcea"),
                            Name = "Название конкурса",
                            Number = 2,
                            TableId = new Guid("db09b619-6f1d-4058-beb2-a301f4de7454"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("bfd0158e-5b43-436d-bcfb-f5196cae1541"),
                            Name = "Статус конкурса",
                            Number = 3,
                            TableId = new Guid("db09b619-6f1d-4058-beb2-a301f4de7454"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("edba89e7-b542-4c77-ae3f-7cbe9623f2e0"),
                            Name = "Награда",
                            Number = 4,
                            TableId = new Guid("db09b619-6f1d-4058-beb2-a301f4de7454"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("a3198669-5bf4-4166-b1b7-675a101d733d"),
                            Name = "Ссылка",
                            Number = 5,
                            TableId = new Guid("db09b619-6f1d-4058-beb2-a301f4de7454"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("18762e36-e566-4021-adf0-12c4c6203832"),
                            Name = "Название документа, реквизиты",
                            Number = 1,
                            TableId = new Guid("9afc1ea9-c6fb-4996-a881-e312ead0ee33"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("c6e4b611-6316-4b93-b2e6-1d1fe8fe36ca"),
                            Name = "Год получения документа",
                            Number = 2,
                            TableId = new Guid("9afc1ea9-c6fb-4996-a881-e312ead0ee33"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("48b7309a-8c8e-4d87-bda6-e43b65568087"),
                            Name = "Наименование курса",
                            Number = 1,
                            TableId = new Guid("eaa5e348-ac91-45b3-b200-159a934f5275"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("8e339006-52cc-4238-b79d-4de5c4307247"),
                            Name = "Язык преподавания (русск./англ./др.)",
                            Number = 2,
                            TableId = new Guid("eaa5e348-ac91-45b3-b200-159a934f5275"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("c567c191-c0a8-4eef-a013-d0bcf894fb78"),
                            Name = "Лекции (час.)",
                            Number = 3,
                            TableId = new Guid("eaa5e348-ac91-45b3-b200-159a934f5275"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("144d299c-6166-4ee1-8e92-3b176f55e39f"),
                            Name = "Практические занятия (час.)",
                            Number = 4,
                            TableId = new Guid("eaa5e348-ac91-45b3-b200-159a934f5275"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("ab6b60ab-bb5b-40d8-98b0-c570db0d1fff"),
                            Name = "Итого (час.)",
                            Number = 5,
                            TableId = new Guid("eaa5e348-ac91-45b3-b200-159a934f5275"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("fbdd7c79-832a-4a69-b0b2-53717de83d3f"),
                            Name = "ФИО",
                            Number = 1,
                            TableId = new Guid("63ba0bca-8b82-41c6-b5b8-30ce69443f85"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("4c7b8fa8-7bef-4e16-8515-ac0f67b8a0d6"),
                            Name = "Название конкурса/премии",
                            Number = 2,
                            TableId = new Guid("63ba0bca-8b82-41c6-b5b8-30ce69443f85"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("80d32880-9592-4dc0-a691-9a2419ae52cf"),
                            Name = "Год",
                            Number = 3,
                            TableId = new Guid("63ba0bca-8b82-41c6-b5b8-30ce69443f85"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("d5f58714-7caf-403b-b2c6-362b950ac1ed"),
                            Name = "Статус конкурса (международный, всероссийский), статус награды (РФ, субъект РФ)",
                            Number = 4,
                            TableId = new Guid("63ba0bca-8b82-41c6-b5b8-30ce69443f85"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("b6684ad6-acd5-46f1-9440-614b103afae7"),
                            Name = "Награда/премия (медаль, диплом с указанием степени)",
                            Number = 5,
                            TableId = new Guid("63ba0bca-8b82-41c6-b5b8-30ce69443f85"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("e0222f22-4077-4037-9ead-b38e0ae54fb6"),
                            Name = "Название организации/должность/ставка",
                            Number = 1,
                            TableId = new Guid("e8c6112d-1ee1-487e-a521-fc02ba80652b"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("d9905af7-e9fa-4286-bb33-0a9a507dc271"),
                            Name = "Место нахождения (субъект РФ, зарубежье)",
                            Number = 2,
                            TableId = new Guid("e8c6112d-1ee1-487e-a521-fc02ba80652b"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("a81bd027-8fb1-4515-94ee-dd3d4c7e8aa3"),
                            Name = "Вид деятельности (преподавательская)",
                            Number = 3,
                            TableId = new Guid("e8c6112d-1ee1-487e-a521-fc02ba80652b"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("64b3ee80-558a-4588-bd20-d4ab9785261b"),
                            Name = "Количество часов",
                            Number = 4,
                            TableId = new Guid("e8c6112d-1ee1-487e-a521-fc02ba80652b"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("b0048747-bd8b-4447-b9d1-80e897c2d70d"),
                            Name = "Вид публикации",
                            Number = 1,
                            TableId = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("06d72dd5-8641-4e47-933e-ba866a5e41a7"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("fca99d73-658f-48e3-a465-9d8682bc4369"),
                            Name = "Соавторы",
                            Number = 3,
                            TableId = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("47220430-761e-4779-bbad-db459473a636"),
                            Name = "Количество печатных листов",
                            Number = 4,
                            TableId = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("70824dbb-873f-4852-b601-f3e294f0b59a"),
                            Name = "Наличие грифа",
                            Number = 5,
                            TableId = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830"),
                            ValueTypeId = new Guid("72f99d71-26be-4e7d-890e-f01d1752b7a9")
                        },
                        new
                        {
                            Id = new Guid("a6eb0719-7395-43ff-8c41-fdb0ea442477"),
                            Name = "Издательство, год",
                            Number = 6,
                            TableId = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("b7c72555-5a5d-4690-b10c-c2530141bff3"),
                            Name = "Название дисциплины",
                            Number = 1,
                            TableId = new Guid("f0cd4540-c63f-44e7-b047-c3ac83257200"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("80d1947b-9d2d-4d22-8064-c7e572c0d6a2"),
                            Name = "Вид (лекции, лабораторные)",
                            Number = 2,
                            TableId = new Guid("f0cd4540-c63f-44e7-b047-c3ac83257200"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("51066f07-2254-4afa-b9cd-5c774f56d4aa"),
                            Name = "Название курса",
                            Number = 1,
                            TableId = new Guid("c2d6d551-a609-4e01-9643-0537cae9fbb0"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("5ad1ea37-079f-431b-a2f8-96ab7e12b468"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("c2d6d551-a609-4e01-9643-0537cae9fbb0"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("ab9606e8-c027-4efc-9fc6-e2185e0abfdf"),
                            Name = "Ссылка на платформу",
                            Number = 3,
                            TableId = new Guid("c2d6d551-a609-4e01-9643-0537cae9fbb0"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("4d2b4ca2-b762-47a6-a33a-b73bb9641d9a"),
                            Name = "Год",
                            Number = 4,
                            TableId = new Guid("c2d6d551-a609-4e01-9643-0537cae9fbb0"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("c6c11c76-822e-40c1-91b1-d97bdde7df43"),
                            Name = "Название статьи",
                            Number = 1,
                            TableId = new Guid("aaa8d818-6f9c-4b16-9a50-18973b8b17f0"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("27910caf-f260-4650-9f8a-24aa51adc410"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("aaa8d818-6f9c-4b16-9a50-18973b8b17f0"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("f438b26d-8a32-4bfa-b666-b0f931f55980"),
                            Name = "Тип публикации (категория ВАК/квартиль МБД)",
                            Number = 3,
                            TableId = new Guid("aaa8d818-6f9c-4b16-9a50-18973b8b17f0"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("b8a3a3cb-1af1-480b-8347-2638bd6ade53"),
                            Name = "Издание, год",
                            Number = 4,
                            TableId = new Guid("aaa8d818-6f9c-4b16-9a50-18973b8b17f0"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("7fa1de20-9794-4d76-b204-85143dc4b91f"),
                            Name = "Тип идентификатора",
                            Number = 1,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("8357ae79-c03e-48ab-8e0f-ada6323577f7"),
                            Name = "Идентификатор",
                            Number = 2,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("e05e0e2b-4ec5-47e1-9bfe-4e0a4666da58"),
                            Name = "Количество публикаций в БАЗЕ",
                            Number = 3,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("3199fba0-af14-47aa-917a-5b0bb663e014"),
                            Name = "Количество цитирований",
                            Number = 4,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("c32c6b6e-9808-4549-9421-f2cca85364e0"),
                            Name = "Индекс Хирша (за все время)",
                            Number = 5,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("8b701905-8b62-43b4-a1e2-6dcee97cf757"),
                            Name = "Название НИР/НИОКР",
                            Number = 1,
                            TableId = new Guid("dd873f32-7f8e-4ea6-9fc4-99467a4a3b9a"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("519bff2b-7a44-4be0-96f4-57344239fa51"),
                            Name = "Сумма финансирования (тыс. руб.)",
                            Number = 2,
                            TableId = new Guid("dd873f32-7f8e-4ea6-9fc4-99467a4a3b9a"),
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("86bcf3c2-c48a-4da2-b22a-30bed20d6c85"),
                            Name = "Период выполнения",
                            Number = 3,
                            TableId = new Guid("dd873f32-7f8e-4ea6-9fc4-99467a4a3b9a"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("42b21cb3-5b7f-4e91-b2a5-5f1243c9dc4f"),
                            Name = "Статус (руководитель/исполнитель)",
                            Number = 4,
                            TableId = new Guid("dd873f32-7f8e-4ea6-9fc4-99467a4a3b9a"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("b08ca137-3b67-40d9-bd9e-04928311d9ff"),
                            Name = "Регистрационный номер карты в системе ЕГИСУ (https://www.rosrid.ru/)",
                            Number = 5,
                            TableId = new Guid("dd873f32-7f8e-4ea6-9fc4-99467a4a3b9a"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("3732ea42-6e19-43c1-8352-f7eb25724862"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("553ac0db-ab48-4949-bfdb-d0fbe0b85fd3"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("73653228-8f38-4c0e-a1c4-e583ca59061d"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("553ac0db-ab48-4949-bfdb-d0fbe0b85fd3"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("5404211c-7fe8-4c55-8d70-2f0d27874c36"),
                            Name = "ФИО соавторов",
                            Number = 3,
                            TableId = new Guid("553ac0db-ab48-4949-bfdb-d0fbe0b85fd3"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("2a2ed41c-1c24-4ed2-9ef8-83bf2b4a1a7b"),
                            Name = "Номер РИД",
                            Number = 4,
                            TableId = new Guid("553ac0db-ab48-4949-bfdb-d0fbe0b85fd3"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("0e1c6ba5-1cd4-49c1-abfe-16809dbdc566"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("534f2fdc-dc1c-4e46-b5ea-5cbf00a10e9b"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("0acb61af-4a8f-4f57-8cfb-f404f4fcbe74"),
                            Name = "Название разработки",
                            Number = 2,
                            TableId = new Guid("534f2fdc-dc1c-4e46-b5ea-5cbf00a10e9b"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("beb91fbd-7ded-4b75-a322-e8ee13a18362"),
                            Name = "Название организации в которую внедрена разработка",
                            Number = 3,
                            TableId = new Guid("534f2fdc-dc1c-4e46-b5ea-5cbf00a10e9b"),
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("EditBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "Общая информация",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("668e4a6b-e854-4d76-8d9b-5b5d97f07631"),
                            Name = "Категория участников",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("42ea1cc3-5487-449c-a581-02d8686bd21d"),
                            Name = "Профессиональное развитие",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            Name = "Деятельность",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("630d745b-5134-4f21-b165-f9104ecb1f35"),
                            Name = "Деятельность",
                            Number = 5
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlockStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("EditBlockId");

                    b.ToTable("EditBlockStatuses");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditGroup")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Placeholder")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Required")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99dc4dc6-6ca6-4051-84b7-22004a74475d"),
                            EditBlockId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "ФИО",
                            Number = 1,
                            Placeholder = "Иванов Иван Иванович",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("562d1be2-164c-4b4f-a5f1-581f88f92abb"),
                            EditBlockId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "Дата рождения",
                            Number = 2,
                            Placeholder = "01.01.2000",
                            Required = true,
                            ValueTypeId = new Guid("a678240f-d1b4-4906-9b83-5bec2b5b3ea7")
                        },
                        new
                        {
                            Id = new Guid("5564595b-72b1-4f5f-9293-72f22ac7deed"),
                            EditBlockId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "Домашний адрес",
                            Number = 3,
                            Placeholder = "Регион, город, улица, дом, квартира",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("526b992c-defb-4b1e-b40e-c091b0be1359"),
                            EditBlockId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "Контактный телефон",
                            Number = 4,
                            Placeholder = "+8 (900)-000-00-00",
                            Required = true,
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("4d7ec284-8ccc-4d3a-b24b-ddaf4fe8df3e"),
                            EditBlockId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "Электронная почта",
                            Number = 5,
                            Placeholder = "user@example.com",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("5e5e9907-ff45-44c0-adc8-4c5de5a1701e"),
                            EditBlockId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "Место работы/учебы",
                            Number = 6,
                            Placeholder = "Название организации",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("25f93e6d-70cc-4f59-881c-3d575438363e"),
                            EditBlockId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "Адрес работы/учебы",
                            Number = 7,
                            Placeholder = "Регион, город, улица, дом",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("d3f653a7-4c3e-465d-ae6a-bc2d8ab719b3"),
                            EditBlockId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "Институт, факультет, кафедра, лаборатория",
                            Number = 8,
                            Placeholder = "Введите институт, факультет, кафедру, лабораторию",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("7f0348f1-21c1-4cca-be2d-39c48da434d5"),
                            EditBlockId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "Должность",
                            Number = 9,
                            Placeholder = "Введите свою должность в организации",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("c09106d7-cbcb-4595-9dae-e1e2644c2f9e"),
                            EditBlockId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "Стаж научно-педагогической деятельности по трудовой книжке",
                            Number = 10,
                            Placeholder = "Введите свой стаж",
                            Required = true,
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("3318f041-65b4-4abd-b943-fdd5c03dd2c6"),
                            EditBlockId = new Guid("244aa723-8a97-4d0c-b457-c0542e4d15bc"),
                            Name = "Дополнительная информация",
                            Number = 11,
                            Placeholder = "Пример",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("a50dcda9-d4e5-4734-9ac0-a50e4058c6b7"),
                            EditBlockId = new Guid("668e4a6b-e854-4d76-8d9b-5b5d97f07631"),
                            Name = "Направление конкурса",
                            Number = 12,
                            Placeholder = "Выберите направление конкурса",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("9529d350-cca8-4de0-aa84-cf555da5da54"),
                            EditBlockId = new Guid("668e4a6b-e854-4d76-8d9b-5b5d97f07631"),
                            Name = "Категория участника конкурса (Работники высших учебных заведений, отраслевых и академических институтов, работники сектора промышленности (исследователи), осуществляющие научно-исследовательскую и/или научно-педагогическую деятельность)",
                            Number = 13,
                            Placeholder = "Выберите категорию участника конкруса",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("ba0ce598-fae9-4b2f-b9d3-adfb7cd051d3"),
                            EditBlockId = new Guid("668e4a6b-e854-4d76-8d9b-5b5d97f07631"),
                            Name = "Название конкурсной работы",
                            Number = 14,
                            Placeholder = "Введите название своей конкурсной работы",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("1cf3f58c-a8da-47fe-b839-a57b6d1f6078"),
                            EditBlockId = new Guid("668e4a6b-e854-4d76-8d9b-5b5d97f07631"),
                            Name = "Ссылка на конкурсную работу",
                            Number = 15,
                            Placeholder = "Введите ссылку своей конкурсной работы",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("dde7acd9-3a3a-49fd-9b4b-c0a653b57e12"),
                            EditBlockId = new Guid("668e4a6b-e854-4d76-8d9b-5b5d97f07631"),
                            Name = "Ученое звание",
                            Number = 16,
                            Placeholder = "Выберите ученое звание",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("41423741-f167-49fb-9bf6-b9de4a310c45"),
                            EditBlockId = new Guid("668e4a6b-e854-4d76-8d9b-5b5d97f07631"),
                            Name = "Ученая степень",
                            Number = 17,
                            Placeholder = "Выберите ученую степень",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("33bcc605-c3f0-40e4-a2f3-f99efc069c6b"),
                            EditBlockId = new Guid("668e4a6b-e854-4d76-8d9b-5b5d97f07631"),
                            Name = "Научная специальность (по классификации ВАК)",
                            Number = 18,
                            Placeholder = "Введите научную специальность (по классификации ВАК)",
                            Required = true,
                            ValueTypeId = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c")
                        },
                        new
                        {
                            Id = new Guid("059969c5-b52d-4ae3-99a7-b36e2f91bf28"),
                            EditBlockId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-педагогической деятельности",
                            Name = "Защитившиеся кадидаты наук",
                            Number = 19,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("46af9650-180a-4700-906c-0fbec45ca9b4"),
                            EditBlockId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            Name = "Защитившиеся доктора наук",
                            Number = 20,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("df1d538a-f638-4cad-a199-b9dac76d4f4c"),
                            EditBlockId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            EditGroup = "Руководство дипломными проектами за предыдущий учебный год",
                            Name = "Защитившиеся бакалавры",
                            Number = 21,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("eadf86b1-513b-488b-b38c-8b5f52d35eb7"),
                            EditBlockId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            Name = "Защитившиеся специалисты",
                            Number = 22,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("3786a8a6-1233-4ab5-9838-ed588b67d814"),
                            EditBlockId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            Name = "Защитившиеся магистры",
                            Number = 23,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("960b2ebf-0a12-47db-b6fc-201d8502174c"),
                            EditBlockId = new Guid("630d745b-5134-4f21-b165-f9104ecb1f35"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-исследовательской деятельности",
                            Name = "Защитившиеся кандидаты наук",
                            Number = 24,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        },
                        new
                        {
                            Id = new Guid("0b7fea8f-231e-49ce-a7a8-263a2efbc1de"),
                            EditBlockId = new Guid("630d745b-5134-4f21-b165-f9104ecb1f35"),
                            Name = "Защитившиеся доктора наук",
                            Number = 25,
                            Placeholder = "Введите количество",
                            Required = true,
                            ValueTypeId = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("ApplicationId", "FieldId")
                        .IsUnique();

                    b.ToTable("FieldVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAuto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("TableId");

                    b.ToTable("Marks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1c7d042-abfc-442b-a3d3-d4c796492797"),
                            IsAuto = true,
                            MaxValue = 3,
                            Name = "Баллы за объем учебной нагрузки:",
                            Number = 1,
                            TableId = new Guid("eaa5e348-ac91-45b3-b200-159a934f5275")
                        },
                        new
                        {
                            Id = new Guid("b897c450-c565-4d4e-9d89-a87629b9f3a8"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за количество дисциплин на иностранном языке, которые вел претендент, в предыдущем учебном году:",
                            Number = 2,
                            TableId = new Guid("eaa5e348-ac91-45b3-b200-159a934f5275")
                        },
                        new
                        {
                            Id = new Guid("763130d8-f0f6-4986-abbb-99457fa4af2a"),
                            FieldId = new Guid("3786a8a6-1233-4ab5-9838-ed588b67d814"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за количество квалификационных работ, выполненных под руководством претендента:",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("41809e75-9e8d-4629-8d6b-a4a3a5a0e19c"),
                            FieldId = new Guid("059969c5-b52d-4ae3-99a7-b36e2f91bf28"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("c40e98f0-3885-4aa5-ba04-cee82c91b79a"),
                            FieldId = new Guid("46af9650-180a-4700-906c-0fbec45ca9b4"),
                            IsAuto = true,
                            MaxValue = 4,
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("34a5f1fa-1859-4287-922e-179b40cee4ce"),
                            IsAuto = true,
                            MaxValue = 4,
                            Name = "Баллы за количество подготовленных студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание:",
                            Number = 6,
                            TableId = new Guid("63ba0bca-8b82-41c6-b5b8-30ce69443f85")
                        },
                        new
                        {
                            Id = new Guid("6e1ce4fb-a8c7-4f05-9b65-2f6f39f5cf21"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за количество онлайн курсов на открытых площадках:",
                            Number = 7,
                            TableId = new Guid("c2d6d551-a609-4e01-9643-0537cae9fbb0")
                        },
                        new
                        {
                            Id = new Guid("1b3648a1-625e-4a6b-b88d-79065380e07d"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за труды с грифом и без соавторства:",
                            Number = 8,
                            TableId = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830")
                        },
                        new
                        {
                            Id = new Guid("b18c5554-abe6-44e6-b3e7-7058283a2b4c"),
                            IsAuto = true,
                            MaxValue = 3,
                            Name = "Баллы за труды с грифом в соавторстве:",
                            Number = 9,
                            TableId = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830")
                        },
                        new
                        {
                            Id = new Guid("5ac16067-ca9d-49f9-9999-15625c2b720d"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за труды без грифа и без соавторства:",
                            Number = 10,
                            TableId = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830")
                        },
                        new
                        {
                            Id = new Guid("49789682-e2f0-4049-9188-167f0143250c"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за труды без грифа в соавторстве:",
                            Number = 11,
                            TableId = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830")
                        },
                        new
                        {
                            Id = new Guid("ef2ecb03-19a7-42a4-975d-152affb69028"),
                            IsAuto = true,
                            MaxValue = 4,
                            Name = "Баллы за количество практикумов и курсов лекций:",
                            Number = 12,
                            TableId = new Guid("f0cd4540-c63f-44e7-b047-c3ac83257200")
                        },
                        new
                        {
                            Id = new Guid("990e7453-f5a1-470a-998e-ec960a7db2e7"),
                            FieldId = new Guid("dde7acd9-3a3a-49fd-9b4b-c0a653b57e12"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за ученое звание:",
                            Number = 13
                        },
                        new
                        {
                            Id = new Guid("2bbf8971-c205-4a7f-8a88-8ccfa5f4f581"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за награды:",
                            Number = 14,
                            TableId = new Guid("db09b619-6f1d-4058-beb2-a301f4de7454")
                        },
                        new
                        {
                            Id = new Guid("b0042889-c9a8-4509-9afd-b35647fdd907"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за профессиональное развитие:",
                            Number = 15,
                            TableId = new Guid("9afc1ea9-c6fb-4996-a881-e312ead0ee33")
                        },
                        new
                        {
                            Id = new Guid("367000e4-2bc6-425f-a78a-056f1537dc7c"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за научные публикации:",
                            Number = 16,
                            TableId = new Guid("aaa8d818-6f9c-4b16-9a50-18973b8b17f0")
                        },
                        new
                        {
                            Id = new Guid("4005ae02-9121-416f-baa3-3674c19fe89e"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы по базе Scopus:",
                            Number = 17,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5")
                        },
                        new
                        {
                            Id = new Guid("42751ccd-1df8-43b6-9a92-361e3b86a93a"),
                            IsAuto = true,
                            MaxValue = 3,
                            Name = "Баллы по базе РИНЦ:",
                            Number = 18,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5")
                        },
                        new
                        {
                            Id = new Guid("55d19766-9924-46bb-ac91-da66554a2eba"),
                            FieldId = new Guid("960b2ebf-0a12-47db-b6fc-201d8502174c"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 19
                        },
                        new
                        {
                            Id = new Guid("507f8cc7-9c24-4086-b8a5-ad6e17978b68"),
                            FieldId = new Guid("0b7fea8f-231e-49ce-a7a8-263a2efbc1de"),
                            IsAuto = true,
                            MaxValue = 4,
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 20
                        },
                        new
                        {
                            Id = new Guid("e93f6f73-d5a6-4a50-9761-26d1fe7d5016"),
                            IsAuto = true,
                            MaxValue = 4,
                            Name = "Баллы за выполненные НИР/НИОКР в качестве руководителя:",
                            Number = 21,
                            TableId = new Guid("dd873f32-7f8e-4ea6-9fc4-99467a4a3b9a")
                        },
                        new
                        {
                            Id = new Guid("2f823461-2828-4f9f-89ee-09e1cf162e9b"),
                            IsAuto = true,
                            MaxValue = 2,
                            Name = "Баллы за выполненные НИР/НИОКР в качестве исполнителя:",
                            Number = 22,
                            TableId = new Guid("dd873f32-7f8e-4ea6-9fc4-99467a4a3b9a")
                        },
                        new
                        {
                            Id = new Guid("123b73e2-3734-434b-b370-c940143c5630"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за количество объектов интеллектуальной собственности:",
                            Number = 23,
                            TableId = new Guid("553ac0db-ab48-4949-bfdb-d0fbe0b85fd3")
                        },
                        new
                        {
                            Id = new Guid("6b5c71fd-14df-413f-8bfd-b1d96e9d9442"),
                            IsAuto = true,
                            MaxValue = 5,
                            Name = "Баллы за количество разработок:",
                            Number = 24,
                            TableId = new Guid("534f2fdc-dc1c-4e46-b5ea-5cbf00a10e9b")
                        },
                        new
                        {
                            Id = new Guid("9c34caf0-b7d6-4064-8ef0-22fb609a3db5"),
                            FieldId = new Guid("1cf3f58c-a8da-47fe-b839-a57b6d1f6078"),
                            IsAuto = false,
                            MaxValue = 10,
                            Name = "Оценка уровня предоставленной работы:",
                            Number = 25
                        },
                        new
                        {
                            Id = new Guid("c5072d86-82dd-4c2c-b8a5-b790c1cb49c1"),
                            FieldId = new Guid("1cf3f58c-a8da-47fe-b839-a57b6d1f6078"),
                            IsAuto = false,
                            MaxValue = 10,
                            Name = "Использование в представленной работе инновационных методов (проблемного и проективного обучения, тренинговых форм, модульно-кредитных, модульно-рейтинговых систем обучения и контроля знаний):",
                            Number = 26
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("MarkBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a039b1a-6bf7-4332-a9dc-dbcf6c73a23f"),
                            Name = "Основной",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("71d7bee1-b8f7-4e0e-9f65-6061df66adfe"),
                            Name = "Образовательная деятельность",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("ed4a7a57-bbdf-4a99-a1a4-4e293d2f46a4"),
                            Name = "Методическая деятельность",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("e3064d0e-15dc-4f37-a870-7b9dc7cd9e56"),
                            Name = "Профессиональные показатели",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("335d24a9-9be2-4193-851c-1a2cbaf51a8f"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("4f700521-29a7-48ce-b570-b6f8f4ba247b"),
                            Name = "Инновационная и иная деятельность",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("bae51a96-b0ca-4c25-b4ab-713dfd3461a8"),
                            Name = "Конкурсная работа",
                            Number = 7
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarkId");

                    b.HasIndex("ApplicationId", "MarkId")
                        .IsUnique();

                    b.ToTable("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrefilled")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Rows");

                    b.HasData(
                        new
                        {
                            Id = new Guid("51279d19-b2b4-4b7a-9374-2473a3ac3938"),
                            IsPrefilled = true,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5")
                        },
                        new
                        {
                            Id = new Guid("80b6f6e9-e2e1-4e16-944e-45d2aae5fac3"),
                            IsPrefilled = true,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5")
                        },
                        new
                        {
                            Id = new Guid("8421876f-de74-4782-bffb-cb4e62a4d2f4"),
                            IsPrefilled = true,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5")
                        },
                        new
                        {
                            Id = new Guid("2cf3a6e4-cecb-43f9-a32c-a1384c6904a4"),
                            IsPrefilled = true,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5")
                        },
                        new
                        {
                            Id = new Guid("bc287c35-4f11-4794-b678-7232ec4a51e5"),
                            IsPrefilled = true,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5")
                        },
                        new
                        {
                            Id = new Guid("daeffb8c-2597-421a-8176-5d64da4f3aa6"),
                            IsPrefilled = true,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5")
                        },
                        new
                        {
                            Id = new Guid("d1422f09-b7fc-4329-b6a9-cbad93349181"),
                            IsPrefilled = true,
                            TableId = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.SelectValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("FieldId");

                    b.ToTable("SelectValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37027407-bef8-4887-b482-3c873aa5c635"),
                            FieldId = new Guid("a50dcda9-d4e5-4734-9ac0-a50e4058c6b7"),
                            Value = "АРХИТЕКТУРА"
                        },
                        new
                        {
                            Id = new Guid("5c2279f8-5af8-40df-96e2-29392c49eadc"),
                            FieldId = new Guid("a50dcda9-d4e5-4734-9ac0-a50e4058c6b7"),
                            Value = "ТЕХНИКА И ТЕХНОЛОГИИ СТРОИТЕЛЬСТВА"
                        },
                        new
                        {
                            Id = new Guid("17a65873-0ecc-4c88-b654-fb8f42277a83"),
                            FieldId = new Guid("a50dcda9-d4e5-4734-9ac0-a50e4058c6b7"),
                            Value = "СТРОИТЕЛЬСТВО И АРХИТЕКТУРА"
                        },
                        new
                        {
                            Id = new Guid("11d45fc1-766c-41ce-9818-567f86c28860"),
                            FieldId = new Guid("a50dcda9-d4e5-4734-9ac0-a50e4058c6b7"),
                            Value = "ЭЛЕКТРО- И ТЕПЛОЭНЕРГЕТИКА"
                        },
                        new
                        {
                            Id = new Guid("110937a4-ecfa-4029-8b37-a359d778f2ad"),
                            FieldId = new Guid("a50dcda9-d4e5-4734-9ac0-a50e4058c6b7"),
                            Value = "ПРИКЛАДНАЯ ГЕОЛОГИЯ, ГОРНОЕ ДЕЛО, НЕФТЕГАЗОВОЕ ДЕЛО И ГЕОДЕЗИЯ"
                        },
                        new
                        {
                            Id = new Guid("9093d02b-a71c-49e2-a906-aeb6c58a2ddd"),
                            FieldId = new Guid("a50dcda9-d4e5-4734-9ac0-a50e4058c6b7"),
                            Value = "НЕДРОПОЛЬЗОВАНИЕ И ГОРНЫЕ НАУКИ"
                        },
                        new
                        {
                            Id = new Guid("6af15b77-0742-4608-90fd-ef1c4ba0f03b"),
                            FieldId = new Guid("9529d350-cca8-4de0-aa84-cf555da5da54"),
                            Value = "Аспиранты, адъюнкты, ординаторы, ассистенты-стажеры, не имеющие ученой степени"
                        },
                        new
                        {
                            Id = new Guid("fafd0f29-55f4-4208-9b32-f7f058cefba9"),
                            FieldId = new Guid("9529d350-cca8-4de0-aa84-cf555da5da54"),
                            Value = "Докторанты, имеющие ученую степень кандидата наук"
                        },
                        new
                        {
                            Id = new Guid("ad99ef83-fb58-44ac-86de-c32203377460"),
                            FieldId = new Guid("9529d350-cca8-4de0-aa84-cf555da5da54"),
                            Value = "Имеющие ученую степень доктора наук"
                        },
                        new
                        {
                            Id = new Guid("1428f038-a829-453e-a057-206aeec8118c"),
                            FieldId = new Guid("dde7acd9-3a3a-49fd-9b4b-c0a653b57e12"),
                            Value = "Доцент"
                        },
                        new
                        {
                            Id = new Guid("f7618e18-a4d2-40bf-9eae-820e9913bda3"),
                            FieldId = new Guid("dde7acd9-3a3a-49fd-9b4b-c0a653b57e12"),
                            Value = "Профессор"
                        },
                        new
                        {
                            Id = new Guid("50e06e39-cfa7-41b2-a962-9345c0917dc7"),
                            ColumnId = new Guid("bfd0158e-5b43-436d-bcfb-f5196cae1541"),
                            Value = "Региональный"
                        },
                        new
                        {
                            Id = new Guid("dfb19929-4e36-4d59-a03e-9e264b26a97d"),
                            ColumnId = new Guid("bfd0158e-5b43-436d-bcfb-f5196cae1541"),
                            Value = "Всероссийский"
                        },
                        new
                        {
                            Id = new Guid("616614f1-e579-4278-b48d-604c9567eb21"),
                            ColumnId = new Guid("bfd0158e-5b43-436d-bcfb-f5196cae1541"),
                            Value = "Международный"
                        },
                        new
                        {
                            Id = new Guid("0794890b-1239-4d88-b191-8545e60dafc6"),
                            ColumnId = new Guid("b0048747-bd8b-4447-b9d1-80e897c2d70d"),
                            Value = "Учебное и/или учебно-методическое пособие"
                        },
                        new
                        {
                            Id = new Guid("70fd17cf-5dbe-43e9-a375-aba17580c56e"),
                            ColumnId = new Guid("b0048747-bd8b-4447-b9d1-80e897c2d70d"),
                            Value = "Учебник"
                        },
                        new
                        {
                            Id = new Guid("6a1591c0-ee3a-40f9-a0a2-59f8ae2d221a"),
                            ColumnId = new Guid("b0048747-bd8b-4447-b9d1-80e897c2d70d"),
                            Value = "Монография"
                        },
                        new
                        {
                            Id = new Guid("d392ab6b-6c34-4aa1-9827-5611b4edeb44"),
                            ColumnId = new Guid("80d1947b-9d2d-4d22-8064-c7e572c0d6a2"),
                            Value = "Лекции"
                        },
                        new
                        {
                            Id = new Guid("7b83f517-d985-4257-be41-78813d514dda"),
                            ColumnId = new Guid("80d1947b-9d2d-4d22-8064-c7e572c0d6a2"),
                            Value = "Лабораторные"
                        },
                        new
                        {
                            Id = new Guid("5b177fee-3e89-42bb-97b8-54a0c4d08071"),
                            ColumnId = new Guid("42b21cb3-5b7f-4e91-b2a5-5f1243c9dc4f"),
                            Value = "Руководитель"
                        },
                        new
                        {
                            Id = new Guid("24a3d59d-9f22-4b8b-8f90-83a289166f86"),
                            ColumnId = new Guid("42b21cb3-5b7f-4e91-b2a5-5f1243c9dc4f"),
                            Value = "Исполнитель"
                        },
                        new
                        {
                            Id = new Guid("9c625306-34f7-45bc-aafd-b6b3896772e2"),
                            ColumnId = new Guid("3732ea42-6e19-43c1-8352-f7eb25724862"),
                            Value = "Изобретение"
                        },
                        new
                        {
                            Id = new Guid("7c112782-ed82-4681-8e1a-20ec0a385a59"),
                            ColumnId = new Guid("3732ea42-6e19-43c1-8352-f7eb25724862"),
                            Value = "Полезная модель"
                        },
                        new
                        {
                            Id = new Guid("b9019086-2246-445a-8b18-725b391d2fa8"),
                            ColumnId = new Guid("3732ea42-6e19-43c1-8352-f7eb25724862"),
                            Value = "База данных"
                        },
                        new
                        {
                            Id = new Guid("03dc0b3f-bb06-4b27-8f5d-a5f620ece33f"),
                            ColumnId = new Guid("0e1c6ba5-1cd4-49c1-abfe-16809dbdc566"),
                            Value = "Изобретение"
                        },
                        new
                        {
                            Id = new Guid("38f7d92c-864c-4f5b-a469-94ca2df15abd"),
                            ColumnId = new Guid("0e1c6ba5-1cd4-49c1-abfe-16809dbdc566"),
                            Value = "Полезная модель"
                        },
                        new
                        {
                            Id = new Guid("25d5c9ca-cdda-416f-bd4a-a5510544a12e"),
                            ColumnId = new Guid("0e1c6ba5-1cd4-49c1-abfe-16809dbdc566"),
                            Value = "База данных"
                        },
                        new
                        {
                            Id = new Guid("a3d83b0c-021f-4f59-99c1-20cf5a011167"),
                            FieldId = new Guid("dde7acd9-3a3a-49fd-9b4b-c0a653b57e12"),
                            Value = "Нет"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrefilled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db09b619-6f1d-4058-beb2-a301f4de7454"),
                            EditBlockId = new Guid("42ea1cc3-5487-449c-a581-02d8686bd21d"),
                            IsPrefilled = false,
                            Name = "Награждение премиями, наградами в области научно-педагогической деятельности городского, всероссийского или международного уровня (в том числе зарубежными), победы в профессиональных конкурсах за весь период научно-педагогической деятельности",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("9afc1ea9-c6fb-4996-a881-e312ead0ee33"),
                            EditBlockId = new Guid("42ea1cc3-5487-449c-a581-02d8686bd21d"),
                            IsPrefilled = false,
                            Name = "Сведения о профессиональном развитии участника конкурса за последние 5 лет (курсы повышения квалификации/ стажировки)",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("eaa5e348-ac91-45b3-b200-159a934f5275"),
                            EditBlockId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            IsPrefilled = false,
                            Name = "Учебная нагрузка за предыдущий учебный год (за исключением методической)",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("63ba0bca-8b82-41c6-b5b8-30ce69443f85"),
                            EditBlockId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            IsPrefilled = false,
                            Name = "Список подготовленных под руководством участника конкурса студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("e8c6112d-1ee1-487e-a521-fc02ba80652b"),
                            EditBlockId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            IsPrefilled = false,
                            Name = "Сведения о работе, выполняемой участником конкурса в области научно-педагогической деятельности по совместительству (не по основному месту работы) в высшем учебном заведении, академическом институте, отраслевом научно-исследовательском институте, профессиональной образовательной организации, общеобразовательной организации за предыдущий учебный год",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("1eac5249-d3dd-439f-9558-36e7c642e830"),
                            EditBlockId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            IsPrefilled = false,
                            Name = "Монографии, учебники, учебные и учебно-методические пособия с грифами и без грифов УМО, Министерств РФ или государственных академий наук, изданные типографским способом за последние 5 лет",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("f0cd4540-c63f-44e7-b047-c3ac83257200"),
                            EditBlockId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            IsPrefilled = false,
                            Name = "Список лабораторных практикумов и курсов лекций (разработанных самостоятельно участником конкурса) за последние 5 лет",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("c2d6d551-a609-4e01-9643-0537cae9fbb0"),
                            EditBlockId = new Guid("7fe280fb-3f72-4cd2-921b-38029e197886"),
                            IsPrefilled = false,
                            Name = "Список разработанных онлайн-курсов на открытых платформах за последние 5 лет",
                            Number = 8
                        },
                        new
                        {
                            Id = new Guid("aaa8d818-6f9c-4b16-9a50-18973b8b17f0"),
                            EditBlockId = new Guid("630d745b-5134-4f21-b165-f9104ecb1f35"),
                            IsPrefilled = false,
                            Name = "Список научных публикаций за последние 5 лет",
                            Number = 9
                        },
                        new
                        {
                            Id = new Guid("bedf20c8-293a-44d5-9034-9662ec3cffa5"),
                            EditBlockId = new Guid("630d745b-5134-4f21-b165-f9104ecb1f35"),
                            IsPrefilled = true,
                            Name = "Персональные идентификаторы и показатели",
                            Number = 10
                        },
                        new
                        {
                            Id = new Guid("dd873f32-7f8e-4ea6-9fc4-99467a4a3b9a"),
                            EditBlockId = new Guid("630d745b-5134-4f21-b165-f9104ecb1f35"),
                            IsPrefilled = false,
                            Name = "Список выполненных НИР / НИОКР с финансированием в размере от 200 тыс. руб. и выше за последние 5 лет",
                            Number = 11
                        },
                        new
                        {
                            Id = new Guid("553ac0db-ab48-4949-bfdb-d0fbe0b85fd3"),
                            EditBlockId = new Guid("630d745b-5134-4f21-b165-f9104ecb1f35"),
                            IsPrefilled = false,
                            Name = "Список объектов интеллектуальной собственности, созданных участником конкурса за весь период научно-педагогической деятельности (созданных самостоятельно / в соавторстве), официально зарегистрированных в установленном порядке (в России / за рубежом)",
                            Number = 12
                        },
                        new
                        {
                            Id = new Guid("534f2fdc-dc1c-4e46-b5ea-5cbf00a10e9b"),
                            EditBlockId = new Guid("630d745b-5134-4f21-b165-f9104ecb1f35"),
                            IsPrefilled = false,
                            Name = "Перечень разработок, внедренных на предприятиях и организациях реального сектора экономики (в России / за рубежом)",
                            Number = 13
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7097ea6-b019-4ac9-9d9f-5ad58cc3fd82"),
                            Name = "Научно-педагогическая деятельность",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("82418de5-d677-49fb-ae2c-78589d32d4f9"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 2
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af6b7cd8-100e-41be-8a68-fdec0b610013"),
                            Name = "User 1",
                            Username = "admin@mail.ru"
                        },
                        new
                        {
                            Id = new Guid("bd70e714-350e-4d91-b8c6-e0c906e99807"),
                            Name = "User 2",
                            Username = "user@mail.ru"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ValueTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e13dc3df-79c2-4834-91ce-4ed10409d9fc"),
                            Name = "int"
                        },
                        new
                        {
                            Id = new Guid("e3dcd4f3-59d3-40b7-8efd-214bee33093c"),
                            Name = "string"
                        },
                        new
                        {
                            Id = new Guid("72f99d71-26be-4e7d-890e-f01d1752b7a9"),
                            Name = "bool"
                        },
                        new
                        {
                            Id = new Guid("a678240f-d1b4-4906-9b83-5bec2b5b3ea7"),
                            Name = "DateTime"
                        });
                });

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", null)
                        .WithMany()
                        .HasForeignKey("EditBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", null)
                        .WithMany()
                        .HasForeignKey("FieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Table", null)
                        .WithMany()
                        .HasForeignKey("TablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", null)
                        .WithMany()
                        .HasForeignKey("MarksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationStatus", "ApplicationStatus")
                        .WithMany("ApplicationForms")
                        .HasForeignKey("ApplicationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.UserInfo", "Reviewer")
                        .WithMany("ReviewedApplications")
                        .HasForeignKey("ReviewerId");

                    b.HasOne("ServerApp.Data.Entities.Track", "Track")
                        .WithMany("Applications")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.UserInfo", "UserInfo")
                        .WithMany("Applications")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationStatus");

                    b.Navigation("Reviewer");

                    b.Navigation("Track");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.BlockReview", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("BlockReviews")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.MarkBlock", "MarkBlock")
                        .WithMany("BlockReviews")
                        .HasForeignKey("MarkBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("MarkBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("CellVals")
                        .HasForeignKey("ApplicationId");

                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("CellVals")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Row", "Row")
                        .WithMany("CellVals")
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Column");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Columns")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Columns")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlockStatus", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("EditBlockStatusList")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("EditBlockStatusList")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("EditBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Fields")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Fields")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("FieldVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("FieldVals")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("Marks")
                        .HasForeignKey("FieldId");

                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Marks")
                        .HasForeignKey("TableId");

                    b.Navigation("Field");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("MarkVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", "Mark")
                        .WithMany("MarkVals")
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Mark");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Rows")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.SelectValue", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("SelectValues")
                        .HasForeignKey("ColumnId");

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("SelectValues")
                        .HasForeignKey("FieldId");

                    b.Navigation("Column");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Tables")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Navigation("BlockReviews");

                    b.Navigation("CellVals");

                    b.Navigation("EditBlockStatusList");

                    b.Navigation("FieldVals");

                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationStatus", b =>
                {
                    b.Navigation("ApplicationForms");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Navigation("CellVals");

                    b.Navigation("SelectValues");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Navigation("EditBlockStatusList");

                    b.Navigation("Fields");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Navigation("FieldVals");

                    b.Navigation("Marks");

                    b.Navigation("SelectValues");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkBlock", b =>
                {
                    b.Navigation("BlockReviews");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Navigation("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Marks");

                    b.Navigation("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ReviewedApplications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
