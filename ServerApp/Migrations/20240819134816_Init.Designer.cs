// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp.Data;

#nullable disable

namespace ServerApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240819134816_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.Property<Guid>("EditBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("EditBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("EditBlockTrack");

                    b.HasData(
                        new
                        {
                            EditBlocksId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            TracksId = new Guid("7f42cda7-76d7-4497-a372-efff3a3f94e9")
                        },
                        new
                        {
                            EditBlocksId = new Guid("ff2c0df5-5c5e-4e5f-a435-76f476861beb"),
                            TracksId = new Guid("7f42cda7-76d7-4497-a372-efff3a3f94e9")
                        },
                        new
                        {
                            EditBlocksId = new Guid("2f6d1322-adec-4762-a55e-1be6fa7d001e"),
                            TracksId = new Guid("7f42cda7-76d7-4497-a372-efff3a3f94e9")
                        },
                        new
                        {
                            EditBlocksId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            TracksId = new Guid("7f42cda7-76d7-4497-a372-efff3a3f94e9")
                        },
                        new
                        {
                            EditBlocksId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            TracksId = new Guid("64099bec-86e4-4fb0-ab65-d478a98eeaf2")
                        },
                        new
                        {
                            EditBlocksId = new Guid("ff2c0df5-5c5e-4e5f-a435-76f476861beb"),
                            TracksId = new Guid("64099bec-86e4-4fb0-ab65-d478a98eeaf2")
                        },
                        new
                        {
                            EditBlocksId = new Guid("2f6d1322-adec-4762-a55e-1be6fa7d001e"),
                            TracksId = new Guid("64099bec-86e4-4fb0-ab65-d478a98eeaf2")
                        },
                        new
                        {
                            EditBlocksId = new Guid("82dbb908-7b74-4ede-8455-c73a23b11c88"),
                            TracksId = new Guid("64099bec-86e4-4fb0-ab65-d478a98eeaf2")
                        });
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.Property<Guid>("FieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.HasKey("FieldsId", "MarkBlocksId");

                    b.HasIndex("MarkBlocksId");

                    b.ToTable("FieldMarkBlock");

                    b.HasData(
                        new
                        {
                            FieldsId = new Guid("31b91825-f773-4492-8404-ce7217183a06"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("efaa62a3-599c-46d5-b6ec-519170c79596"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("d806a405-6455-4e96-b505-57db47c812e1"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("4c654bef-4f75-4e3d-a901-1821917be0d5"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("239f3435-3e60-4ea0-a7d5-c606d4c1bfd5"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("54cd1808-d7f2-414a-8e67-e5dc70a8c4ee"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("60d346c8-aacd-4c30-82d1-2ebaf2827959"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("942f11fe-a658-4d36-bb27-8d54f05d444d"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("c59af803-cc4b-4446-bc7b-44d2a84b7f09"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("da1084d1-6d71-402d-b2df-095d56944317"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("b3dc19c2-758c-4488-8b2e-b1693ec88538"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("2426c27c-4392-4546-9710-d182eb5aaf72"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("cc529adb-c278-4c6b-868e-7ad40ed3aa3c"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("a61e4584-2929-4806-896a-c3a425a868ae"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("77e46c32-2b56-4d81-b043-ff61c6af4c37"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("339e9dfd-0b77-4083-914f-054bc5e218f5"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("24774898-0778-4651-901f-91d0665b9dec"),
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e")
                        },
                        new
                        {
                            FieldsId = new Guid("d22981d8-b18f-4c7d-b070-8b927001de97"),
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649")
                        },
                        new
                        {
                            FieldsId = new Guid("5e44e1f1-bc55-4511-8698-c0b6ec302c97"),
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649")
                        },
                        new
                        {
                            FieldsId = new Guid("1027e5c2-9fa9-4492-8f27-468bfcc75dea"),
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649")
                        },
                        new
                        {
                            FieldsId = new Guid("006fd36f-9541-4d22-9df4-556ad5c622e4"),
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649")
                        },
                        new
                        {
                            FieldsId = new Guid("78e5f89d-3db2-40b1-be77-89f46ca41c2f"),
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649")
                        },
                        new
                        {
                            FieldsId = new Guid("77e46c32-2b56-4d81-b043-ff61c6af4c37"),
                            MarkBlocksId = new Guid("41c0cbcd-14e0-4087-a355-4bbc2fb6c45a")
                        },
                        new
                        {
                            FieldsId = new Guid("77e46c32-2b56-4d81-b043-ff61c6af4c37"),
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a")
                        },
                        new
                        {
                            FieldsId = new Guid("733f5938-579b-4393-8c4e-acbf2f48948f"),
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a")
                        },
                        new
                        {
                            FieldsId = new Guid("a8c5537e-f68e-4e3d-8a64-a67f97dce2d3"),
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a")
                        });
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TablesId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TablesId");

                    b.HasIndex("TablesId");

                    b.ToTable("MarkBlockTable");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            TablesId = new Guid("d392e8bb-d667-4308-a489-8ed071be5d6e")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            TablesId = new Guid("b0ff3bbc-b9c3-41fb-8c31-15fad932da83")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            TablesId = new Guid("ab611c30-692c-4a76-9e36-8b228db474e7")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            TablesId = new Guid("d299e65d-4ad5-4cee-99dd-1ac6abfe1b2a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("027b7dc8-cbb1-478d-9f86-7b40af56d5d8"),
                            TablesId = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("027b7dc8-cbb1-478d-9f86-7b40af56d5d8"),
                            TablesId = new Guid("9c3849a0-cbf9-4f3a-89d0-00a948d853cb")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41c0cbcd-14e0-4087-a355-4bbc2fb6c45a"),
                            TablesId = new Guid("031d1091-d709-44fb-990e-45ad61c06a67")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41c0cbcd-14e0-4087-a355-4bbc2fb6c45a"),
                            TablesId = new Guid("541417e0-1140-44be-b702-4472fb0dc523")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            TablesId = new Guid("031d1091-d709-44fb-990e-45ad61c06a67")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            TablesId = new Guid("01420ddd-b623-4064-9304-b5528d7745e2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            TablesId = new Guid("83f54004-1fc8-4c74-8e47-02cf941de0f3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            TablesId = new Guid("d17160f7-fa8e-467d-88e8-bbfc32442f20")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("b4e99c06-3c49-43ab-ab59-3c4f7131a5ed"),
                            TablesId = new Guid("541417e0-1140-44be-b702-4472fb0dc523")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("b4e99c06-3c49-43ab-ab59-3c4f7131a5ed"),
                            TablesId = new Guid("9f7ee56e-fa4a-4b03-a9a4-27fb416851b7")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("b4e99c06-3c49-43ab-ab59-3c4f7131a5ed"),
                            TablesId = new Guid("3c4b6ed1-56ea-4f71-a591-1c6f0b10d819")
                        });
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "TracksId");

                    b.HasIndex("TracksId");

                    b.ToTable("MarkBlockTrack");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e"),
                            TracksId = new Guid("7f42cda7-76d7-4497-a372-efff3a3f94e9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            TracksId = new Guid("7f42cda7-76d7-4497-a372-efff3a3f94e9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("027b7dc8-cbb1-478d-9f86-7b40af56d5d8"),
                            TracksId = new Guid("7f42cda7-76d7-4497-a372-efff3a3f94e9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41c0cbcd-14e0-4087-a355-4bbc2fb6c45a"),
                            TracksId = new Guid("7f42cda7-76d7-4497-a372-efff3a3f94e9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("28ad83d3-cadd-425a-8224-e0940d3b994a"),
                            TracksId = new Guid("7f42cda7-76d7-4497-a372-efff3a3f94e9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe08550e-3681-4aab-a58b-890e3ac215a6"),
                            TracksId = new Guid("7f42cda7-76d7-4497-a372-efff3a3f94e9")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e"),
                            TracksId = new Guid("64099bec-86e4-4fb0-ab65-d478a98eeaf2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            TracksId = new Guid("64099bec-86e4-4fb0-ab65-d478a98eeaf2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("b4e99c06-3c49-43ab-ab59-3c4f7131a5ed"),
                            TracksId = new Guid("64099bec-86e4-4fb0-ab65-d478a98eeaf2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("28ad83d3-cadd-425a-8224-e0940d3b994a"),
                            TracksId = new Guid("64099bec-86e4-4fb0-ab65-d478a98eeaf2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("fe08550e-3681-4aab-a58b-890e3ac215a6"),
                            TracksId = new Guid("64099bec-86e4-4fb0-ab65-d478a98eeaf2")
                        });
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.Property<Guid>("MarkBlocksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarksId")
                        .HasColumnType("TEXT");

                    b.HasKey("MarkBlocksId", "MarksId");

                    b.HasIndex("MarksId");

                    b.ToTable("MarkMarkBlock");

                    b.HasData(
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            MarksId = new Guid("063afdcf-e956-41c4-9cbe-7b28d799a0bb")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            MarksId = new Guid("bcca23f5-e353-4d3e-b860-de2810bfe158")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            MarksId = new Guid("2cd940a1-04fa-4f32-817a-7823f3b6022f")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            MarksId = new Guid("216ac99d-2527-4d59-9108-555774c2410a")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            MarksId = new Guid("227988bb-7e96-4864-92ab-7ba65de0cac0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            MarksId = new Guid("ecd284df-3ad7-4266-9137-ebbf38f46052")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            MarksId = new Guid("5c4b0b26-6e5a-47e3-8b3d-fd69b29d0fd2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("027b7dc8-cbb1-478d-9f86-7b40af56d5d8"),
                            MarksId = new Guid("cf4365a8-e6d1-4ef5-8b86-8d0c4a6f6055")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("027b7dc8-cbb1-478d-9f86-7b40af56d5d8"),
                            MarksId = new Guid("4fe950b9-227f-4646-b9b1-d46eb357d4ef")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("027b7dc8-cbb1-478d-9f86-7b40af56d5d8"),
                            MarksId = new Guid("c51b811c-b0d8-44ff-bbdd-1414209d7870")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("027b7dc8-cbb1-478d-9f86-7b40af56d5d8"),
                            MarksId = new Guid("9c683209-2bc0-498a-9322-56471f1a371f")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("027b7dc8-cbb1-478d-9f86-7b40af56d5d8"),
                            MarksId = new Guid("443f0257-feb8-4408-9b5e-a75c676453f8")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41c0cbcd-14e0-4087-a355-4bbc2fb6c45a"),
                            MarksId = new Guid("991662b8-a449-45e2-9122-4acb93c0d7bc")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41c0cbcd-14e0-4087-a355-4bbc2fb6c45a"),
                            MarksId = new Guid("3fb5631a-dcb0-40c3-9276-ab2bea495ef5")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("41c0cbcd-14e0-4087-a355-4bbc2fb6c45a"),
                            MarksId = new Guid("f3f88843-f588-4876-a6c5-bb34cf393294")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            MarksId = new Guid("991662b8-a449-45e2-9122-4acb93c0d7bc")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            MarksId = new Guid("3fb5631a-dcb0-40c3-9276-ab2bea495ef5")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            MarksId = new Guid("0612d964-438d-4e26-843f-b6f008bcf915")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            MarksId = new Guid("af327f13-d7f1-4b14-9172-3ec807a15a6c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            MarksId = new Guid("0036a46e-5c25-4b38-86ea-1752debc80d0")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            MarksId = new Guid("88e4a97c-def0-4a2a-a34f-7ac8637915aa")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            MarksId = new Guid("fe3c074d-7f97-4299-ad78-41e4167a41e3")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            MarksId = new Guid("a40819d6-3730-432b-a56e-3c3800ac8c4c")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            MarksId = new Guid("1bfcb989-46c2-4d98-88d7-7b56bbcda8f2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("b4e99c06-3c49-43ab-ab59-3c4f7131a5ed"),
                            MarksId = new Guid("f3f88843-f588-4876-a6c5-bb34cf393294")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("b4e99c06-3c49-43ab-ab59-3c4f7131a5ed"),
                            MarksId = new Guid("e9ff14cb-b476-4a84-a88e-58dfdf36d117")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("b4e99c06-3c49-43ab-ab59-3c4f7131a5ed"),
                            MarksId = new Guid("af1c9c12-adc8-4767-a617-8403ab32e3d2")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("b4e99c06-3c49-43ab-ab59-3c4f7131a5ed"),
                            MarksId = new Guid("b5da63be-512e-4351-ba57-0700f520b0b4")
                        },
                        new
                        {
                            MarkBlocksId = new Guid("b4e99c06-3c49-43ab-ab59-3c4f7131a5ed"),
                            MarksId = new Guid("7bb4df6d-3c23-4d68-a02b-8359a022e861")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("ApplicationForms");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ColumnId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RowId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("RowId");

                    b.HasIndex("ApplicationId", "RowId", "ColumnId")
                        .IsUnique();

                    b.ToTable("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("TableId", "Name")
                        .IsUnique();

                    b.HasIndex("TableId", "Number")
                        .IsUnique();

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d8753b96-52aa-48c1-a973-2d1a92298eec"),
                            Name = "Год",
                            Number = 1,
                            TableId = new Guid("031d1091-d709-44fb-990e-45ad61c06a67"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("0f537b7b-bd6b-4578-8372-3729686a99dc"),
                            Name = "Название конкурса",
                            Number = 2,
                            TableId = new Guid("031d1091-d709-44fb-990e-45ad61c06a67"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("b080e143-e950-4404-bcb3-042250a4ae02"),
                            Name = "Статус конкурса",
                            Number = 3,
                            TableId = new Guid("031d1091-d709-44fb-990e-45ad61c06a67"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("3a8d0054-4c0a-4139-8f57-659909a92250"),
                            Name = "Награда",
                            Number = 4,
                            TableId = new Guid("031d1091-d709-44fb-990e-45ad61c06a67"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("d612875a-df47-4832-8c8e-eb2bab803535"),
                            Name = "Ссылка",
                            Number = 5,
                            TableId = new Guid("031d1091-d709-44fb-990e-45ad61c06a67"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("d8d943a9-24b1-4774-ae75-60eadef32810"),
                            Name = "Название документа, реквизиты",
                            Number = 1,
                            TableId = new Guid("541417e0-1140-44be-b702-4472fb0dc523"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("675b3f08-f12f-425b-9513-646ff26673cd"),
                            Name = "Год получения документа",
                            Number = 2,
                            TableId = new Guid("541417e0-1140-44be-b702-4472fb0dc523"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("a55422c3-089d-4863-a899-1b782e48b37f"),
                            Name = "Наименование курса",
                            Number = 1,
                            TableId = new Guid("d392e8bb-d667-4308-a489-8ed071be5d6e"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("1f88e786-a018-4a16-84f4-966c5d81b969"),
                            Name = "Язык преподавания (русск./англ./др.)",
                            Number = 2,
                            TableId = new Guid("d392e8bb-d667-4308-a489-8ed071be5d6e"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("edc19e24-55b1-4dc5-a8e8-745ec332196d"),
                            Name = "Лекции (час.)",
                            Number = 3,
                            TableId = new Guid("d392e8bb-d667-4308-a489-8ed071be5d6e"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("35a9cbdf-3bef-4766-bd5a-795ab3a1b425"),
                            Name = "Практические занятия (час.)",
                            Number = 4,
                            TableId = new Guid("d392e8bb-d667-4308-a489-8ed071be5d6e"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("8cda6309-0f66-430a-9d40-e5c9e28b568f"),
                            Name = "Итого (час.)",
                            Number = 5,
                            TableId = new Guid("d392e8bb-d667-4308-a489-8ed071be5d6e"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("1b04dab5-341d-4922-9af0-d0175e823e6e"),
                            Name = "ФИО",
                            Number = 1,
                            TableId = new Guid("b0ff3bbc-b9c3-41fb-8c31-15fad932da83"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("49568d95-b029-45a4-876b-0e19c8106682"),
                            Name = "Название конкурса/премии",
                            Number = 2,
                            TableId = new Guid("b0ff3bbc-b9c3-41fb-8c31-15fad932da83"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("ad06a75c-115e-4847-875f-21e7119dd9d3"),
                            Name = "Год",
                            Number = 3,
                            TableId = new Guid("b0ff3bbc-b9c3-41fb-8c31-15fad932da83"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("54681f54-e7a1-439d-ad75-92e6ca4e65df"),
                            Name = "Статус конкурса (международный, всероссийский), статус награды (РФ, субъект РФ)",
                            Number = 4,
                            TableId = new Guid("b0ff3bbc-b9c3-41fb-8c31-15fad932da83"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("0efba2a6-2f6a-4c16-9b29-b1ac13a7376b"),
                            Name = "Награда/премия (медаль, диплом с указанием степени)",
                            Number = 5,
                            TableId = new Guid("b0ff3bbc-b9c3-41fb-8c31-15fad932da83"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("18424b62-1675-4b69-9961-6f5c6aaa0311"),
                            Name = "Название организации/должность/ставка",
                            Number = 1,
                            TableId = new Guid("ab611c30-692c-4a76-9e36-8b228db474e7"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("5b8a5b0f-f8b2-4b11-91b1-d4c571ad32ad"),
                            Name = "Место нахождения (субъект РФ, зарубежье)",
                            Number = 2,
                            TableId = new Guid("ab611c30-692c-4a76-9e36-8b228db474e7"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("657a8655-a03c-4bff-9a5e-20fe413193d9"),
                            Name = "Вид деятельности (преподавательская)",
                            Number = 3,
                            TableId = new Guid("ab611c30-692c-4a76-9e36-8b228db474e7"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("ae68de23-55a4-4e3d-b414-cd3dc4fcbead"),
                            Name = "Количество часов",
                            Number = 4,
                            TableId = new Guid("ab611c30-692c-4a76-9e36-8b228db474e7"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("38441fa8-cd4a-4a40-ad4e-4432536bbe07"),
                            Name = "Вид публикации",
                            Number = 1,
                            TableId = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("88d2a215-8c8f-47ad-a14d-f586d715f505"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("5f2a95a3-b3a7-46fd-9a35-a917b24dcf9f"),
                            Name = "Соавторы",
                            Number = 3,
                            TableId = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("8d0feacb-9e58-49a8-b4d0-6ae81e4028b3"),
                            Name = "Количество печатных листов",
                            Number = 4,
                            TableId = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("b5a2c1e0-aa7e-4352-a19a-398a7e79d1e9"),
                            Name = "Наличие грифа",
                            Number = 5,
                            TableId = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243"),
                            ValueTypeId = new Guid("533327b4-b45a-40eb-83fd-4f045d839a9d")
                        },
                        new
                        {
                            Id = new Guid("05886fe3-9250-4436-a9b2-ef0bfff75a36"),
                            Name = "Издательство, год",
                            Number = 6,
                            TableId = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("c4883212-9844-4ae2-a2b6-dd7b566eb55f"),
                            Name = "Название дисциплины",
                            Number = 1,
                            TableId = new Guid("9c3849a0-cbf9-4f3a-89d0-00a948d853cb"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("8f9ea001-0f4d-4395-b23a-9d6859532324"),
                            Name = "Вид (лекции, лабораторные)",
                            Number = 2,
                            TableId = new Guid("9c3849a0-cbf9-4f3a-89d0-00a948d853cb"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("b62a2831-adc2-47ab-90bb-b5c913b0b8dc"),
                            Name = "Название курса",
                            Number = 1,
                            TableId = new Guid("d299e65d-4ad5-4cee-99dd-1ac6abfe1b2a"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("b9ebf81b-34d5-4c36-9e2c-8caa76d59756"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("d299e65d-4ad5-4cee-99dd-1ac6abfe1b2a"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("56efda5f-203b-4a8f-bb34-9681233d79a6"),
                            Name = "Ссылка на платформу",
                            Number = 3,
                            TableId = new Guid("d299e65d-4ad5-4cee-99dd-1ac6abfe1b2a"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("9628e0ea-cf24-4645-b212-9b51f4f2f18c"),
                            Name = "Год",
                            Number = 4,
                            TableId = new Guid("d299e65d-4ad5-4cee-99dd-1ac6abfe1b2a"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("dc822cb5-35bb-4112-bacf-feae4560eb61"),
                            Name = "Название статьи",
                            Number = 1,
                            TableId = new Guid("01420ddd-b623-4064-9304-b5528d7745e2"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("56e3c7ce-c083-4efe-8599-6257d3a0e949"),
                            Name = "Соавторы",
                            Number = 2,
                            TableId = new Guid("01420ddd-b623-4064-9304-b5528d7745e2"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("200b4bf3-48e7-4ed6-aefd-1d08c21a0c88"),
                            Name = "Тип публикации (категория ВАК/квартиль МБД)",
                            Number = 3,
                            TableId = new Guid("01420ddd-b623-4064-9304-b5528d7745e2"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("360e9260-ddb4-4990-9aac-d413ba165e63"),
                            Name = "Издание, год",
                            Number = 4,
                            TableId = new Guid("01420ddd-b623-4064-9304-b5528d7745e2"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("3444ca4f-dee1-440a-821f-a09944b82337"),
                            Name = "Тип идентификатора",
                            Number = 1,
                            TableId = new Guid("83f54004-1fc8-4c74-8e47-02cf941de0f3"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("af0118c1-b24b-40b1-893f-5ab5edab82ca"),
                            Name = "Идентификатор",
                            Number = 2,
                            TableId = new Guid("83f54004-1fc8-4c74-8e47-02cf941de0f3"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("38f80e4c-63e2-499e-b8ee-9e7cf889bc1c"),
                            Name = "Количество публикаций в БАЗЕ",
                            Number = 3,
                            TableId = new Guid("83f54004-1fc8-4c74-8e47-02cf941de0f3"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("a488d213-0a26-45f3-9ad0-0135bc4f1d7b"),
                            Name = "Количество цитирований",
                            Number = 4,
                            TableId = new Guid("83f54004-1fc8-4c74-8e47-02cf941de0f3"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("118814be-0785-494e-9ef8-e3e3dfda8aa4"),
                            Name = "Индекс Хирша (за все время)",
                            Number = 5,
                            TableId = new Guid("83f54004-1fc8-4c74-8e47-02cf941de0f3"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("12d7bdeb-4da1-41c6-9e9a-2dffc90c25c3"),
                            Name = "Название НИР/НИОКР",
                            Number = 1,
                            TableId = new Guid("d17160f7-fa8e-467d-88e8-bbfc32442f20"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("03ee75dc-570d-4aa4-83b2-c48c6934c4c1"),
                            Name = "Сумма финансирования (тыс. руб.)",
                            Number = 2,
                            TableId = new Guid("d17160f7-fa8e-467d-88e8-bbfc32442f20"),
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("078c09e9-4243-43f8-beac-e6e4d61ac3a8"),
                            Name = "Период выполнения",
                            Number = 3,
                            TableId = new Guid("d17160f7-fa8e-467d-88e8-bbfc32442f20"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("0b5c0aa3-744a-4e24-aa8f-cc34dc28e79d"),
                            Name = "Статус (руководитель/исполнитель)",
                            Number = 4,
                            TableId = new Guid("d17160f7-fa8e-467d-88e8-bbfc32442f20"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("beeedf13-8973-4f95-8e63-6b2065a39675"),
                            Name = "Регистрационный номер карты в системе ЕГИСУ (https://www.rosrid.ru/)",
                            Number = 5,
                            TableId = new Guid("d17160f7-fa8e-467d-88e8-bbfc32442f20"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("da218964-cc2e-4fd3-bc20-8119043f07e7"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("9f7ee56e-fa4a-4b03-a9a4-27fb416851b7"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("3b0a268b-87e1-4af1-be26-d1842ba2f9d8"),
                            Name = "Название",
                            Number = 2,
                            TableId = new Guid("9f7ee56e-fa4a-4b03-a9a4-27fb416851b7"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("e754929a-ff33-492d-90fb-77a396917038"),
                            Name = "ФИО соавторов",
                            Number = 3,
                            TableId = new Guid("9f7ee56e-fa4a-4b03-a9a4-27fb416851b7"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("7dff98ba-f732-4cd7-80d2-ef5c90777add"),
                            Name = "Номер РИД",
                            Number = 4,
                            TableId = new Guid("9f7ee56e-fa4a-4b03-a9a4-27fb416851b7"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("42eb6af9-5edc-4102-87f9-bcfc069f11d0"),
                            Name = "Вид",
                            Number = 1,
                            TableId = new Guid("3c4b6ed1-56ea-4f71-a591-1c6f0b10d819"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("1de2369b-4b3c-4ecb-8bd5-aa882b89c410"),
                            Name = "Название разработки",
                            Number = 2,
                            TableId = new Guid("3c4b6ed1-56ea-4f71-a591-1c6f0b10d819"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("f74c4485-efb7-41d4-8a25-a945659da7f5"),
                            Name = "Название организации в которую внедрена разработка",
                            Number = 3,
                            TableId = new Guid("3c4b6ed1-56ea-4f71-a591-1c6f0b10d819"),
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("EditBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "Общая информация",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("ff2c0df5-5c5e-4e5f-a435-76f476861beb"),
                            Name = "Категория участников",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("2f6d1322-adec-4762-a55e-1be6fa7d001e"),
                            Name = "Профессиональное развитие",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            Name = "Деятельность",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("82dbb908-7b74-4ede-8455-c73a23b11c88"),
                            Name = "Деятельность",
                            Number = 5
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditGroup")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Placeholder")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ValueTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("ValueTypeId");

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31b91825-f773-4492-8404-ce7217183a06"),
                            EditBlockId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "ФИО",
                            Number = 1,
                            Placeholder = "Иванов Иван Иванович",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("efaa62a3-599c-46d5-b6ec-519170c79596"),
                            EditBlockId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "Дата рождения",
                            Number = 2,
                            Placeholder = "01.01.2000",
                            ValueTypeId = new Guid("f44c7810-0b74-4510-abb5-b2d4898f8662")
                        },
                        new
                        {
                            Id = new Guid("d806a405-6455-4e96-b505-57db47c812e1"),
                            EditBlockId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "Домашний адрес",
                            Number = 3,
                            Placeholder = "Регион, город, улица, дом, квартира",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("4c654bef-4f75-4e3d-a901-1821917be0d5"),
                            EditBlockId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "Контактный телефон",
                            Number = 4,
                            Placeholder = "+8 (900)-000-00-00",
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("239f3435-3e60-4ea0-a7d5-c606d4c1bfd5"),
                            EditBlockId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "Электронная почта",
                            Number = 5,
                            Placeholder = "user@example.com",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("54cd1808-d7f2-414a-8e67-e5dc70a8c4ee"),
                            EditBlockId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "Место работы/учебы",
                            Number = 6,
                            Placeholder = "Название организации",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("60d346c8-aacd-4c30-82d1-2ebaf2827959"),
                            EditBlockId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "Адрес работы/учебы",
                            Number = 7,
                            Placeholder = "Регион, город, улица, дом",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("942f11fe-a658-4d36-bb27-8d54f05d444d"),
                            EditBlockId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "Институт, факультет, кафедра, лаборатория",
                            Number = 8,
                            Placeholder = "Введите институт, факультет, кафедру, лабораторию",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("c59af803-cc4b-4446-bc7b-44d2a84b7f09"),
                            EditBlockId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "Должность",
                            Number = 9,
                            Placeholder = "Введите свою должность в организации",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("da1084d1-6d71-402d-b2df-095d56944317"),
                            EditBlockId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "Стаж научно-педагогической деятельности по трудовой книжке",
                            Number = 10,
                            Placeholder = "Введите свой стаж",
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("b3dc19c2-758c-4488-8b2e-b1693ec88538"),
                            EditBlockId = new Guid("94ef58c2-2329-462b-9484-767ec98e789b"),
                            Name = "Дополнительная информация",
                            Number = 11,
                            Placeholder = "Пример",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("2426c27c-4392-4546-9710-d182eb5aaf72"),
                            EditBlockId = new Guid("ff2c0df5-5c5e-4e5f-a435-76f476861beb"),
                            Name = "Направление конкурса",
                            Number = 12,
                            Placeholder = "Выберите направление конкурса",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("cc529adb-c278-4c6b-868e-7ad40ed3aa3c"),
                            EditBlockId = new Guid("ff2c0df5-5c5e-4e5f-a435-76f476861beb"),
                            Name = "Категория участника конкурса",
                            Number = 13,
                            Placeholder = "Выберите категорию участника конкруса",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("a61e4584-2929-4806-896a-c3a425a868ae"),
                            EditBlockId = new Guid("ff2c0df5-5c5e-4e5f-a435-76f476861beb"),
                            Name = "Название конкрусной работы",
                            Number = 14,
                            Placeholder = "Введите название своей конкурсной работы",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("77e46c32-2b56-4d81-b043-ff61c6af4c37"),
                            EditBlockId = new Guid("ff2c0df5-5c5e-4e5f-a435-76f476861beb"),
                            Name = "Ученое звание",
                            Number = 15,
                            Placeholder = "Выберите ученое звание",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("339e9dfd-0b77-4083-914f-054bc5e218f5"),
                            EditBlockId = new Guid("ff2c0df5-5c5e-4e5f-a435-76f476861beb"),
                            Name = "Ученая степень",
                            Number = 16,
                            Placeholder = "Выберите ученую степень",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("24774898-0778-4651-901f-91d0665b9dec"),
                            EditBlockId = new Guid("ff2c0df5-5c5e-4e5f-a435-76f476861beb"),
                            Name = "Научная специальность (по классификации ВАК)",
                            Number = 17,
                            Placeholder = "Введите научную специальность (по классификации ВАК)",
                            ValueTypeId = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc")
                        },
                        new
                        {
                            Id = new Guid("d22981d8-b18f-4c7d-b070-8b927001de97"),
                            EditBlockId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-педагогической деятельности",
                            Name = "Защитившиеся кадидаты наук",
                            Number = 18,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("5e44e1f1-bc55-4511-8698-c0b6ec302c97"),
                            EditBlockId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            Name = "Защитившиеся доктора наук",
                            Number = 19,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("1027e5c2-9fa9-4492-8f27-468bfcc75dea"),
                            EditBlockId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            EditGroup = "Руководство дипломными проектами за предыдущий учебный год",
                            Name = "Защитившиеся бакалавры",
                            Number = 20,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("006fd36f-9541-4d22-9df4-556ad5c622e4"),
                            EditBlockId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            Name = "Защитившиеся специалисты",
                            Number = 21,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("78e5f89d-3db2-40b1-be77-89f46ca41c2f"),
                            EditBlockId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            Name = "Защитившиеся магистры",
                            Number = 22,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("733f5938-579b-4393-8c4e-acbf2f48948f"),
                            EditBlockId = new Guid("82dbb908-7b74-4ede-8455-c73a23b11c88"),
                            EditGroup = "Список подготовленных под руководством участника конкурса аспирантов (докторантов) за последние 5 лет научно-исследовательской деятельности",
                            Name = "Защитившиеся кандидаты наук",
                            Number = 23,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        },
                        new
                        {
                            Id = new Guid("a8c5537e-f68e-4e3d-8a64-a67f97dce2d3"),
                            EditBlockId = new Guid("82dbb908-7b74-4ede-8455-c73a23b11c88"),
                            Name = "Защитившиеся доктора наук",
                            Number = 24,
                            Placeholder = "Введите количество",
                            ValueTypeId = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77")
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("ApplicationId", "FieldId")
                        .IsUnique();

                    b.ToTable("FieldVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FieldId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("TableId");

                    b.ToTable("Marks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("063afdcf-e956-41c4-9cbe-7b28d799a0bb"),
                            Name = "Баллы за объем учебной нагрузки:",
                            Number = 1,
                            TableId = new Guid("d392e8bb-d667-4308-a489-8ed071be5d6e")
                        },
                        new
                        {
                            Id = new Guid("bcca23f5-e353-4d3e-b860-de2810bfe158"),
                            Name = "Баллы за количество дисциплин на иностранном языке, которые вел претендент, в предыдущем учебном году:",
                            Number = 2,
                            TableId = new Guid("d392e8bb-d667-4308-a489-8ed071be5d6e")
                        },
                        new
                        {
                            Id = new Guid("2cd940a1-04fa-4f32-817a-7823f3b6022f"),
                            FieldId = new Guid("78e5f89d-3db2-40b1-be77-89f46ca41c2f"),
                            Name = "Баллы за количество квалификационных работ, выполненных под руководством претендента:",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("216ac99d-2527-4d59-9108-555774c2410a"),
                            FieldId = new Guid("d22981d8-b18f-4c7d-b070-8b927001de97"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("227988bb-7e96-4864-92ab-7ba65de0cac0"),
                            FieldId = new Guid("5e44e1f1-bc55-4511-8698-c0b6ec302c97"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("ecd284df-3ad7-4266-9137-ebbf38f46052"),
                            Name = "Баллы за количество подготовленных студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание:",
                            Number = 6,
                            TableId = new Guid("b0ff3bbc-b9c3-41fb-8c31-15fad932da83")
                        },
                        new
                        {
                            Id = new Guid("5c4b0b26-6e5a-47e3-8b3d-fd69b29d0fd2"),
                            Name = "Баллы за количество онлайн курсов на открытых площадках:",
                            Number = 7,
                            TableId = new Guid("d299e65d-4ad5-4cee-99dd-1ac6abfe1b2a")
                        },
                        new
                        {
                            Id = new Guid("cf4365a8-e6d1-4ef5-8b86-8d0c4a6f6055"),
                            Name = "Баллы за труды с грифом и без соавторства:",
                            Number = 8,
                            TableId = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243")
                        },
                        new
                        {
                            Id = new Guid("4fe950b9-227f-4646-b9b1-d46eb357d4ef"),
                            Name = "Баллы за труды с грифом в соавторстве:",
                            Number = 9,
                            TableId = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243")
                        },
                        new
                        {
                            Id = new Guid("c51b811c-b0d8-44ff-bbdd-1414209d7870"),
                            Name = "Баллы за труды без грифа и без соавторства:",
                            Number = 10,
                            TableId = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243")
                        },
                        new
                        {
                            Id = new Guid("9c683209-2bc0-498a-9322-56471f1a371f"),
                            Name = "Баллы за труды без грифа в соавторстве:",
                            Number = 11,
                            TableId = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243")
                        },
                        new
                        {
                            Id = new Guid("443f0257-feb8-4408-9b5e-a75c676453f8"),
                            Name = "Баллы за количество практикумов и курсов лекций:",
                            Number = 12,
                            TableId = new Guid("9c3849a0-cbf9-4f3a-89d0-00a948d853cb")
                        },
                        new
                        {
                            Id = new Guid("991662b8-a449-45e2-9122-4acb93c0d7bc"),
                            FieldId = new Guid("77e46c32-2b56-4d81-b043-ff61c6af4c37"),
                            Name = "Баллы за ученое звание:",
                            Number = 13
                        },
                        new
                        {
                            Id = new Guid("3fb5631a-dcb0-40c3-9276-ab2bea495ef5"),
                            Name = "Баллы за награды:",
                            Number = 14,
                            TableId = new Guid("031d1091-d709-44fb-990e-45ad61c06a67")
                        },
                        new
                        {
                            Id = new Guid("f3f88843-f588-4876-a6c5-bb34cf393294"),
                            Name = "Баллы за профессиональное развитие:",
                            Number = 15,
                            TableId = new Guid("541417e0-1140-44be-b702-4472fb0dc523")
                        },
                        new
                        {
                            Id = new Guid("0612d964-438d-4e26-843f-b6f008bcf915"),
                            Name = "Баллы за научные публикации:",
                            Number = 16,
                            TableId = new Guid("01420ddd-b623-4064-9304-b5528d7745e2")
                        },
                        new
                        {
                            Id = new Guid("af327f13-d7f1-4b14-9172-3ec807a15a6c"),
                            Name = "Баллы по базе Scopus:",
                            Number = 17,
                            TableId = new Guid("83f54004-1fc8-4c74-8e47-02cf941de0f3")
                        },
                        new
                        {
                            Id = new Guid("0036a46e-5c25-4b38-86ea-1752debc80d0"),
                            Name = "Баллы по базе РИНЦ:",
                            Number = 18,
                            TableId = new Guid("83f54004-1fc8-4c74-8e47-02cf941de0f3")
                        },
                        new
                        {
                            Id = new Guid("88e4a97c-def0-4a2a-a34f-7ac8637915aa"),
                            FieldId = new Guid("733f5938-579b-4393-8c4e-acbf2f48948f"),
                            Name = "Баллы за количество защитившихся кандидатов наук:",
                            Number = 19
                        },
                        new
                        {
                            Id = new Guid("fe3c074d-7f97-4299-ad78-41e4167a41e3"),
                            FieldId = new Guid("a8c5537e-f68e-4e3d-8a64-a67f97dce2d3"),
                            Name = "Баллы за количество защитившихся докторов наук:",
                            Number = 20
                        },
                        new
                        {
                            Id = new Guid("a40819d6-3730-432b-a56e-3c3800ac8c4c"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве руководителя:",
                            Number = 21,
                            TableId = new Guid("d17160f7-fa8e-467d-88e8-bbfc32442f20")
                        },
                        new
                        {
                            Id = new Guid("1bfcb989-46c2-4d98-88d7-7b56bbcda8f2"),
                            Name = "Баллы за выполненные НИР/НИОКР в качестве исполнителя:",
                            Number = 22,
                            TableId = new Guid("d17160f7-fa8e-467d-88e8-bbfc32442f20")
                        },
                        new
                        {
                            Id = new Guid("e9ff14cb-b476-4a84-a88e-58dfdf36d117"),
                            Name = "Баллы за количество объектов интеллектуальной собственности:",
                            Number = 23,
                            TableId = new Guid("9f7ee56e-fa4a-4b03-a9a4-27fb416851b7")
                        },
                        new
                        {
                            Id = new Guid("af1c9c12-adc8-4767-a617-8403ab32e3d2"),
                            Name = "Баллы за количество разработок:",
                            Number = 24,
                            TableId = new Guid("3c4b6ed1-56ea-4f71-a591-1c6f0b10d819")
                        },
                        new
                        {
                            Id = new Guid("b5da63be-512e-4351-ba57-0700f520b0b4"),
                            Name = "Оценка уровня предоставленной работы:",
                            Number = 25
                        },
                        new
                        {
                            Id = new Guid("7bb4df6d-3c23-4d68-a02b-8359a022e861"),
                            Name = "Использование в представленной работе инновационных методов (проблемного и проективного обучения, тренинговых форм, модульно-кредитных, модульно-рейтинговых систем обучения и контроля знаний):",
                            Number = 26
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("MarkBlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c853da8c-8f98-43d9-8b7c-7aea9d31668e"),
                            Name = "Основной",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("25776156-d171-4192-bd2b-00f8739c6649"),
                            Name = "Образовательная деятельность",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("027b7dc8-cbb1-478d-9f86-7b40af56d5d8"),
                            Name = "Методическая деятельность",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("41c0cbcd-14e0-4087-a355-4bbc2fb6c45a"),
                            Name = "Профессиональные показатели",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("49666092-a1e0-4077-bc0a-1612b76ff32a"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("b4e99c06-3c49-43ab-ab59-3c4f7131a5ed"),
                            Name = "Инновационная и иная деятельность",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("28ad83d3-cadd-425a-8224-e0940d3b994a"),
                            Name = "Конкурсная работа",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("fe08550e-3681-4aab-a58b-890e3ac215a6"),
                            Name = "Итог",
                            Number = 8
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MarkId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarkId");

                    b.HasIndex("ApplicationId", "MarkId")
                        .IsUnique();

                    b.ToTable("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EditBlockId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("EditBlockId", "Name")
                        .IsUnique();

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("031d1091-d709-44fb-990e-45ad61c06a67"),
                            EditBlockId = new Guid("2f6d1322-adec-4762-a55e-1be6fa7d001e"),
                            Name = "Награждение премиями, наградами в области научно-педагогической деятельности городского, всероссийского или международного уровня (в том числе зарубежными), победы в профессиональных конкурсах за весь период научно-педагогической деятельности",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("541417e0-1140-44be-b702-4472fb0dc523"),
                            EditBlockId = new Guid("2f6d1322-adec-4762-a55e-1be6fa7d001e"),
                            Name = "Сведения о профессиональном развитии участника конкурса за последние 5 лет (курсы повышения квалификации/ стажировки)",
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("d392e8bb-d667-4308-a489-8ed071be5d6e"),
                            EditBlockId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            Name = "Учебная нагрузка за предыдущий учебный год (за исключением методической)",
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("b0ff3bbc-b9c3-41fb-8c31-15fad932da83"),
                            EditBlockId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            Name = "Список подготовленных под руководством участника конкурса студентов, бакалавров, магистров/специалистов, аспирантов, адъюнктов, ординаторов, докторантов, получивших самостоятельное признание",
                            Number = 4
                        },
                        new
                        {
                            Id = new Guid("ab611c30-692c-4a76-9e36-8b228db474e7"),
                            EditBlockId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            Name = "Сведения о работе, выполняемой участником конкурса в области научно-педагогической деятельности по совместительству (не по основному месту работы) в высшем учебном заведении, академическом институте, отраслевом научно-исследовательском институте, профессиональной образовательной организации, общеобразовательной организации за предыдущий учебный год",
                            Number = 5
                        },
                        new
                        {
                            Id = new Guid("1c4fc68d-3409-41f7-809f-cdc3b34a0243"),
                            EditBlockId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            Name = "Монографии, учебники, учебные и учебно-методические пособия с грифами и без грифов УМО, Министерств РФ или государственных академий наук, изданные типографским способом за последние 5 лет",
                            Number = 6
                        },
                        new
                        {
                            Id = new Guid("9c3849a0-cbf9-4f3a-89d0-00a948d853cb"),
                            EditBlockId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            Name = "Список лабораторных практикумов и курсов лекций (разработанных самостоятельно участником конкурса) за последние 5 лет",
                            Number = 7
                        },
                        new
                        {
                            Id = new Guid("d299e65d-4ad5-4cee-99dd-1ac6abfe1b2a"),
                            EditBlockId = new Guid("8ad58472-8e8a-4ae9-b718-b143bfe693e0"),
                            Name = "Список разработанных онлайн-курсов на открытых платформах за последние 5 лет",
                            Number = 8
                        },
                        new
                        {
                            Id = new Guid("01420ddd-b623-4064-9304-b5528d7745e2"),
                            EditBlockId = new Guid("82dbb908-7b74-4ede-8455-c73a23b11c88"),
                            Name = "Список научных публикаций за последние 5 лет",
                            Number = 9
                        },
                        new
                        {
                            Id = new Guid("83f54004-1fc8-4c74-8e47-02cf941de0f3"),
                            EditBlockId = new Guid("82dbb908-7b74-4ede-8455-c73a23b11c88"),
                            Name = "Персональные идентификаторы и показатели",
                            Number = 10
                        },
                        new
                        {
                            Id = new Guid("d17160f7-fa8e-467d-88e8-bbfc32442f20"),
                            EditBlockId = new Guid("82dbb908-7b74-4ede-8455-c73a23b11c88"),
                            Name = "Список выполненных НИР / НИОКР с финансированием в размере от 200 тыс. руб. и выше за последние 5 лет",
                            Number = 11
                        },
                        new
                        {
                            Id = new Guid("9f7ee56e-fa4a-4b03-a9a4-27fb416851b7"),
                            EditBlockId = new Guid("82dbb908-7b74-4ede-8455-c73a23b11c88"),
                            Name = "Список объектов интеллектуальной собственности, созданных участником конкурса за весь период научно-педагогической деятельности (созданных самостоятельно / в соавторстве), официально зарегистрированных в установленном порядке (в России / за рубежом)",
                            Number = 12
                        },
                        new
                        {
                            Id = new Guid("3c4b6ed1-56ea-4f71-a591-1c6f0b10d819"),
                            EditBlockId = new Guid("82dbb908-7b74-4ede-8455-c73a23b11c88"),
                            Name = "Перечень разработок, внедренных на предприятиях и организациях реального сектора экономики (в России / за рубежом)",
                            Number = 13
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f42cda7-76d7-4497-a372-efff3a3f94e9"),
                            Name = "Научно-педагогическая деятельность",
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("64099bec-86e4-4fb0-ab65-d478a98eeaf2"),
                            Name = "Научно-исследовательская деятельность",
                            Number = 2
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a413cab-9caf-4380-ab66-916e4219e4f9"),
                            Name = "User 1",
                            Username = "admin@mail.ru"
                        },
                        new
                        {
                            Id = new Guid("cabd5c82-cd76-46b9-9669-3a02d763f2d9"),
                            Name = "User 2",
                            Username = "user@mail.ru"
                        });
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DataTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("332df2e2-d063-4b7b-8c80-c86a21fbfe77"),
                            Name = "int"
                        },
                        new
                        {
                            Id = new Guid("7c7297a8-6df6-446b-9026-f53fcb4060bc"),
                            Name = "string"
                        },
                        new
                        {
                            Id = new Guid("533327b4-b45a-40eb-83fd-4f045d839a9d"),
                            Name = "bool"
                        },
                        new
                        {
                            Id = new Guid("f44c7810-0b74-4510-abb5-b2d4898f8662"),
                            Name = "DateTime"
                        });
                });

            modelBuilder.Entity("EditBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", null)
                        .WithMany()
                        .HasForeignKey("EditBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FieldMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", null)
                        .WithMany()
                        .HasForeignKey("FieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTable", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Table", null)
                        .WithMany()
                        .HasForeignKey("TablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkBlockTrack", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkMarkBlock", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.MarkBlock", null)
                        .WithMany()
                        .HasForeignKey("MarkBlocksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", null)
                        .WithMany()
                        .HasForeignKey("MarksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ServerApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Track", "Track")
                        .WithMany("Applications")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.UserInfo", "UserInfo")
                        .WithMany("Applications")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.CellVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("CellVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Column", "Column")
                        .WithMany("CellVals")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Row", "Row")
                        .WithMany("CellVals")
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Column");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Columns")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Columns")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Fields")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.ValuesType", "ValueType")
                        .WithMany("Fields")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.FieldVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("FieldVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("FieldVals")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Field", "Field")
                        .WithMany("Marks")
                        .HasForeignKey("FieldId");

                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Marks")
                        .HasForeignKey("TableId");

                    b.Navigation("Field");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.MarkVal", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.ApplicationForm", "Application")
                        .WithMany("MarkVals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Data.Entities.Mark", "Mark")
                        .WithMany("MarkVals")
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Mark");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.Table", "Table")
                        .WithMany("Rows")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.HasOne("ServerApp.Data.Entities.EditBlock", "EditBlock")
                        .WithMany("Tables")
                        .HasForeignKey("EditBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EditBlock");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ApplicationForm", b =>
                {
                    b.Navigation("CellVals");

                    b.Navigation("FieldVals");

                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Column", b =>
                {
                    b.Navigation("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.EditBlock", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Field", b =>
                {
                    b.Navigation("FieldVals");

                    b.Navigation("Marks");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Mark", b =>
                {
                    b.Navigation("MarkVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Row", b =>
                {
                    b.Navigation("CellVals");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Table", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Marks");

                    b.Navigation("Rows");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.Track", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.UserInfo", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ServerApp.Data.Entities.ValuesType", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
